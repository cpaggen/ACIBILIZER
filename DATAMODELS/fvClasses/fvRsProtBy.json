{
        "fv:RsProtBy": {
            "contains": {
                "aaa:RbacAnnotation": "",
                "fault:Counts": "",
                "fault:Inst": "",
                "fv:TabooCtxDefCont": "",
                "health:Inst": "",
                "tag:Annotation": "",
                "tag:Tag": ""
            },
            "rnMap": {
                "annotationKey-": "tag:Annotation",
                "fault-": "fault:Inst",
                "fltCnts": "fault:Counts",
                "health": "health:Inst",
                "rbacDom-": "aaa:RbacAnnotation",
                "tabooCtxdefDn-": "fv:TabooCtxDefCont",
                "tagKey-": "tag:Tag"
            },
            "identifiedBy": [
                "tnVzTabooName"
            ],
            "rnFormat": "rsprotBy-{tnVzTabooName}",
            "containedBy": {
                "cloud:EPg": "",
                "cloud:ExtEPg": "",
                "cloud:ISvcEPg": "",
                "cloud:SvcEPg": "",
                "dhcp:CRelPg": "",
                "dhcp:PRelPg": "",
                "fv:AEPg": "",
                "fv:ESg": "",
                "fv:TnlEPg": "",
                "infra:CEPg": "",
                "infra:PEPg": "",
                "l2ext:InstP": "",
                "l3ext:InstP": "",
                "l3ext:InstPDef": "",
                "mgmt:InB": "",
                "vns:EPpInfo": "",
                "vns:REPpInfo": "",
                "vns:SDEPpInfo": "",
                "vns:SHEPpInfo": ""
            },
            "superClasses": [
                "pol:NToRef",
                "reln:To",
                "reln:Inst"
            ],
            "subClasses": {

            },
            "relationInfo": {
                "type": "named",
                "cardinality": "n-to-m",
                "fromMo": "fv:EPg",
                "fromRelMo": "fv:RsProtBy",
                "toMo": "vz:Taboo",
                "toRelMo": "vz:RtProtBy",
                "enforceable": true,
                "resolvable": true
            },
            "dnFormats": [
                "uni/tn-{name}/cloudapp-{name}/cloudsvcepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/cloudapp-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/ap-{name}/esg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/cloudapp-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/cloudapp-{name}/rsprotBy-{tnVzTabooName}",
                "uni/svcdefcont/tensvcdef-{name}/ldevdef-[{lDevDn}]/sepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/ldevdef-[{lDevDn}]/sepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/cloudapp-{name}/sepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/cloudapp-{name}/cloudextepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/cloudapp-{name}/cloudepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/cloudapp-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/Tnlepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/LDevInst-[{priKey}]-ctx-{ctxName}/epgDn-[{shEpgDn}]/rsprotBy-{tnVzTabooName}",
                "outdefcont-{id}/rsoutDefContToOut-[{tDn}]/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/acIpToIp-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/acExtToEp-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/acEpToExt-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/acEpToEp-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/acAnyToEp-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/acEpToAny-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/epgToEp-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/epToEpg-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/ipToEpg-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/epgToIp-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/epgToEpg-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/epp/sec-[{epgPKey}]/ac-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/epp/fv-[{epgPKey}]/ac-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/epp/rtd-[{epgPKey}]/ac-{name}/acl3outcont/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/ldevCtx-c-{ctrctNameOrLbl}-g-{graphNameOrLbl}-n-{nodeNameOrLbl}/lIfCtx-c-{connNameOrLbl}/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/outdef-{name}/instPdef-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/LDevInst-[{priKey}]-ctx-{ctxName}/bd-[{bdDn}]/rsprotBy-{tnVzTabooName}",
                "uni/ldev-[{priKey}]-ctx-[{ctxDn}]-bd-[{bdDn}]/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/LDevInst-[{priKey}]-ctx-{ctxName}/G-{graphRn}-N-{nodeRn}-C-{connRn}/rsprotBy-{tnVzTabooName}",
                "uni/vDev-[{priKey}]-tn-[{tnDn}]-ctx-{ctxName}/rndrInfo/eppContr/G-{graphRn}-N-{nodeRn}-C-{connRn}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/clp-{name}/cepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/provp-{name}/pepg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/provp-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/clp-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/mgmtp-{name}/inb-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/ap-{name}/epg-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/out-{name}/instP-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/l2out-{name}/instP-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/clp-{name}/cdhcp-{name}/rsprotBy-{tnVzTabooName}",
                "uni/tn-{name}/provp-{name}/pdhcp-{name}/rsprotBy-{tnVzTabooName}"
            ],
            "writeAccess": [
                "admin",
                "tenant-epg",
                "tenant-network-profile"
            ],
            "readAccess": [
                "admin",
                "tenant-epg",
                "tenant-network-profile"
            ],
            "faults": {
                "F0973": "fltFvRsProtByResolveFail"
            },
            "events": {
                "E4214180": "creation||fv:RsProtBy",
                "E4214181": "modification||fv:RsProtBy",
                "E4214182": "deletion||fv:RsProtBy"
            },
            "stats": {

            },
            "isAbstract": false,
            "isConfigurable": true,
            "isContextRoot": false,
            "isDeprecated": false,
            "isEncrypted": false,
            "isExportable": true,
            "isPersistent": true,
            "isSubjectToQuota": true,
            "isObservable": true,
            "hasStats": false,
            "isStat": false,
            "isFaultable": true,
            "isDomainable": false,
            "isHealthScorable": true,
            "shouldCollectHealthStats": false,
            "healthCollectionSource": "faults",
            "hasEventRules": false,
            "abstractionLayer": "regular",
            "apicNxProcessing": false,
            "monitoringPolicySource": "Parent",
            "isCreatableDeletable": "always",
            "platformFlavors": [

            ],
            "classId": "1916",
            "className": "RsProtBy",
            "classPkg": "fv",
            "featureTag": "",
            "moCategory": "RelationshipToLocal",
            "label": "Taboo Contract Association",
            "comment": [
                "The taboo contract for which the EPG will be a provider and consumer."
            ],
            "properties": {
                "annotation": {
                    "comment": [
                         "User annotation. Suggested format orchestrator:value"
                    ],
                    "isConfigurable": true,
                    "propGlobalId": "37654",
                    "propLocalId": "8719",
                    "label": "Annotation",
                    "baseType": "string:Basic",
                    "modelType": "mo:Annotation",
                    "needsPropDelimiters": false,
                    "uitype": "string",
                    "createOnly": false,
                    "readWrite": true,
                    "readOnly": false,
                    "isNaming": false,
                    "secure": false,
                    "implicit": false,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validators": [
                         {"min" : 0, "max": 128,
                             "regexs": [
                                 {"regex" : "^[a-zA-Z0-9_.:-]+$", "type": "include"}
                             ]
                         }
                    ],
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "childAction": {
                    "comment": [
                         "Delete or ignore. For internal use only."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "4",
                    "propLocalId": "5",
                    "label": "childAction",
                    "baseType": "scalar:Bitmask32",
                    "modelType": "mo:ModificationChildAction",
                    "needsPropDelimiters": false,
                    "uitype": "bitmask",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "16384", "localName": "deleteAll",
                             "platformFlavors": [

                             ],
                             "label": "deleteAll "},
                         { "value": "8192", "localName": "deleteNonPresent",
                             "platformFlavors": [

                             ],
                             "label": "deleteNonPresent "},
                         { "value": "4096", "localName": "ignore",
                             "platformFlavors": [

                             ],
                             "label": "ignore "}
                    ],
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "dn": {
                    "comment": [
                         "A tag or metadata is a non-hierarchical keyword or term assigned to the fabric module."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "1",
                    "propLocalId": "2",
                    "label": "dn",
                    "baseType": "reference:BinRef",
                    "modelType": "reference:BinRef",
                    "needsPropDelimiters": true,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "extMngdBy": {
                    "comment": [
                         "Indicates which orchestrator is managing this MO"
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "39793",
                    "propLocalId": "8023",
                    "label": "Managed By",
                    "baseType": "scalar:Bitmask32",
                    "modelType": "mo:ExtMngdByType",
                    "needsPropDelimiters": false,
                    "uitype": "bitmask",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "undefined", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "1", "localName": "msc",
                             "platformFlavors": [

                             ],
                             "label": "msc "},
                         { "value": "0", "localName": "undefined",
                             "platformFlavors": [

                             ],
                             "label": "undefined "}
                    ],
                    "default": "undefined",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "forceResolve": {
                    "comment": [
                         "Whether the relation should force pull the target."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "107",
                    "propLocalId": "83",
                    "label": "forceResolve",
                    "baseType": "scalar:Bool",
                    "modelType": "scalar:Bool",
                    "needsPropDelimiters": false,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "true", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "false", "localName": "no",
                             "platformFlavors": [

                             ],
                             "label": "No "},
                         { "value": "true", "localName": "yes",
                             "platformFlavors": [

                             ],
                             "label": "Yes "}
                    ],
                    "default": "yes",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "lcOwn": {
                    "comment": [
                         "A value that indicates how this object was created. For internal use only."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "9",
                    "propLocalId": "9",
                    "label": "lcOwn",
                    "baseType": "scalar:Enum8",
                    "modelType": "mo:Owner",
                    "needsPropDelimiters": false,
                    "uitype": "enum",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "local", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "4", "localName": "implicit",
                             "platformFlavors": [

                             ],
                             "label": "Implicit "},
                         { "value": "0", "localName": "local",
                             "platformFlavors": [

                             ],
                             "label": "Local "},
                         { "value": "1", "localName": "policy",
                             "platformFlavors": [

                             ],
                             "label": "Policy "},
                         { "value": "2", "localName": "replica",
                             "platformFlavors": [

                             ],
                             "label": "Replica "},
                         { "value": "3", "localName": "resolveOnBehalf",
                             "platformFlavors": [

                             ],
                             "label": "ResolvedOnBehalf "}
                    ],
                    "default": "local",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "modTs": {
                    "comment": [
                         "The time when this object was last modified."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "7",
                    "propLocalId": "7",
                    "label": "modTs",
                    "baseType": "scalar:Date",
                    "modelType": "mo:TStamp",
                    "needsPropDelimiters": false,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "never", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "0", "localName": "never",
                             "platformFlavors": [

                             ],
                             "label": "never "}
                    ],
                    "default": "never",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "monPolDn": {
                    "comment": [
                         "The monitoring policy attached to this observable object."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "14263",
                    "propLocalId": "228",
                    "label": "Monitoring policy",
                    "baseType": "reference:BinRef",
                    "modelType": "reference:BinRef",
                    "needsPropDelimiters": true,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "rType": {
                    "comment": [
                         "Represents the type of resolver."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "106",
                    "propLocalId": "82",
                    "label": "rType",
                    "baseType": "scalar:Enum8",
                    "modelType": "reln:ResolverType",
                    "needsPropDelimiters": false,
                    "uitype": "enum",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "mo", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "3", "localName": "local",
                             "platformFlavors": [

                             ],
                             "label": "local "},
                         { "value": "1", "localName": "mo",
                             "platformFlavors": [

                             ],
                             "label": "mo "},
                         { "value": "2", "localName": "service",
                             "platformFlavors": [

                             ],
                             "label": "service "}
                    ],
                    "default": "mo",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "rn": {
                    "comment": [
                         "Identifies an object from its siblings within the context of its parent object. The distinguished name contains a sequence of relative names."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "2",
                    "propLocalId": "3",
                    "label": "rn",
                    "baseType": "reference:BinRN",
                    "modelType": "reference:BinRN",
                    "needsPropDelimiters": true,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "state": {
                    "comment": [
                         "Represents the state of the relationship."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "103",
                    "propLocalId": "26",
                    "label": "State",
                    "baseType": "scalar:Enum8",
                    "modelType": "reln:State",
                    "needsPropDelimiters": false,
                    "uitype": "enum",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "5", "localName": "cardinality-violation",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "cardinality violation - When relations are created such that\n                     they violate the cardinality, state of the relation would be\n                     set to this."
                             ],
                             "label": "cardinality-violation "},
                         { "value": "unformed", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "1", "localName": "formed",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "the relationship is formed with the target object"
                             ],
                             "label": "formed "},
                         { "value": "4", "localName": "invalid-target",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "invalid target DN"
                             ],
                             "label": "invalid-target "},
                         { "value": "2", "localName": "missing-target",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "target does not exist"
                             ],
                             "label": "missing-target "},
                         { "value": "0", "localName": "unformed",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "the relationship is not formed"
                             ],
                             "label": "unformed "}
                    ],
                    "default": "unformed",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "stateQual": {
                    "comment": [
                         "Represents the state qualifier of the relationship."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "104",
                    "propLocalId": "80",
                    "label": "State Qualifier",
                    "baseType": "scalar:Enum8",
                    "modelType": "reln:StateQual",
                    "needsPropDelimiters": false,
                    "uitype": "enum",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "2", "localName": "default-target",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "target not specified, using default"
                             ],
                             "label": "default-target "},
                         { "value": "none", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "1", "localName": "mismatch-target",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "target not found, using default"
                             ],
                             "label": "mismatch-target "},
                         { "value": "0", "localName": "none",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "no issue"
                             ],
                             "label": "none "}
                    ],
                    "default": "none",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "status": {
                    "comment": [
                         "The upgrade status. This property is for internal use only."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "3",
                    "propLocalId": "4",
                    "label": "status",
                    "baseType": "scalar:Bitmask32",
                    "modelType": "mo:ModificationStatus",
                    "needsPropDelimiters": false,
                    "uitype": "bitmask",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "2", "localName": "created",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "In a setter method: specifies that an object should be created. An error is returned if the object already exists.  \nIn the return value of a setter method: indicates that an object has been created.  \n"
                             ],
                             "label": "created "},
                         { "value": "8", "localName": "deleted",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "In a setter method: specifies that an object should be deleted.  \nIn the return value of a setter method: indicates that an object has been deleted.\n"
                             ],
                             "label": "deleted "},
                         { "value": "4", "localName": "modified",
                             "platformFlavors": [

                             ],
                             "comment": [
                                 "In a setter method: specifies that an object should be modified  \nIn the return value of a setter method: indicates that an object has been modified.\n"
                             ],
                             "label": "modified "}
                    ],
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "tCl": {
                    "comment": [
                         "null"
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "12232",
                    "propLocalId": "78",
                    "label": "Target-class",
                    "baseType": "scalar:Enum16",
                    "modelType": "reln:ClassId",
                    "needsPropDelimiters": false,
                    "uitype": "enum",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": true,
                    "isLike": false,
                    "validValues": [
                         { "value": "1306", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "0", "localName": "unspecified",
                             "platformFlavors": [

                             ],
                             "label": "unspecified "},
                         { "value": "1306", "localName": "vzTaboo",
                             "platformFlavors": [

                             ],
                             "label": " "}
                    ],
                    "default": "vzTaboo",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "tContextDn": {
                    "comment": [
                         "Specifies the target context distinguished name."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "4990",
                    "propLocalId": "2530",
                    "label": "Target-context",
                    "baseType": "reference:BinRef",
                    "modelType": "reln:Dn",
                    "needsPropDelimiters": true,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "tDn": {
                    "comment": [
                         "The distinguished name of the target."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "100",
                    "propLocalId": "77",
                    "label": "Target-dn",
                    "baseType": "reference:BinRef",
                    "modelType": "reln:Dn",
                    "needsPropDelimiters": true,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "tRn": {
                    "comment": [
                         "Specifies the target's related name."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "4989",
                    "propLocalId": "2529",
                    "label": "Target-rn",
                    "baseType": "string:Basic",
                    "modelType": "string:Basic",
                    "needsPropDelimiters": false,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "tType": {
                    "comment": [
                         "Represents the type of target. The target type for this object is named."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "4988",
                    "propLocalId": "81",
                    "label": "tType",
                    "baseType": "scalar:Enum8",
                    "modelType": "reln:TargetType",
                    "needsPropDelimiters": false,
                    "uitype": "enum",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": true,
                    "isLike": false,
                    "validValues": [
                         { "value": "2", "localName": "all",
                             "platformFlavors": [

                             ],
                             "label": "all "},
                         { "value": "name", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "1", "localName": "mo",
                             "platformFlavors": [

                             ],
                             "label": "mo "},
                         { "value": "0", "localName": "name",
                             "platformFlavors": [

                             ],
                             "label": "name "}
                    ],
                    "default": "name",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "tnVzTabooName": {
                    "comment": [
                         "A contract for denying specific classes of traffic. Taboo rules are applied in the hardware before applying the rules of regular contracts. Without a contract, the default forwarding policy is to not allow any communication between EPGs."
                    ],
                    "isConfigurable": true,
                    "propGlobalId": "12231",
                    "propLocalId": "3996",
                    "label": "Name",
                    "baseType": "string:Basic",
                    "modelType": "naming:Name",
                    "needsPropDelimiters": false,
                    "uitype": "string",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": false,
                    "isNaming": true,
                    "secure": false,
                    "implicit": false,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validators": [
                         {"min" : 1, "max": 64,
                             "regexs": [
                                 {"regex" : "^[a-zA-Z0-9_.:-]+$", "type": "include"}
                             ]
                         }
                    ],
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "triggerSt": {
                    "comment": [
                         "The ability to trigger a task"
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "16151",
                    "propLocalId": "898",
                    "label": "triggerSt",
                    "baseType": "scalar:Enum8",
                    "modelType": "fv:TriggerSt",
                    "needsPropDelimiters": false,
                    "uitype": "enum",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validValues": [
                         { "value": "not_triggerable", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "},
                         { "value": "0", "localName": "not_triggerable",
                             "platformFlavors": [

                             ],
                             "label": "not_triggerable "},
                         { "value": "1", "localName": "triggerable",
                             "platformFlavors": [

                             ],
                             "label": "triggerable "}
                    ],
                    "default": "not_triggerable",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "uid": {
                    "comment": [
                         "A unique identifier for this object."
                    ],
                    "isConfigurable": false,
                    "propGlobalId": "8",
                    "propLocalId": "8",
                    "label": "uid",
                    "baseType": "scalar:Uint16",
                    "modelType": "scalar:Uint16",
                    "needsPropDelimiters": false,
                    "uitype": "auto",
                    "createOnly": false,
                    "readWrite": false,
                    "readOnly": true,
                    "isNaming": false,
                    "secure": false,
                    "implicit": true,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                },
                "userdom": {
                    "isConfigurable": true,
                    "propGlobalId": "60657",
                    "propLocalId": "13244",
                    "label": "userdom",
                    "baseType": "string:Basic",
                    "modelType": "mo:UserDomType",
                    "needsPropDelimiters": false,
                    "uitype": "string",
                    "createOnly": false,
                    "readWrite": true,
                    "readOnly": false,
                    "isNaming": false,
                    "secure": false,
                    "implicit": false,
                    "mandatory": false,
                    "isOverride": false,
                    "isLike": false,
                    "validators": [
                         {"min" : 0, "max": 1024,
                             "regexs": [
                                 {"regex" : "^[a-zA-Z0-9_.:-]+$", "type": "include"}
                             ]
                         }
                    ],
                    "validValues": [
                         { "value": "all", "localName": "defaultValue",
                             "platformFlavors": [

                             ],
                             "label": " "}
                    ],
                    "default": "all",
                    "platformFlavors": [

                    ],
                    "isDeprecated": false
                }
            }
        }
}
