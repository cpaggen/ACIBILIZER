---
- hosts: 10.48.168.3
  connection: local
  vars:
    aci_login: &aci_login
      hostname: '{{ inventory_hostname }}'
      username: ansible
      password: random
      use_proxy: no
      use_ssl: yes
      validate_certs: no
    contracts:
      - contract: "contract-one"
        subject: "subject1"
        filter: "web"
      - contract: "contract-two"
        subject: "subject2"
        filter: "ping"
    filters:
      - filter: "web"
        entry: "https"
        protocol: "tcp"
        port: "443"
      - filter: "ping"
        entry: "icmp"
        protocol: "icmp"
        port: "0"

  tasks:
  - name: Add a tenant using aci_tenant
    aci_tenant:
      <<: *aci_login
      tenant: leopoldo
      description: 'git push event test'
      state: present

  - name: CREATE ACI TENANT VRF
    aci_vrf:
      <<: *aci_login
      vrf: marcel
      tenant: leopoldo

  - name: Create BD
    aci_bd:
      <<: *aci_login
      tenant: leopoldo
      bd: lenilsou
      vrf: marcel
      arp_flooding: True
      l2_unknown_unicast: proxy
      l3_unknown_multicast: flood
      multi_dest: bd-flood

  - name: CREATE ACI TENANT BD SUBNET 1
    aci_bd_subnet:
      <<: *aci_login
      tenant: leopoldo
      bd: lenilsou
      gateway: 192.168.66.1
      mask: 24

  - name: CREATE ACI TENANT BD SUBNET 2
    aci_bd_subnet:
      <<: *aci_login
      tenant: leopoldo
      bd: lenilsou
      gateway: 192.168.67.1
      mask: 24
  
  - name: CREATE ACI TENANT APP PROFILE
    aci_ap:
      <<: *aci_login
      ap: fonzo
      tenant: leopoldo

  - name: CREATE ACI EPG 1
    aci_epg:
      <<: *aci_login
      epg: tintin
      ap: fonzo
      tenant: leopoldo
      bd: lenilsou

  - name: CREATE ACI EPG 2
    aci_epg:
      <<: *aci_login
      epg: milou
      ap: fonzo
      tenant: leopoldo
      bd: lenilsou

  - name: Associate VMM domain to EPG1
    aci_epg_to_domain:
      <<: *aci_login
      epg: tintin
      ap: fonzo
      tenant: leopoldo
      domain: dot3-vmm
      domain_type: 'vmm'
      vm_provider: 'vmware'
      encap_mode: 'auto'
      resolution_immediacy: 'pre-provision'
      deploy_immediacy: 'immediate'

  - name: Associate VMM domain to EPG2
    aci_epg_to_domain:
      <<: *aci_login
      epg: milou
      ap: fonzo
      tenant: leopoldo
      domain: dot3-vmm
      domain_type: 'vmm'
      vm_provider: 'vmware'
      encap_mode: 'auto'
      resolution_immediacy: 'pre-provision'
      deploy_immediacy: 'immediate'

  - name: Read data from CSV file to be used to configure ACI
    community.general.read_csv:
      path: ports.csv
    register: ports

  - name: deploy static path bindings for an EPG
    cisco.aci.aci_static_binding_to_epg:
      <<: *aci_login
      tenant: '{{ item.tenant }}'
      ap: '{{ item.ap }}'
      epg: '{{ item.epg }}'
      encap_id: '{{ item.encap_id }}'
      deploy_immediacy: '{{ item.deploy }}'
      interface_mode: '{{ item.int_mode }}'
      interface_type: '{{ item.int_type }}'
      pod_id: '{{ item.pod_id }}'
      leafs: '{{ item.leaf }}'
      interface: '{{ item.int }}'
    loop: '{{ ports.list }}'

  - name: create web filter
    cisco.aci.aci_filter:
      <<: *aci_login
      tenant: leopoldo
      filter: web_filter
    delegate_to: localhost

  - name: create db filter
    cisco.aci.aci_filter:
      <<: *aci_login
      tenant: leopoldo
      filter: database_filter
    delegate_to: localhost

  - name: create web filter entry
    cisco.aci.aci_filter_entry:
      <<: *aci_login
      tenant: leopoldo
      filter: web_filter
      entry: https
      ether_type: ip
      ip_protocol: tcp
      dst_port: 443
    delegate_to: localhost

  - name: create db filter entry
    cisco.aci.aci_filter_entry:
      <<: *aci_login
      tenant: leopoldo
      filter: database_filter
      entry: sql
      ether_type: ip
      ip_protocol: tcp
      dst_port: 3306
    delegate_to: localhost

  - name: create port range to test codegen logic
    cisco.aci.aci_filter_entry:
      <<: *aci_login
      entry: rangetest
      filter: web_filter
      tenant: leopoldo
      ether_type: ip
      ip_protocol: tcp
      dst_port_start: 8443
      dst_port_end: 8449
      source_port_start: 1024
      source_port_end: 2048
      tcp_flags:
      - acknowledgment
      - finish
    delegate_to: localhost

  - name: create web contract
    aci_contract:
      <<: *aci_login
      tenant: leopoldo
      contract: web_contract
      scope: context
    delegate_to: localhost

  - name: create db contract
    aci_contract:
      <<: *aci_login
      tenant: leopoldo
      contract: database_contract
      scope: context
    delegate_to: localhost

  - name: create web contract subject
    aci_contract_subject:
      <<: *aci_login
      tenant: leopoldo
      contract: web_contract
      subject: web_subject
    delegate_to: localhost

  - name: create db contract subject
    aci_contract_subject:
      <<: *aci_login
      tenant: leopoldo
      contract: database_contract
      subject: database_subject
    delegate_to: localhost

  - name: web subject to web filter bindings
    aci_contract_subject_to_filter:
      <<: *aci_login
      tenant: leopoldo
      contract: web_contract
      subject: web_subject
      filter: web_filter
    delegate_to: localhost

  - name: db subject to db filter bindings
    aci_contract_subject_to_filter:
      <<: *aci_login
      tenant: leopoldo
      contract: database_contract
      subject: database_subject
      filter: database_filter
    delegate_to: localhost

  - name: bind epg to web contract
    aci_epg_to_contract:
      <<: *aci_login
      tenant: leopoldo
      ap: fonzo
      epg: milou
      contract: web_contract
      contract_type: provider
    delegate_to: localhost

  - name: bind epg to db contract
    aci_epg_to_contract:
      <<: *aci_login
      tenant: leopoldo
      ap: fonzo
      epg: tintin
      contract: database_contract
      contract_type: consumer
    delegate_to: localhost
