ansibleToClass = {
    "__debug1__": "leakInternalSubnet",
    "__debug2__": "leakRoutes",
    "__debug3__": "leakTo",
    "aci_aaa_custom_privilege": "aaaRbacClassPriv",
    "aci_aaa_domain": "aaaDomain",
    "aci_aaa_role": "aaaRole",
    "aci_aaa_ssh_auth": "aaaSshAuth",
    "aci_aaa_user": "aaaUser",
    "aci_aaa_user_certificate": "aaaUserCert",
    "aci_aaa_user_domain": "aaaUserDomain",
    "aci_aaa_user_role": "aaaUserRole",
    "aci_access_port_block_to_access_port": "infraHPortS, infraPortBlk",
    "aci_access_port_to_interface_policy_leaf_profile": "infraHPortS, infraRsAccBaseGrp, infraPortBlk",
    "aci_access_span_dst_group": "spanDestGrp",
    "aci_access_span_filter_group": "spanFilterGrp",
    "aci_access_span_filter_group_entry": "spanFilterEntry",
    "aci_access_span_src_group": "spanSrcGrp",
    "aci_access_span_src_group_src": "spanSrc",
    "aci_access_span_src_group_src_path": "spanRsSrcToPathEp",
    "aci_access_sub_port_block_to_access_port": "infraHPortS, infraSubPortBlk",
    "aci_aep": "infraAttEntityP, infraProvAcc",
    "aci_aep_to_domain": "infraRsDomP",
    "aci_aep_to_epg": "infraRsFuncToEpg",
    "aci_ap": "fvAp",
    "aci_bd": "fvBD",
    "aci_bd_dhcp_label": "dhcpLbl",
    "aci_bd_subnet": "fvSubnet",
    "aci_bd_to_l3out": "fvRsBDToOut",
    "aci_bgp_rr_asn": "bgpRRAsnP",
    "aci_bgp_rr_node": "bgpRRNodeP",
    "aci_bulk_static_binding_to_epg": "fvRsPathAtt",
    "aci_cloud_ap": "cloudApp",
    "aci_cloud_aws_provider": "cloudAwsProvider",
    "aci_cloud_bgp_asn": "cloudBgpAsP",
    "aci_cloud_cidr": "cloudCidr",
    "aci_cloud_ctx_profile": "cloudCtxProfile",
    "aci_cloud_epg": "cloudEPg",
    "aci_cloud_epg_selector": "cloudEPSelector",
    "aci_cloud_external_epg": "cloudExtEPg",
    "aci_cloud_external_epg_selector": "cloudExtEPSelector",
    "aci_cloud_provider": "cloudProvP",
    "aci_cloud_region": "cloudRegion",
    "aci_cloud_subnet": "cloudSubnet",
    "aci_cloud_vpn_gateway": "cloudcloudRouterP",
    "aci_cloud_zone": "cloudZone",
    "aci_config_export_policy": "configExportP",
    "aci_config_rollback": "configImportP",
    "aci_config_snapshot": "configSnapshot, configExportP",
    "aci_contract": "vzBrCP",
    "aci_contract_export": "vzCPIf",
    "aci_contract_subject": "vzSubj",
    "aci_contract_subject_to_filter": "vzRsSubjFiltAtt",
    "aci_contract_subject_to_service_graph": "vzRsSubjGraphAtt",
    "aci_dhcp_relay": "dhcpRelayP",
    "aci_dhcp_relay_provider": "dhcpRelayP",
    "aci_dns_domain": "dnsDomain",
    "aci_dns_profile": "dnsProfile",
    "aci_dns_provider": "dnsProv",
    "aci_domain": "physDomP, vmmDomP, l2extDomP, l3extDomP, fcDomP",
    "aci_domain_to_encap_pool": "infraRsVlanNs",
    "aci_domain_to_vlan_pool": "infraRsVlanNs",
    "aci_encap_pool": "fvnsVlanInstP, fvnsVxlanInstP, fvnsVsanInstP",
    "aci_encap_pool_range": "fvnsEncapBlk, fvnsVsanEncapBlk",
    "aci_epg": "fvAEPg",
    "aci_epg_monitoring_policy": "monEPGPol",
    "aci_epg_subnet": "fvSubnet",
    "aci_epg_to_contract": "fvRsCons, fvRsProv",
    "aci_epg_to_contract_interface": "fvRsConsIf",
    "aci_epg_to_contract_master": "fvRsSecInherited",
    "aci_epg_to_domain": "fvRsDomAtt",
    "aci_esg": "fvESg",
    "aci_esg_contract_master": "fvRsSecInherited",
    "aci_esg_epg_selector": "fvfvEPgSelector",
    "aci_esg_ip_subnet_selector": "fvEPSelector",
    "aci_esg_tag_selector": "fvTagSelector",
    "aci_fabric_leaf_profile": "fabricLeafP",
    "aci_fabric_leaf_switch_assoc": "fabricLeafS, fabricRsLeNodePGrp",
    "aci_fabric_node": "fabricNodeIdentP",
    "aci_fabric_pod_policy_group": "fabricPodPGrp",
    "aci_fabric_scheduler": "fabricSchedulerP",
    "aci_fabric_span_dst_group": "spanDestGrp",
    "aci_fabric_span_src_group": "spanSrcGrp",
    "aci_fabric_span_src_group_src": "spanSrc",
    "aci_fabric_span_src_group_src_node": "spanRsSrcToNode",
    "aci_fabric_span_src_group_src_path": "spanRsSrcToPathEp",
    "aci_fabric_spine_profile": "fabricSpineP",
    "aci_fabric_spine_switch_assoc": "fabricSpineS, fabricRsSpNodePGrp",
    "aci_fabric_switch_block": "fabricNodeBlk",
    "aci_fabric_switch_policy_group": "fabricSwitchPolGrp",
    "aci_file_remote_path": "fileRemotePath",
    "aci_filter": "vzFilter",
    "aci_filter_entry": "vzEntry",
    "aci_firmware_group": "firmwareGroup",
    "aci_firmware_group_node": "firmwareGroupNode",
    "aci_firmware_policy": "firmwarePolicy",
    "aci_firmware_source": "firmwareSource",
    "aci_igmp_interface_policy": "igmpIfPol",
    "aci_interface_blacklist": "l1PhysIfBlacklist",
    "aci_interface_config": "l1PhysIf",
    "aci_interface_description": "l1PhysIf",
    "aci_interface_policy_cdp": "cdpIfPol",
    "aci_interface_policy_fc": "fcIfPol",
    "aci_interface_policy_l2": "l2IfPol",
    "aci_interface_policy_leaf_breakout_port_group": "infraBrkoutPortGrp",
    "aci_interface_policy_leaf_policy_group": "infraAccBndlGrp, infraAccPortGrp",
    "aci_interface_policy_leaf_profile": "infraAccPortP",
    "aci_interface_policy_leaf_profile_fex_policy_group": "infraFexBndlGrp",
    "aci_interface_policy_link_level": "fabricHIfPol",
    "aci_interface_policy_lldp": "lldpIfPol",
    "aci_interface_policy_mcp": "mcpIfPol",
    "aci_interface_policy_ospf": "ospfIfPol",
    "aci_interface_policy_port_channel": "lacpLagPol",
    "aci_interface_policy_port_security": "l2PortSecurityPol",
    "aci_interface_policy_spanning_tree": "stpIfPol",
    "aci_interface_selector_to_switch_policy_leaf_profile": "infraRsAccPortP",
    "aci_l2out": "l2extOut",
    "aci_l2out_extepg": "l2extInstP",
    "aci_l2out_extepg_to_contract": "l2extInstP",
    "aci_l2out_logical_interface_path": "l2extRsPathL2OutAtt",
    "aci_l2out_logical_interface_profile": "l2extLIfP",
    "aci_l2out_logical_node_profile": "l2extLNodeP",
    "aci_l3out": "l3extOut",
    "aci_l3out_bgp_peer": "bgpPeerP",
    "aci_l3out_extepg": "l3extInstPinstP",
    "aci_l3out_extepg_to_contract": "l3extInstP",
    "aci_l3out_extsubnet": "l3extSubnetextsubnet",
    "aci_l3out_interface": "l3extRsPathL3OutAtt",
    "aci_l3out_interface_secondary_ip": "l3extIp",
    "aci_l3out_logical_interface_profile": "l3extLIfP",
    "aci_l3out_logical_interface_profile_ospf_policy": "ospfIfP",
    "aci_l3out_logical_interface_vpc_member": "l3extMember",
    "aci_l3out_logical_node": "l3extRsNodeL3OutAtt",
    "aci_l3out_logical_node_profile": "l3extLNodePlnodep",
    "aci_l3out_route_tag_policy": "l3extRouteTagPol",
    "aci_l3out_static_routes": "l3extipRouteP",
    "aci_l3out_static_routes_nexthop": "ipNexthopP",
    "aci_maintenance_group": "mgmtMaintP",
    "aci_maintenance_group_node": "mgmtMaintP",
    "aci_maintenance_policy": "mgmtMaintP",
    "aci_node_mgmt_epg": "mgmtOoB",
    "aci_ntp_policy": "datetimePol",
    "aci_ntp_server": "datetimeNtpProvider",
    "aci_rest": "mgmtRsRestOutAtt",
    "aci_snmp_client": "snmpClientP",
    "aci_snmp_client_group": "snmpClientGrpP",
    "aci_snmp_community_policy": "snmpCommunityP",
    "aci_snmp_policy": "snmpPol",
    "aci_snmp_user": "snmpUserP",
    "aci_static_binding_to_epg": "fvRsPathAtt",
    "aci_static_node_mgmt_address": "mgmtOoB",
    "aci_switch_leaf_selector": "infraLeafS, infraNodeBlk, infraRsAccNodePGrep",
    "aci_switch_policy_leaf_profile": "infraNodeP",
    "aci_switch_policy_vpc_protection_group": "fabricExplicitGEp, fabricNodePEp",
    "aci_syslog_group": "syslogGroup, syslogConsole, syslogFile and syslogProf",
    "aci_syslog_remote_dest": "syslogRemoteDest",
    "aci_syslog_source": "syslogSrc",
    "aci_system": "topSystem",
    "aci_taboo_contract": "vzBrCP",
    "aci_tag": "tagAliasDelInst",
    "aci_tenant": "fvTenant",
    "aci_tenant_action_rule_profile": "rtctrlAttrP",
    "aci_tenant_ep_retention_policy": "fvEpRetPol",
    "aci_tenant_span_dst_group": "spanDestGrp",
    "aci_tenant_span_src_group": "spanSrcGrp",
    "aci_tenant_span_src_group_src": "spanSrc",
    "aci_tenant_span_src_group_to_dst_group": "spanSpanLbl",
    "aci_vlan_pool": "fvnsVlanInstP",
    "aci_vlan_pool_encap_block": "fvnsEncapBlk",
    "aci_vmm_controller": "vmmCtrlrP",
    "aci_vmm_credential": "vmmUsrAccP",
    "aci_vmm_uplink": "vmmUplinkP",
    "aci_vmm_uplink_container": "vmmUplinkPCont",
    "aci_vmm_vswitch_policy": "vmmDomP",
    "aci_vrf": "fvCtx",
    "aci_vrf_leak_internal_subnet": "fvleakInternalSubnet",
    "aci_vzany_to_contract": "vzRsAnyToProv, vzRsAnyToCons, vzRsAnyToConsIf",
}

def reverse_mapping(mapping):
    reversed_dict = {}
    
    for ansible_name, class_names in mapping.items():
        # Split the class names if there are multiple
        class_names_list = class_names.split(', ')
        
        for class_name in class_names_list:
            if class_name not in reversed_dict:
                reversed_dict[class_name] = ansible_name
    
    return reversed_dict

classToAnsible = reverse_mapping(ansibleToClass)
