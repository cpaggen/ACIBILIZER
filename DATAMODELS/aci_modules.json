[
  {
    "cisco.aci.aci_aaa_user": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage AAA users on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_aaa_user.py",
        "has_action": false,
        "module": "aci_aaa_user",
        "notes": [
          "This module is not idempotent when C(aaa_password) is being used (even if that password was already set identically). This appears to be an inconsistency wrt. the idempotent nature of the APIC REST API. The vendor has been informed. More information in :ref:`the ACI documentation <aci_guide_known_issues>`."
        ],
        "options": {
          "aaa_password": {
            "description": [
              "The password of the locally-authenticated user."
            ],
            "type": "str"
          },
          "aaa_password_lifetime": {
            "description": [
              "The lifetime of the locally-authenticated user password."
            ],
            "type": "int"
          },
          "aaa_password_update_required": {
            "description": [
              "Whether this account needs password update."
            ],
            "type": "bool"
          },
          "aaa_user": {
            "aliases": [
              "name",
              "user"
            ],
            "description": [
              "The name of the locally-authenticated user user to add."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "clear_password_history": {
            "description": [
              "Whether to clear the password history of a locally-authenticated user."
            ],
            "type": "bool"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the AAA user."
            ],
            "type": "str"
          },
          "email": {
            "description": [
              "The email address of the locally-authenticated user."
            ],
            "type": "str"
          },
          "enabled": {
            "description": [
              "The status of the locally-authenticated user account."
            ],
            "type": "bool"
          },
          "expiration": {
            "description": [
              "The expiration date of the locally-authenticated user account."
            ],
            "type": "str"
          },
          "expires": {
            "description": [
              "Whether to enable an expiration date for the locally-authenticated user account."
            ],
            "type": "bool"
          },
          "first_name": {
            "description": [
              "The first name of the locally-authenticated user."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "last_name": {
            "description": [
              "The last name of the locally-authenticated user."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "phone": {
            "description": [
              "The phone number of the locally-authenticated user."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "requirements": [
          "python-dateutil"
        ],
        "seealso": [
          {
            "module": "cisco.aci.aci_aaa_user_certificate"
          },
          {
            "description": "More information about the internal APIC class B(aaa:User).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage AAA users (aaa:User)"
      },
      "examples": "\n- name: Add a user\n  cisco.aci.aci_aaa_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aaa_user: dag\n    aaa_password: AnotherSecretPassword\n    expiration: never\n    expires: no\n    email: dag@wieers.com\n    phone: 1-234-555-678\n    first_name: Dag\n    last_name: Wieers\n    state: present\n  delegate_to: localhost\n\n- name: Remove a user\n  cisco.aci.aci_aaa_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aaa_user: dag\n    state: absent\n  delegate_to: localhost\n\n- name: Query a user\n  cisco.aci.aci_aaa_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aaa_user: dag\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all users\n  cisco.aci.aci_aaa_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_aaa_user_certificate": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage AAA user certificates on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_aaa_user_certificate.py",
        "has_action": false,
        "module": "aci_aaa_user_certificate",
        "notes": [
          "The C(aaa_user) must exist before using this module in your playbook. The M(cisco.aci.aci_aaa_user) module can be used for this."
        ],
        "options": {
          "aaa_user": {
            "description": [
              "The name of the user to add a certificate to."
            ],
            "required": true,
            "type": "str"
          },
          "aaa_user_type": {
            "choices": [
              "appuser",
              "user"
            ],
            "default": "user",
            "description": [
              "Whether this is a normal user or an appuser."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate": {
            "aliases": [
              "cert_data",
              "certificate_data"
            ],
            "description": [
              "The PEM format public key extracted from the X.509 certificate."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The name of the user certificate entry in ACI."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_aaa_user"
          },
          {
            "description": "More information about the internal APIC class B(aaa:UserCert).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage AAA user certificates (aaa:UserCert)"
      },
      "examples": "\n- name: Add a certificate to user\n  cisco.aci.aci_aaa_user_certificate:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aaa_user: admin\n    name: admin\n    certificate_data: '{{ lookup(\"file\", \"pki/admin.crt\") }}'\n    state: present\n  delegate_to: localhost\n\n- name: Remove a certificate of a user\n  cisco.aci.aci_aaa_user_certificate:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aaa_user: admin\n    name: admin\n    state: absent\n  delegate_to: localhost\n\n- name: Query a certificate of a user\n  cisco.aci.aci_aaa_user_certificate:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aaa_user: admin\n    name: admin\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all certificates of a user\n  cisco.aci.aci_aaa_user_certificate:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aaa_user: admin\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_access_port_block_to_access_port": {
      "doc": {
        "author": [
          "Simon Metzger (@smnmtzgr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage port blocks of Fabric interface policy leaf profile interface selectors on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_access_port_block_to_access_port.py",
        "has_action": false,
        "module": "aci_access_port_block_to_access_port",
        "notes": [
          "The C(interface_profile) and C(access_port_selector) must exist before using this module in your playbook. The M(cisco.aci.aci_interface_policy_leaf_profile) and M(cisco.aci.aci_access_port_to_interface_policy_leaf_profile) modules can be used for this."
        ],
        "options": {
          "access_port_selector": {
            "aliases": [
              "name",
              "access_port_selector_name"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile access port selector."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "from_card": {
            "aliases": [
              "from_card_range"
            ],
            "description": [
              "The beginning (from-range) of the card range block for the leaf access port block."
            ],
            "type": "str"
          },
          "from_port": {
            "aliases": [
              "from",
              "fromPort",
              "from_port_range"
            ],
            "description": [
              "The beginning (from-range) of the port range block for the leaf access port block."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "leaf_interface_profile_name",
              "leaf_interface_profile",
              "interface_profile_name"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "port_blk": {
            "aliases": [
              "leaf_port_blk_name",
              "leaf_port_blk"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile access port block."
            ],
            "type": "str"
          },
          "port_blk_description": {
            "aliases": [
              "leaf_port_blk_description"
            ],
            "description": [
              "The description to assign to the C(leaf_port_blk)."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "to_card": {
            "aliases": [
              "to_card_range"
            ],
            "description": [
              "The end (to-range) of the card range block for the leaf access port block."
            ],
            "type": "str"
          },
          "to_port": {
            "aliases": [
              "to",
              "toPort",
              "to_port_range"
            ],
            "description": [
              "The end (to-range) of the port range block for the leaf access port block."
            ],
            "type": "str"
          },
          "type": {
            "choices": [
              "fex",
              "leaf"
            ],
            "default": "leaf",
            "description": [
              "The type of access port block to be created under respective access port."
            ],
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(infra:HPortS) and B(infra:PortBlk).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage port blocks of Fabric interface policy leaf profile interface selectors (infra:HPortS, infra:PortBlk)"
      },
      "examples": "\n- name: Associate an access port block (single port) to an interface selector\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    port_blk: leafportblkname\n    from_port: 13\n    to_port: 13\n    state: present\n  delegate_to: localhost\n\n- name: Associate an access port block (port range) to an interface selector\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    port_blk: leafportblkname\n    from_port: 13\n    to_port: 16\n    state: present\n  delegate_to: localhost\n\n- name: Associate an access port block (single port) to an interface selector of type fex\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    type: fex\n    interface_profile: leafintprfname_fex\n    access_port_selector: accessportselectorname_fex\n    port_blk: leafportblkname_fex\n    from_port: 13\n    to_port: 13\n    state: present\n  delegate_to: localhost\n\n- name: Associate an access port block (port range) to an interface selector of type fex\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    type: fex\n    interface_profile: leafintprfname_fex\n    access_port_selector: accessportselectorname_fex\n    port_blk: leafportblkname_fex\n    from_port: 13\n    to_port: 16\n    state: present\n  delegate_to: localhost\n\n- name: Remove an access port block from an interface selector\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    port_blk: leafportblkname\n    from_port: 13\n    to_port: 13\n    state: absent\n  delegate_to: localhost\n\n- name: Remove an access port block from an interface selector of type fex\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    type: fex\n    interface_profile: leafintprfname_fex\n    access_port_selector: accessportselectorname_fex\n    port_blk: leafportblkname_fex\n    from_port: 13\n    to_port: 13\n    state: absent\n  delegate_to: localhost\n\n- name: Query Specific access port block under given access port selector\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    port_blk: leafportblkname\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query Specific access port block under given access port selector of type fex\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    type: fex\n    interface_profile: leafintprfname_fex\n    access_port_selector: accessportselectorname_fex\n    port_blk: leafportblkname_fex\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all access port blocks under given leaf interface profile\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all access port blocks under given leaf interface profile of type fex\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    type: fex\n    interface_profile: leafintprfname_fex\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all access port blocks in the fabric\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all access port blocks in the fabric of type fex\n  cisco.aci.aci_access_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    type: fex\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_access_port_to_interface_policy_leaf_profile": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Fabric interface policy leaf profile interface selectors on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_access_port_to_interface_policy_leaf_profile.py",
        "has_action": false,
        "module": "aci_access_port_to_interface_policy_leaf_profile",
        "notes": [
          "The C(interface_profile) must exist before using this module in your playbook. The M(cisco.aci.aci_interface_policy_leaf_profile) modules can be used for this."
        ],
        "options": {
          "access_port_selector": {
            "aliases": [
              "name",
              "access_port_selector_name"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile access port selector."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "The description to assign to the C(access_port_selector)"
            ],
            "type": "str"
          },
          "from_card": {
            "aliases": [
              "from_card_range"
            ],
            "description": [
              "B(Deprecated)",
              "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
              "The parameter will be removed in Ansible 2.12.",
              "HORIZONTALLINE",
              "The beginning (from-range) of the card range block for the leaf access port block."
            ],
            "type": "str"
          },
          "from_port": {
            "aliases": [
              "from",
              "fromPort",
              "from_port_range"
            ],
            "description": [
              "B(Deprecated)",
              "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
              "The parameter will be removed in Ansible 2.12.",
              "HORIZONTALLINE",
              "The beginning (from-range) of the port range block for the leaf access port block."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "leaf_interface_profile_name",
              "leaf_interface_profile",
              "interface_profile_name"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile."
            ],
            "type": "str"
          },
          "interface_type": {
            "choices": [
              "breakout",
              "fex",
              "port_channel",
              "switch_port",
              "vpc"
            ],
            "default": "switch_port",
            "description": [
              "The type of interface for the static EPG deployment."
            ],
            "type": "str"
          },
          "leaf_port_blk_description": {
            "description": [
              "B(Deprecated)",
              "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
              "The parameter will be removed in Ansible 2.12.",
              "HORIZONTALLINE",
              "The description to assign to the C(leaf_port_blk)"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy_group": {
            "aliases": [
              "policy_group_name"
            ],
            "description": [
              "The name of the fabric access policy group to be associated with the leaf interface profile interface selector."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "port_blk": {
            "aliases": [
              "leaf_port_blk_name",
              "leaf_port_blk",
              "port_blk_name"
            ],
            "description": [
              "B(Deprecated)",
              "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
              "The parameter will be removed in Ansible 2.12.",
              "HORIZONTALLINE",
              "The name of the Fabric access policy leaf interface profile access port block."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "to_card": {
            "aliases": [
              "to_card_range"
            ],
            "description": [
              "B(Deprecated)",
              "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
              "The parameter will be removed in Ansible 2.12.",
              "HORIZONTALLINE",
              "The end (to-range) of the card range block for the leaf access port block."
            ],
            "type": "str"
          },
          "to_port": {
            "aliases": [
              "to",
              "toPort",
              "to_port_range"
            ],
            "description": [
              "B(Deprecated)",
              "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
              "The parameter will be removed in Ansible 2.12.",
              "HORIZONTALLINE",
              "The end (to-range) of the port range block for the leaf access port block."
            ],
            "type": "str"
          },
          "type": {
            "choices": [
              "fex",
              "leaf"
            ],
            "default": "leaf",
            "description": [
              "The type of access port to be created under respective profile."
            ],
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_access_port_block_to_access_port"
          },
          {
            "description": "More information about the internal APIC classes B(infra:HPortS), B(infra:RsAccBaseGrp) and B(infra:PortBlk).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Fabric interface policy leaf profile interface selectors (infra:HPortS, infra:RsAccBaseGrp, infra:PortBlk)"
      },
      "examples": "\n- name: Associate an Interface Access Port Selector to an Interface Policy Leaf Profile with a Policy Group\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    port_blk: leafportblkname\n    from_port: 13\n    to_port: 16\n    policy_group: policygroupname\n    state: present\n  delegate_to: localhost\n\n- name: Associate an interface access port selector to an Interface Policy Leaf Profile (w/o policy group) (check if this works)\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    port_blk: leafportblkname\n    from_port: 13\n    to_port: 16\n    state: present\n  delegate_to: localhost\n\n- name: Remove an interface access port selector associated with an Interface Policy Leaf Profile\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    state: absent\n  delegate_to: localhost\n\n- name: Remove an interface access port selector associated with an Interface Policy Fex Profile\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: fexintprfname\n    access_port_selector: accessportselectorname\n    state: absent\n  delegate_to: localhost\n\n- name: Query Specific access_port_selector under given leaf_interface_profile\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query Specific access_port_selector under given Fex leaf_interface_profile\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: fexintprfname\n    access_port_selector: accessportselectorname\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_access_sub_port_block_to_access_port": {
      "doc": {
        "author": [
          "Simon Metzger (@smnmtzgr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage sub port blocks of Fabric interface policy leaf profile interface selectors on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_access_sub_port_block_to_access_port.py",
        "has_action": false,
        "module": "aci_access_sub_port_block_to_access_port",
        "options": {
          "access_port_selector": {
            "aliases": [
              "name",
              "access_port_selector_name"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile access port selector."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "from_card": {
            "aliases": [
              "from_card_range"
            ],
            "description": [
              "The beginning (from-range) of the card range block for the leaf access port block."
            ],
            "type": "str"
          },
          "from_port": {
            "aliases": [
              "from",
              "fromPort",
              "from_port_range"
            ],
            "description": [
              "The beginning (from-range) of the port range block for the leaf access port block."
            ],
            "type": "str"
          },
          "from_sub_port": {
            "aliases": [
              "fromSubPort",
              "from_sub_port_range"
            ],
            "description": [
              "The beginning (from-range) of the sub port range block for the leaf access port block."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "leaf_interface_profile": {
            "aliases": [
              "leaf_interface_profile_name"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile."
            ],
            "type": "str"
          },
          "leaf_port_blk": {
            "aliases": [
              "leaf_port_blk_name"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile access port block."
            ],
            "type": "str"
          },
          "leaf_port_blk_description": {
            "description": [
              "The description to assign to the C(leaf_port_blk)."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "to_card": {
            "aliases": [
              "to_card_range"
            ],
            "description": [
              "The end (to-range) of the card range block for the leaf access port block."
            ],
            "type": "str"
          },
          "to_port": {
            "aliases": [
              "to",
              "toPort",
              "to_port_range"
            ],
            "description": [
              "The end (to-range) of the port range block for the leaf access port block."
            ],
            "type": "str"
          },
          "to_sub_port": {
            "aliases": [
              "toSubPort",
              "to_sub_port_range"
            ],
            "description": [
              "The end (to-range) of the sub port range block for the leaf access port block."
            ],
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(infra:HPortS) and B(infra:SubPortBlk).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage sub port blocks of Fabric interface policy leaf profile interface selectors (infra:HPortS, infra:SubPortBlk)"
      },
      "examples": "\n- name: Associate an access sub port block (single port) to an interface selector\n  cisco.aci.aci_access_sub_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    leaf_port_blk: leafportblkname\n    from_port: 13\n    to_port: 13\n    from_sub_port: 1\n    to_sub_port: 1\n    state: present\n  delegate_to: localhost\n\n- name: Associate an access sub port block (port range) to an interface selector\n  cisco.aci.aci_access_sub_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    leaf_port_blk: leafportblkname\n    from_port: 13\n    to_port: 13\n    from_sub_port: 1\n    to_sub_port: 3\n    state: present\n  delegate_to: localhost\n\n- name: Remove an access sub port block from an interface selector\n  cisco.aci.aci_access_sub_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    leaf_port_blk: leafportblkname\n    from_port: 13\n    to_port: 13\n    from_sub_port: 1\n    to_sub_port: 1\n    state: absent\n  delegate_to: localhost\n\n- name: Query Specific access sub port block under given access port selector\n  cisco.aci.aci_access_sub_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    leaf_port_blk: leafportblkname\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all access sub port blocks under given leaf interface profile\n  cisco.aci.aci_access_sub_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_interface_profile: leafintprfname\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all access sub port blocks in the fabric\n  cisco.aci.aci_access_sub_port_block_to_access_port:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_aep": {
      "doc": {
        "author": [
          "Swetha Chunduri (@schunduri)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Connect to external virtual and physical domains by using attachable Access Entity Profiles (AEP) on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_aep.py",
        "has_action": false,
        "module": "aci_aep",
        "options": {
          "aep": {
            "aliases": [
              "aep_name",
              "name"
            ],
            "description": [
              "The name of the Attachable Access Entity Profile."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the AEP."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "infra_vlan": {
            "aliases": [
              "infrastructure_vlan"
            ],
            "description": [
              "Enable infrastructure VLAN.",
              "The hypervisor functions of the AEP.",
              "C(no) will disable the infrastructure vlan if it is enabled."
            ],
            "type": "bool"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_aep_to_domain"
          },
          {
            "description": "More information about the internal APIC classes B(infra:AttEntityP) and B(infra:ProvAcc).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage attachable Access Entity Profile (AEP) objects (infra:AttEntityP, infra:ProvAcc)"
      },
      "examples": "\n- name: Add a new AEP\n  cisco.aci.aci_aep:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: ACI-AEP\n    description: default\n    infra_vlan: true\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing AEP\n  cisco.aci.aci_aep:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: ACI-AEP\n    state: absent\n  delegate_to: localhost\n\n- name: Query all AEPs\n  cisco.aci.aci_aep:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a specific AEP\n  cisco.aci.aci_aep:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: ACI-AEP\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_aep_to_domain": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind AEPs to Physical or Virtual Domains on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_aep_to_domain.py",
        "has_action": false,
        "module": "aci_aep_to_domain",
        "notes": [
          "The C(aep) and C(domain) parameters should exist before using this module. The M(cisco.aci.aci_aep) and M(cisco.aci.aci_domain) can be used for these."
        ],
        "options": {
          "aep": {
            "aliases": [
              "aep_name"
            ],
            "description": [
              "The name of the Attachable Access Entity Profile."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "domain_name",
              "domain_profile"
            ],
            "description": [
              "Name of the physical or virtual domain being associated with the AEP."
            ],
            "type": "str"
          },
          "domain_type": {
            "aliases": [
              "type"
            ],
            "choices": [
              "fc",
              "l2dom",
              "l3dom",
              "phys",
              "vmm"
            ],
            "description": [
              "Determines if the Domain is physical (phys) or virtual (vmm)."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vm_provider": {
            "choices": [
              "cloudfoundry",
              "kubernetes",
              "microsoft",
              "openshift",
              "openstack",
              "redhat",
              "vmware"
            ],
            "description": [
              "The VM platform for VMM Domains.",
              "Support for Kubernetes was added in ACI v3.0.",
              "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_aep"
          },
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "description": "More information about the internal APIC class B(infra:RsDomP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind AEPs to Physical or Virtual Domains (infra:RsDomP)"
      },
      "examples": "\n- name: Add AEP to domain binding\n  cisco.aci.aci_aep_to_domain: &binding_present\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: test_aep\n    domain: phys_dom\n    domain_type: phys\n    state: present\n  delegate_to: localhost\n\n- name: Remove AEP to domain binding\n  cisco.aci.aci_aep_to_domain: &binding_absent\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: test_aep\n    domain: phys_dom\n    domain_type: phys\n    state: absent\n  delegate_to: localhost\n\n- name: Query our AEP to domain binding\n  cisco.aci.aci_aep_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: test_aep\n    domain: phys_dom\n    domain_type: phys\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all AEP to domain bindings\n  cisco.aci.aci_aep_to_domain: &binding_query\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_aep_to_epg": {
      "doc": {
        "author": [
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind EPG to AEP."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_aep_to_epg.py",
        "has_action": false,
        "module": "aci_aep_to_epg",
        "options": {
          "aep": {
            "aliases": [
              "aep_name"
            ],
            "description": [
              "The name of the Attachable Access Entity Profile."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "Name of an existing application network profile, that will contain the EPGs."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "encap": {
            "aliases": [
              "vlan",
              "vlan_id",
              "encap_id"
            ],
            "description": [
              "The VLAN associated with this application EPG."
            ],
            "type": "int"
          },
          "epg": {
            "aliases": [
              "epg_name"
            ],
            "description": [
              "The name of the end point group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_mode": {
            "aliases": [
              "mode",
              "mode_name",
              "interface_mode_name"
            ],
            "choices": [
              "802.1p",
              "access",
              "native",
              "regular",
              "tagged",
              "trunk",
              "untagged"
            ],
            "description": [
              "Determines how layer 2 tags will be read from and added to frames.",
              "Values C(802.1p) and C(native) are identical.",
              "Values C(access) and C(untagged) are identical.",
              "Values C(regular), C(tagged) and C(trunk) are identical.",
              "The APIC defaults to C(trunk) when unset during creation."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "primary_encap": {
            "aliases": [
              "primary_vlan",
              "primary_vlan_id",
              "primary_encap_id"
            ],
            "description": [
              "The primary VLAN associated with this EPG"
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind EPG to AEP (infra:RsFuncToEpg)."
      },
      "examples": "\n- name: Associate EPG with AEP\n  cisco.aci.aci_aep_to_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: aep1\n    tenant: tenant1\n    ap: ap1\n    epg: epg1\n    encap_id: 222\n    interface_mode: access\n    state: present\n  delegate_to: localhost\n\n- name: Associate EPG with AEP\n  cisco.aci.aci_aep_to_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: aep1\n    tenant: tenant1\n    ap: ap1\n    epg: epg1\n    encap_id: 222\n    interface_mode: access\n    state: absent\n  delegate_to: localhost\n\n- name: Get specific EPG with AEP association\n  cisco.aci.aci_aep_to_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    aep: aep1\n    tenant: tenant1\n    ap: ap1\n    epg: epg1\n    encap_id: 222\n    interface_mode: access\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Get all EPG with AEP association\n  cisco.aci.aci_aep_to_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_ap": {
      "doc": {
        "author": [
          "Swetha Chunduri (@schunduri)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage top level Application Profile (AP) objects on Cisco ACI fabrics"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_ap.py",
        "has_action": false,
        "module": "aci_ap",
        "notes": [
          "This module does not manage EPGs, see M(cisco.aci.aci_epg) to do this.",
          "The used C(tenant) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name",
              "name"
            ],
            "description": [
              "The name of the application network profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the AP."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "monitoring_policy": {
            "description": [
              "The name of the monitoring policy."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(fv:Ap).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage top level Application Profile (AP) objects (fv:Ap)"
      },
      "examples": "\n- name: Add a new AP\n  cisco.aci.aci_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: default\n    description: default ap\n    monitoring_policy: default\n    state: present\n  delegate_to: localhost\n\n- name: Remove an AP\n  cisco.aci.aci_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: default\n    state: absent\n  delegate_to: localhost\n\n- name: Query an AP\n  cisco.aci.aci_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: default\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all APs\n  cisco.aci.aci_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_bd": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manages Bridge Domains (BD) on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_bd.py",
        "has_action": false,
        "module": "aci_bd",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "arp_flooding": {
            "description": [
              "Determines if the Bridge Domain should flood ARP traffic.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "bd": {
            "aliases": [
              "bd_name",
              "name"
            ],
            "description": [
              "The name of the Bridge Domain."
            ],
            "type": "str"
          },
          "bd_type": {
            "choices": [
              "ethernet",
              "fc"
            ],
            "description": [
              "The type of traffic on the Bridge Domain.",
              "The APIC defaults to C(ethernet) when unset during creation."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description for the Bridge Domain."
            ],
            "type": "str"
          },
          "enable_multicast": {
            "description": [
              "Determines if PIM is enabled.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "enable_routing": {
            "description": [
              "Determines if IP forwarding should be allowed.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "endpoint_clear": {
            "description": [
              "Clears all End Points in all Leaves when C(yes).",
              "The value is not reset to disabled once End Points have been cleared; that requires a second task.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "endpoint_move_detect": {
            "choices": [
              "default",
              "garp"
            ],
            "description": [
              "Determines if GARP should be enabled to detect when End Points move.",
              "The APIC defaults to C(garp) when unset during creation."
            ],
            "type": "str"
          },
          "endpoint_retention_action": {
            "choices": [
              "inherit",
              "resolve"
            ],
            "description": [
              "Determines if the Bridge Domain should inherit or resolve the End Point Retention Policy.",
              "The APIC defaults to C(resolve) when unset during creation."
            ],
            "type": "str"
          },
          "endpoint_retention_policy": {
            "description": [
              "The name of the End Point Retention Policy the Bridge Domain should use when overriding the default End Point Retention Policy."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "igmp_snoop_policy": {
            "description": [
              "The name of the IGMP Snooping Policy the Bridge Domain should use when overriding the default IGMP Snooping Policy."
            ],
            "type": "str"
          },
          "ip_learning": {
            "description": [
              "Determines if the Bridge Domain should learn End Point IPs.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "ipv6_l3_unknown_multicast": {
            "choices": [
              "flood",
              "opt-flood"
            ],
            "description": [
              "Determines the forwarding method to use for IPv6 unknown multicast destinations.",
              "The APIC defaults to C(flood) when unset during creation."
            ],
            "type": "str"
          },
          "ipv6_nd_policy": {
            "description": [
              "The name of the IPv6 Neighbor Discovery Policy the Bridge Domain should use when overridding the default IPV6 ND Policy."
            ],
            "type": "str"
          },
          "l2_unknown_unicast": {
            "choices": [
              "proxy",
              "flood"
            ],
            "description": [
              "Determines what forwarding method to use for unknown l2 destinations.",
              "The APIC defaults to C(proxy) when unset during creation."
            ],
            "type": "str"
          },
          "l3_unknown_multicast": {
            "choices": [
              "flood",
              "opt-flood"
            ],
            "description": [
              "Determines the forwarding method to use for unknown multicast destinations.",
              "The APIC defaults to C(flood) when unset during creation."
            ],
            "type": "str"
          },
          "limit_ip_learn": {
            "description": [
              "Determines if the BD should limit IP learning to only subnets owned by the Bridge Domain.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "mac_address": {
            "aliases": [
              "mac"
            ],
            "description": [
              "The MAC Address to assign to the C(bd) instead of using the default.",
              "The APIC defaults to C(00:22:BD:F8:19:FF) when unset during creation."
            ],
            "type": "str"
          },
          "multi_dest": {
            "choices": [
              "bd-flood",
              "drop",
              "encap-flood"
            ],
            "description": [
              "Determines the forwarding method for L2 multicast, broadcast, and link layer traffic.",
              "The APIC defaults to C(bd-flood) when unset during creation."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "route_profile": {
            "description": [
              "The Route Profile to associate with the Bridge Domain."
            ],
            "type": "str"
          },
          "route_profile_l3out": {
            "description": [
              "The L3 Out that contains the associated Route Profile."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vrf": {
            "aliases": [
              "vrf_name"
            ],
            "description": [
              "The name of the VRF."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(fv:BD).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Bridge Domains (BD) objects (fv:BD)"
      },
      "examples": "\n- name: Add Bridge Domain\n  cisco.aci.aci_bd:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    tenant: prod\n    bd: web_servers\n    mac_address: 00:22:BD:F8:19:FE\n    vrf: prod_vrf\n    state: present\n  delegate_to: localhost\n\n- name: Add an FC Bridge Domain\n  cisco.aci.aci_bd:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    tenant: prod\n    bd: storage\n    bd_type: fc\n    vrf: fc_vrf\n    enable_routing: no\n    state: present\n  delegate_to: localhost\n\n- name: Modify a Bridge Domain\n  cisco.aci.aci_bd:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: yes\n    tenant: prod\n    bd: web_servers\n    arp_flooding: yes\n    l2_unknown_unicast: flood\n    state: present\n  delegate_to: localhost\n\n- name: Query All Bridge Domains\n  cisco.aci.aci_bd:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: yes\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a Bridge Domain\n  cisco.aci.aci_bd:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: yes\n    tenant: prod\n    bd: web_servers\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Delete a Bridge Domain\n  cisco.aci.aci_bd:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: yes\n    tenant: prod\n    bd: web_servers\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_bd_dhcp_label": {
      "doc": {
        "author": [
          "sig9 (@sig9org)",
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage DHCP Labels on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_bd_dhcp_label.py",
        "has_action": false,
        "module": "aci_bd_dhcp_label",
        "notes": [
          "A DHCP relay label contains a C(name) for the label, the C(scope), and a DHCP option policy. The scope is the C(owner) of the relay server and the DHCP option policy supplies DHCP clients with configuration parameters such as domain, nameserver, and subnet router addresses.",
          "The C(tenant) and C(bd) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module and M(cisco.aci.aci_bd) can be used for these."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "bd": {
            "aliases": [
              "bd_name"
            ],
            "description": [
              "The name of the Bridge Domain."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the DHCP Label."
            ],
            "type": "str"
          },
          "dhcp_label": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the DHCP Relay Label."
            ],
            "type": "str"
          },
          "dhcp_option": {
            "description": [
              "Name of the DHCP Option Policy to be associated with the DCHP Relay Policy. This policy need to be present in the same tenant as the bridge domain.",
              "The DHCP option is used to supply DHCP clients with configuration parameters such as a domain, name server, subnet, and network address."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "scope": {
            "aliases": [
              "owner"
            ],
            "choices": [
              "infra",
              "tenant"
            ],
            "default": "infra",
            "description": [
              "Represents the target relay servers ownership."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_bd"
          },
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(dhcp:Lbl).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage DHCP Labels (dhcp:Lbl)"
      },
      "examples": "\n- name: Create a new DHCP Relay Label to a Bridge Domain\n  cisco.aci.aci_bd_dhcp_label:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    dhcp_label: label1\n    scope: infra\n    state: present\n\n- name: Query a DHCP Relay Label of a Bridge Domain\n  cisco.aci.aci_bd_dhcp_label:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    dhcp_label: label1\n    scope: infra\n    state: query\n\n- name: Query all DHCP Relay Labels of a Bridge Domain\n  cisco.aci.aci_bd_dhcp_label:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    state: query\n\n- name: Remove a DHCP Relay Label for a Bridge Domain\n  cisco.aci.aci_bd_dhcp_label:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    dhcp_label: label1\n    scope: infra\n    state: absent\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_bd_subnet": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Subnets on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_bd_subnet.py",
        "has_action": false,
        "module": "aci_bd_subnet",
        "notes": [
          "The C(gateway) parameter is the root key used to access the Subnet (not name), so the C(gateway) is required when the state is C(absent) or C(present).",
          "The C(tenant) and C(bd) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module and M(cisco.aci.aci_bd) can be used for these."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "bd": {
            "aliases": [
              "bd_name"
            ],
            "description": [
              "The name of the Bridge Domain."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the Subnet."
            ],
            "type": "str"
          },
          "enable_vip": {
            "description": [
              "Determines if the Subnet should be treated as a VIP; used when the BD is extended to multiple sites.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "gateway": {
            "aliases": [
              "gateway_ip"
            ],
            "description": [
              "The IPv4 or IPv6 gateway address for the Subnet."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "mask": {
            "aliases": [
              "subnet_mask"
            ],
            "description": [
              "The subnet mask for the Subnet.",
              "This is the number associated with CIDR notation.",
              "For IPv4 addresses, accepted values range between C(0) and C(32).",
              "For IPv6 addresses, accepted Values range between C(0) and C(128)."
            ],
            "type": "int"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "nd_prefix_policy": {
            "description": [
              "The IPv6 Neighbor Discovery Prefix Policy to associate with the Subnet."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "preferred": {
            "description": [
              "Determines if the Subnet is preferred over all available Subnets. Only one Subnet per Address Family (IPv4/IPv6). can be preferred in the Bridge Domain.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "route_profile": {
            "description": [
              "The Route Profile to the associate with the Subnet."
            ],
            "type": "str"
          },
          "route_profile_l3_out": {
            "description": [
              "The L3 Out that contains the associated Route Profile."
            ],
            "type": "str"
          },
          "scope": {
            "choices": [
              "private",
              "public",
              "shared"
            ],
            "description": [
              "Determines the scope of the Subnet.",
              "The C(private) option only allows communication with hosts in the same VRF.",
              "The C(public) option allows the Subnet to be advertised outside of the ACI Fabric, and allows communication with hosts in other VRFs.",
              "The shared option limits communication to hosts in either the same VRF or the shared VRF.",
              "The value is a list of options, C(private) and C(public) are mutually exclusive, but both can be used with C(shared).",
              "The APIC defaults to C(private) when unset during creation."
            ],
            "elements": "str",
            "type": "list"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "subnet_control": {
            "choices": [
              "nd_ra",
              "no_gw",
              "querier_ip",
              "unspecified"
            ],
            "description": [
              "Determines the Subnet's Control State.",
              "The C(querier_ip) option is used to treat the gateway_ip as an IGMP querier source IP.",
              "The C(nd_ra) option is used to treat the gateway_ip address as a Neighbor Discovery Router Advertisement Prefix.",
              "The C(no_gw) option is used to remove default gateway functionality from the gateway address.",
              "The APIC defaults to C(nd_ra) when unset during creation."
            ],
            "type": "str"
          },
          "subnet_name": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the Subnet."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_bd"
          },
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(fv:Subnet).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Subnets (fv:Subnet)"
      },
      "examples": "\n- name: Create a tenant\n  cisco.aci.aci_tenant:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    state: present\n  delegate_to: localhost\n\n- name: Create a bridge domain\n  cisco.aci.aci_bd:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    state: present\n  delegate_to: localhost\n\n- name: Create a subnet\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    gateway: 10.1.1.1\n    mask: 24\n    state: present\n  delegate_to: localhost\n\n- name: Create a subnet with options\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    subnet_name: sql\n    gateway: 10.1.2.1\n    mask: 23\n    description: SQL Servers\n    scope: public\n    route_profile_l3_out: corp\n    route_profile: corp_route_profile\n    state: present\n  delegate_to: localhost\n\n- name: Update a subnets scope to private and shared\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    gateway: 10.1.1.1\n    mask: 24\n    scope: [private, shared]\n    state: present\n  delegate_to: localhost\n\n- name: Get all subnets\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n\n- name: Get all subnets of specific gateway in specified tenant\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    gateway: 10.1.1.1\n    mask: 24\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Get specific subnet\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    gateway: 10.1.1.1\n    mask: 24\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Delete a subnet\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    gateway: 10.1.1.1\n    mask: 24\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_bd_to_l3out": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind Bridge Domain to L3 Out on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_bd_to_l3out.py",
        "has_action": false,
        "module": "aci_bd_to_l3out",
        "notes": [
          "The C(bd) and C(l3out) parameters should exist before using this module. The M(cisco.aci.aci_bd) and C(aci_l3out) can be used for these."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "bd": {
            "aliases": [
              "bd_name",
              "bridge_domain"
            ],
            "description": [
              "The name of the Bridge Domain."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "description": [
              "The name of the l3out to associate with th Bridge Domain."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_bd"
          },
          {
            "module": "cisco.aci.aci_l3out"
          },
          {
            "description": "More information about the internal APIC class B(fv:RsBDToOut).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind Bridge Domain to L3 Out (fv:RsBDToOut)"
      },
      "examples": " # ",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_bgp_rr_asn": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage the BGP Autonomous System Number of the fabric (bgpAsP).",
          "This module is specifically for fabric BGP, for L3Out BGP use the aci_l3out_bgp_peer module"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_bgp_rr_asn.py",
        "has_action": false,
        "module": "aci_bgp_rr_asn",
        "options": {
          "asn": {
            "description": [
              "BGP Autonomous System Number"
            ],
            "type": "int"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(bgpAsP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage BGP Route Reflector ASN."
      },
      "examples": "\n- name: Set fabric BGP AS number\n  cisco.aci.aci_bgp_rr_asn:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    asn: 65001\n    state: present\n  delegate_to: localhost\n\n- name: Remove fabric BGP AS number\n  cisco.aci.aci_bgp_rr_asn:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: absent\n  delegate_to: localhost\n\n- name: Query fabric BGP AS number\n  cisco.aci.aci_bgp_rr_asn:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_bgp_rr_node": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage ACI BGP Route Reflector Nodes (bgpRRNodePEp)."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_bgp_rr_node.py",
        "has_action": false,
        "module": "aci_bgp_rr_node",
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the Route Reflector Node"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "node_id": {
            "description": [
              "ID of the Route Reflector Node"
            ],
            "type": "int"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "Pod the node belongs to"
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(bgpRRNodePEp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage BGP Route Reflector objects."
      },
      "examples": "\n- name: Add a new BGP Route Reflector\n  cisco.aci.aci_bgp_rr_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    node_id: 101\n    pod_id: 1\n    state: present\n    delegate_to: localhost\n\n- name: Remove a BGP Route Reflector\n  cisco.aci.aci_bgp_rr_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    node_id: 101\n    state: absent\n    delegate_to: localhost\n\n- name: Query a BGP Route Reflector\n  cisco.aci.aci_bgp_rr_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    node_id: 101\n    state: query\n    delegate_to: localhost\n    register: query_result\n\n- name: Query all BGP Route Reflectors\n  cisco.aci.aci_bgp_rr_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n    delegate_to: localhost\n    register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_ap": {
      "doc": {
        "author": [
          "Nirav (@nirav)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Cloud Application Profile (AP) objects on Cisco Cloud ACI"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_ap.py",
        "has_action": false,
        "module": "aci_cloud_ap",
        "notes": [
          "More information about the internal APIC class B(cloud:App) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the cloud application profile."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "app_profile",
              "app_profile_name",
              "ap"
            ],
            "description": [
              "The name of the cloud application profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud Application Profile (AP) (cloud:App)"
      },
      "examples": "\n- name: Add a new cloud AP\n  cisco.aci.aci_cloud_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    name: intranet\n    description: Web Intranet EPG\n    state: present\n  delegate_to: localhost\n\n- name: Remove a cloud AP\n  cisco.aci.aci_cloud_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    tenant: production\n    name: intranet\n    state: absent\n  delegate_to: localhost\n\n- name: Query a cloud AP\n  cisco.aci.aci_cloud_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    name: ticketing\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all cloud APs\n  cisco.aci.aci_cloud_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all cloud APs with a Specific Name\n  cisco.aci.aci_cloud_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    name: ticketing\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all cloud APs of a tenant\n  cisco.aci.aci_cloud_ap:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    tenant: production\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_aws_provider": {
      "doc": {
        "author": [
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage AWS provider on Cisco Cloud ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_aws_provider.py",
        "has_action": false,
        "module": "aci_cloud_aws_provider",
        "notes": [
          "More information about the internal APIC class B(cloud:AwsProvider) from",
          "L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "access_key_id": {
            "description": [
              "Cloud Access Key ID."
            ],
            "type": "str"
          },
          "account_id": {
            "description": [
              "AWS Account ID."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "is_account_in_org": {
            "description": [
              "Is Account in Organization."
            ],
            "type": "bool"
          },
          "is_trusted": {
            "description": [
              "Trusted Tenant"
            ],
            "type": "bool"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "secret_access_key": {
            "description": [
              "Cloud Secret Access Key."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "Name of tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud AWS Provider (cloud:AwsProvider)"
      },
      "examples": "\n- name: Create aws provider again after deletion as not trusted\n  cisco.aci.aci_cloud_aws_provider:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: ansible_test\n    account_id: 111111111111\n    is_trusted: yes\n    state: present\n  delegate_to: localhost\n\n- name: Delete aws provider\n  cisco.aci.aci_cloud_aws_provider:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: ansible_test\n    account_id: 111111111111\n    is_trusted: yes\n    state: absent\n  delegate_to: localhost\n\n- name: Query aws provider\n  cisco.aci.aci_cloud_aws_provider:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    state: query\n  delegate_to: localhost\n\n- name: Query all aws provider\n  cisco.aci.aci_cloud_aws_provider:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_bgp_asn": {
      "doc": {
        "author": [
          "Anvitha Jain (@anvitha-jain)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage the BGP Autonomous System Profile for Cloud APIC"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_bgp_asn.py",
        "has_action": false,
        "module": "aci_cloud_bgp_asn",
        "notes": [
          "More information about the internal APIC class B(cloud:BgpAsP) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "asn": {
            "description": [
              "The BGP Autonomous System Number."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description of the BGP Autonomous System Profile."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "autonomous_system_profile",
              "autonomous_system_profile_name"
            ],
            "description": [
              "object name"
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud APIC BGP Autonomous System Profile (cloud:BgpAsP)",
        "version_added": "2.1.0",
        "version_added_collection": "cisco.aci"
      },
      "examples": "\n- name: Add a new cloud BGP ASN\n  cisco.aci.aci_cloud_bgp_asn:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    asn: 64601\n    description: ASN description\n    name: ASN_1\n    state: present\n  delegate_to: localhost\n- name: Remove a cloud BGP ASN\n  cisco.aci.aci_cloud_bgp_asn:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    state: absent\n  delegate_to: localhost\n- name: Query a cloud BGP ASN\n  cisco.aci.aci_cloud_bgp_asn:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_cidr": {
      "doc": {
        "author": [
          "Nirav (@nirav)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Cloud CIDR on Cisco Cloud ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_cidr.py",
        "has_action": false,
        "module": "aci_cloud_cidr",
        "notes": [
          "This module is only used to manage non_primary Cloud CIDR, see M(cisco.aci.aci_cloud_ctx_profile) to create the primary CIDR.",
          "More information about the internal APIC class B(cloud:Cidr) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "address": {
            "aliases": [
              "cidr"
            ],
            "description": [
              "CIDR ip and its netmask."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "cloud_context_profile": {
            "description": [
              "The name of the Cloud Context Profile."
            ],
            "required": true,
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the Cloud CIDR."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "An alias for the name of the current object. This relates to the nameAlias field in ACI and is used to rename object without changing the DN."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of the Tenant."
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage CIDR under Cloud Context Profile (cloud:Cidr)"
      },
      "examples": "\n- name: Create non_primary CIDR\n  cisco.aci.aci_cloud_cidr:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    address: 10.10.0.0/16\n    cloud_context_profile: ctxProfileName\n    state: present\n  delegate_to: localhost\n\n- name: Remove non_primary CIDR\n  cisco.aci.aci_cloud_cidr:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    address: 10.10.0.0/16\n    cloud_context_profile: ctxProfileName\n    state: absent\n  delegate_to: localhost\n\n- name: Query all CIDRs under given cloud context profile\n  cisco.aci.aci_cloud_cidr:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    cloud_context_profile: ctxProfileName\n    state: query\n  delegate_to: localhost\n\n- name: Query specific CIDR under given cloud context profile\n  cisco.aci.aci_cloud_cidr:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    cloud_context_profile: ctxProfileName\n    address: 10.10.0.0/16\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_ctx_profile": {
      "doc": {
        "author": [
          "Nirav (@crestdatasys)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage the Cloud Context Profile objects on Cisco Cloud ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_ctx_profile.py",
        "has_action": false,
        "module": "aci_cloud_ctx_profile",
        "notes": [
          "More information about the internal APIC class B(cloud:CtxProfile) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "cloud": {
            "choices": [
              "aws",
              "azure"
            ],
            "description": [
              "The cloud vendor in which the controller runs."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the Cloud Context Profile"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "cloud_context_profile"
            ],
            "description": [
              "The name of the Cloud Context Profile"
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "An alias for the name of the current object. This relates to the nameAlias field in ACI and is used to rename object without changing the DN"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "primary_cidr": {
            "description": [
              "The subnet with netmask to use as primary CIDR block for the Cloud Context Profile."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "region": {
            "description": [
              "The name of the cloud region in which to deploy the network construct."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of the Tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vrf": {
            "description": [
              "The name of the VRF."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud Context Profile (cloud:CtxProfile)"
      },
      "examples": "\n- name: Add a new aci cloud ctx profile\n  cisco.aci.aci_cloud_ctx_profile:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenant_1\n    name: cloud_ctx_profile\n    vrf: VRF1\n    region: us-west-1\n    cloud: aws\n    primary_cidr: '10.0.10.1/16'\n    state: present\n  delegate_to: localhost\n\n- name: Remove an aci cloud ctx profile\n  cisco.aci.aci_cloud_ctx_profile:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenant_1\n    name: cloud_ctx_profile\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific aci cloud ctx profile\n  cisco.aci.aci_cloud_ctx_profile:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    name: ctx_profile_1\n    state: query\n  delegate_to: localhost\n\n- name: Query all aci cloud ctx profile\n  cisco.aci.aci_cloud_ctx_profile:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_epg": {
      "doc": {
        "author": [
          "Nirav (@nirav)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Cloud EPG on Cisco Cloud ACI"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_epg.py",
        "has_action": false,
        "module": "aci_cloud_epg",
        "notes": [
          "More information about the internal APIC class B(cloud:EPg) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "The name of the cloud application profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description of the cloud EPG."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "cloud_epg",
              "cloud_epg_name",
              "epg",
              "epg_name"
            ],
            "description": [
              "The name of the cloud EPG."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of the existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vrf": {
            "aliases": [
              "context",
              "vrf_name"
            ],
            "description": [
              "The name of the VRF."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud EPG (cloud:EPg)"
      },
      "examples": "\n- name: Create aci cloud epg (check_mode)\n  cisco.aci.aci_cloud_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    ap: apName\n    vrf: vrfName\n    description: Aci Cloud EPG\n    name: epgName\n    state: present\n  delegate_to: localhost\n\n- name: Remove cloud epg\n  cisco.aci.aci_cloud_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    ap: apName\n    name: cloudName\n    state: absent\n  delegate_to: localhost\n\n- name: query all\n  cisco.aci.aci_cloud_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    ap: apName\n    state: query\n  delegate_to: localhost\n\n- name: query a specific cloud epg\n  cisco.aci.aci_cloud_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    ap: apName\n    name: epgName\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_epg_selector": {
      "doc": {
        "author": [
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Cloud Endpoint Selector on Cisco Cloud ACI"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_epg_selector.py",
        "has_action": false,
        "module": "aci_cloud_epg_selector",
        "notes": [
          "More information about the internal APIC class B(cloud:EPSelector) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "description": [
              "The name of the cloud application profile."
            ],
            "required": true,
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the Cloud Endpoint Selector."
            ],
            "type": "str"
          },
          "epg": {
            "description": [
              "The name of the cloud EPG."
            ],
            "required": true,
            "type": "str"
          },
          "expressions": {
            "description": [
              "Expressions associated to this selector."
            ],
            "elements": "dict",
            "suboptions": {
              "key": {
                "description": [
                  "The key of the expression.",
                  "The key is custom or is one of region, zone and ip",
                  "The key can be zone only when the site is AWS."
                ],
                "required": true,
                "type": "str"
              },
              "operator": {
                "choices": [
                  "not_in",
                  "in",
                  "equals",
                  "not_equals",
                  "has_key",
                  "does_not_have_key"
                ],
                "description": [
                  "The operator associated to the expression.",
                  "Operator C(has_key) or C(does_not_have_key) is only available for key custom or zone"
                ],
                "required": true,
                "type": "str"
              },
              "value": {
                "description": [
                  "The value associated to the expression.",
                  "If the operator is C(in) or C(not_in), the value should be a comma separated string."
                ],
                "type": "str"
              }
            },
            "type": "list"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "selector",
              "selector_name"
            ],
            "description": [
              "The name of the Cloud Endpoint selector."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of the existing tenant."
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud Endpoint Selector (cloud:EPSelector)"
      },
      "examples": "\n- name: Create aci cloud epg selector\n  cisco.aci.aci_cloud_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    ap: apName\n    epg: epgName\n    description: cloud epg selector\n    name: selectorName\n    expressions:\n      - key: ip\n        operator: in\n        value: 10.10.10.1\n    state: present\n  delegate_to: localhost\n\n- name: Remove cloud epg selector\n  cisco.aci.aci_cloud_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    ap: apName\n    epg: epgName\n    name: selectorName\n    state: absent\n  delegate_to: localhost\n\n- name: query all\n  cisco.aci.aci_cloud_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    ap: apName\n    epg: epgName\n    state: query\n  delegate_to: localhost\n\n- name: query a specific cloud epg selector\n  cisco.aci.aci_cloud_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    ap: apName\n    epg: epgName\n    name: selectorName\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_external_epg": {
      "doc": {
        "author": [
          "Anvitha Jain (@anvitha-jain)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Configures WAN router connectivity to the cloud infrastructure."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_external_epg.py",
        "has_action": false,
        "module": "aci_cloud_external_epg",
        "notes": [
          "More information about the internal APIC class B(cloud:ExtEPg) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "The name of the cloud application profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "configuration item description."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "cloud_external_epg",
              "cloud_external_epg_name",
              "external_epg",
              "external_epg_name",
              "extepg",
              "extepg_name"
            ],
            "description": [
              "Name of Object cloud_external_epg."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "route_reachability": {
            "choices": [
              "inter-site",
              "internet",
              "unspecified"
            ],
            "description": [
              "Route reachability for this EPG."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vrf": {
            "aliases": [
              "context",
              "vrf_name"
            ],
            "description": [
              "The name of the VRF."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud External EPG (cloud:ExtEPg)"
      },
      "examples": "\n- name: Add a new cloud external EPG\n  cisco.aci.aci_cloud_external_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenant1\n    ap: ap1\n    vrf: vrf1\n    description: Cloud External EPG description\n    name: ext_epg\n    route_reachability: internet\n    state: present\n  delegate_to: localhost\n\n- name: Remove a cloud external EPG\n  cisco.aci.aci_cloud_external_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    tenant: tenant1\n    ap: ap1\n    name: ext_epg\n    state: absent\n  delegate_to: localhost\n\n- name: Query a cloud external EPG\n  cisco.aci.aci_cloud_external_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenant1\n    ap: ap1\n    name: ext_epg\n    state: query\n  delegate_to: localhost\n\n- name: query all\n  cisco.aci.aci_cloud_external_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenant1\n    ap: ap1\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "name_alias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "name_alias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_external_epg_selector": {
      "doc": {
        "author": [
          "Anvitha Jain (@anvitha-jain)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Decides which endpoints belong to the EPGs based on several parameters."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_external_epg_selector.py",
        "has_action": false,
        "module": "aci_cloud_external_epg_selector",
        "notes": [
          "More information about the internal APIC class B(cloud:ExtEPSelector) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "The name of the cloud application profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "cloud_external_epg": {
            "description": [
              "Name of Object cloud_external_epg."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "selector",
              "cloud_external_epg_selector",
              "external_epg_selector",
              "extepg_selector",
              "selector_name"
            ],
            "description": [
              "The name of the Cloud Endpoint selector."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "subnet": {
            "aliases": [
              "ip"
            ],
            "description": [
              "IP address of the Cloud Subnet."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud Endpoint Selector for External EPGs (cloud:ExtEPSelector)"
      },
      "examples": "\n- name: Add a new cloud external EPG selector\n  cisco.aci.aci_cloud_external_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenant1\n    ap: ap1\n    cloud_external_epg: ext_epg\n    name: subnet_name\n    subnet: 10.0.0.0/16\n    state: present\n  delegate_to: localhost\n\n- name: Remove a cloud external EPG selector\n  cisco.aci.aci_cloud_external_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    tenant: tenant1\n    ap: ap1\n    cloud_external_epg: ext_epg\n    name: subnet_name\n    subnet: 10.0.0.0/16\n    state: absent\n  delegate_to: localhost\n\n- name: Query all cloud external EPG selectors\n  cisco.aci.aci_cloud_external_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenant1\n    ap: ap1\n    cloud_external_epg: ext_epg\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": null
    }
  },
  {
    "cisco.aci.aci_cloud_provider": {
      "doc": {
        "author": [
          "Lionel Hercot (@lhercot)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Query Cloud Provider information (cloud:ProvP) on Cisco Cloud ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_provider.py",
        "has_action": false,
        "module": "aci_cloud_provider",
        "notes": [
          "More information about the internal APIC class B(cloud:ProvP) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/).",
          "This module is used to query Cloud Provider information."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "query"
            ],
            "default": "query",
            "description": [
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Query Cloud Provider information (cloud:ProvP)"
      },
      "examples": "\n- name: Query cloud provider information\n  cisco.aci.aci_cloud_provider:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_region": {
      "doc": {
        "author": [
          "Nirav (@nirav)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Cloud Providers Region on Cisco Cloud ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_region.py",
        "has_action": false,
        "module": "aci_cloud_region",
        "notes": [
          "More information about the internal APIC class B(cloud:Region) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/).",
          "This module is used to query Cloud Providers Region."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "cloud": {
            "choices": [
              "aws",
              "azure"
            ],
            "description": [
              "The vendor of the controller"
            ],
            "required": true,
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "region": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the cloud provider's region."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "query"
            ],
            "default": "query",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud Providers Region (cloud:Region)"
      },
      "examples": "\n- name: Query all regions\n  cisco.aci.aci_cloud_region:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    cloud: 'aws'\n    state: query\n  delegate_to: localhost\n\n- name: Query a specific region\n  cisco.aci.aci_cloud_region:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    cloud: 'aws'\n    region: eu-west-2\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_subnet": {
      "doc": {
        "author": [
          "Nirav (@nirav)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Cloud Subnet on Cisco Cloud ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_subnet.py",
        "has_action": false,
        "module": "aci_cloud_subnet",
        "notes": [
          "More information about the internal APIC class B(cloud:Subnet) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "address": {
            "aliases": [
              "subnet"
            ],
            "description": [
              "Ip address of the Cloud Subnet."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "availability_zone": {
            "description": [
              "The cloud zone which is attached to the given cloud context profile.",
              "Only used when it is an aws cloud apic."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "cidr": {
            "description": [
              "Address of cloud cidr."
            ],
            "required": true,
            "type": "str"
          },
          "cloud_context_profile": {
            "description": [
              "The name of cloud context profile."
            ],
            "required": true,
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the Cloud Subnet."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "description": [
              "The name of the Cloud Subnet."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "An alias for the name of the current object. This relates to the nameAlias field in ACI and is used to rename object without changing the DN."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of tenant."
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vnet_gateway": {
            "default": false,
            "description": [
              "Determine if a vNet Gateway Router will be deployed or not.",
              "Only used when it is an azure cloud apic."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud Subnet (cloud:Subnet)"
      },
      "examples": "\n- name: Create aci cloud subnet\n  cisco.aci.aci_cloud_subnet:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    tenant: anstest\n    cloud_context_profile: aws_cloudCtxProfile\n    cidr: '10.10.0.0/16'\n    availability_zone: us-west-1a\n    address: 10.10.0.1\n  delegate_to: localhost\n\n- name: Query a specific subnet\n  cisco.aci.aci_cloud_subnet:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    tenant: anstest\n    cloud_context_profile: ctx_profile_1\n    cidr: '10.10.0.0/16'\n    address: 10.10.0.1\n    state: query\n  delegate_to: localhost\n\n- name: Query all subnets\n  cisco.aci.aci_cloud_subnet:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    tenant: anstest\n    cloud_context_profile: ctx_profile_1\n    cidr: '10.10.0.0/16'\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_vpn_gateway": {
      "doc": {
        "author": [
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage cloudRouterP objects on Cisco Cloud ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_vpn_gateway.py",
        "has_action": false,
        "module": "aci_cloud_vpn_gateway",
        "notes": [
          "More information about the internal APIC class B(cloud:cloudRouterP) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/)."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "cloud_context_profile": {
            "description": [
              "The name of cloud context profile."
            ],
            "required": true,
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "query",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of tenant."
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage cloudRouterP in Cloud Context Profile (cloud:cloudRouterP)"
      },
      "examples": "\n- name: Enable VpnGateway\n  cisco.aci.aci_cloud_vpn_gateway:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: ansible_test\n    cloud_context_profile: ctx_profile_1\n    state: present\n  delegate_to: localhost\n\n- name: Disable VpnGateway\n  cisco.aci.aci_cloud_vpn_gateway:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: ansible_test\n    cloud_context_profile: ctx_profile_1\n    state: absent\n  delegate_to: localhost\n\n- name: Query VpnGateway\n  cisco.aci.aci_cloud_vpn_gateway:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: ansible_test\n    cloud_context_profile: ctx_profile_1\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_cloud_zone": {
      "doc": {
        "author": [
          "Nirav (@nirav)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Cloud Availability Zone on Cisco Cloud ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_cloud_zone.py",
        "has_action": false,
        "module": "aci_cloud_zone",
        "notes": [
          "More information about the internal APIC class B(cloud:Zone) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/).",
          "This module is used to query Cloud Availability Zone."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "cloud": {
            "choices": [
              "aws",
              "azure"
            ],
            "description": [
              "The cloud provider."
            ],
            "required": true,
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "zone"
            ],
            "description": [
              "object name"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "region": {
            "description": [
              "The name of the cloud provider's region."
            ],
            "required": true,
            "type": "str"
          },
          "state": {
            "choices": [
              "query"
            ],
            "default": "query",
            "description": [
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Cloud Availability Zone (cloud:Zone)"
      },
      "examples": "\n- name: Query all zones in a region\n  cisco.aci.aci_cloud_zone:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    cloud: 'aws'\n    region: regionName\n    state: query\n  delegate_to: localhost\n\n- name: Query a specific zone\n  cisco.aci.aci_cloud_zone:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    cloud: 'aws'\n    region: regionName\n    zone: zoneName\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_config_rollback": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Provides rollback and rollback preview functionality for Cisco ACI fabrics.",
          "Config Rollbacks are done using snapshots C(aci_snapshot) with the configImportP class."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_config_rollback.py",
        "has_action": false,
        "module": "aci_config_rollback",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "compare_export_policy": {
            "description": [
              "The export policy that the C(compare_snapshot) is associated to."
            ],
            "type": "str"
          },
          "compare_snapshot": {
            "description": [
              "The name of the snapshot to compare with C(snapshot)."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the Import Policy."
            ],
            "type": "str"
          },
          "export_policy": {
            "description": [
              "The export policy that the C(snapshot) is associated to."
            ],
            "type": "str"
          },
          "fail_on_decrypt": {
            "description": [
              "Determines if the APIC should fail the rollback if unable to decrypt secured data.",
              "The APIC defaults to C(yes) when unset."
            ],
            "type": "bool"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "import_mode": {
            "choices": [
              "atomic",
              "best-effort"
            ],
            "description": [
              "Determines how the import should be handled by the APIC.",
              "The APIC defaults to C(atomic) when unset."
            ],
            "type": "str"
          },
          "import_policy": {
            "description": [
              "The name of the Import Policy to use for config rollback."
            ],
            "type": "str"
          },
          "import_type": {
            "choices": [
              "merge",
              "replace"
            ],
            "description": [
              "Determines how the current and snapshot configuration should be compared for replacement.",
              "The APIC defaults to C(replace) when unset."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "snapshot": {
            "description": [
              "The name of the snapshot to rollback to, or the base snapshot to use for comparison.",
              "The C(aci_snapshot) module can be used to query the list of available snapshots."
            ],
            "required": true,
            "type": "str"
          },
          "state": {
            "choices": [
              "preview",
              "rollback"
            ],
            "default": "rollback",
            "description": [
              "Use C(preview) for previewing the diff between two snapshots.",
              "Use C(rollback) for reverting the configuration to a previous snapshot."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_config_snapshot"
          },
          {
            "description": "More information about the internal APIC class B(config:ImportP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Provides rollback and rollback preview functionality (config:ImportP)"
      },
      "examples": "\n---\n- name: Create a Snapshot\n  cisco.aci.aci_config_snapshot:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    export_policy: config_backup\n    state: present\n  delegate_to: localhost\n\n- name: Query Existing Snapshots\n  cisco.aci.aci_config_snapshot:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    export_policy: config_backup\n    state: query\n  delegate_to: localhost\n\n- name: Compare Snapshot Files\n  cisco.aci.aci_config_rollback:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    export_policy: config_backup\n    snapshot: run-2017-08-28T06-24-01\n    compare_export_policy: config_backup\n    compare_snapshot: run-2017-08-27T23-43-56\n    state: preview\n  delegate_to: localhost\n\n- name: Rollback Configuration\n  cisco.aci.aci_config_rollback:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    import_policy: rollback_config\n    export_policy: config_backup\n    snapshot: run-2017-08-28T06-24-01\n    state: rollback\n  delegate_to: localhost\n\n- name: Rollback Configuration\n  cisco.aci.aci_config_rollback:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    import_policy: rollback_config\n    export_policy: config_backup\n    snapshot: run-2017-08-28T06-24-01\n    description: Rollback 8-27 changes\n    import_mode: atomic\n    import_type: replace\n    fail_on_decrypt: yes\n    state: rollback\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "preview": {
          "description": "A preview between two snapshots",
          "returned": "when state is preview",
          "type": "str"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_config_snapshot": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Config Snapshots on Cisco ACI fabrics.",
          "Creating new Snapshots is done using the configExportP class.",
          "Removing Snapshots is done using the configSnapshot class."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_config_snapshot.py",
        "has_action": false,
        "module": "aci_config_snapshot",
        "notes": [
          "The APIC does not provide a mechanism for naming the snapshots.",
          "Snapshot files use the following naming structure: ce_<config export policy name>-<yyyy>-<mm>-<dd>T<hh>:<mm>:<ss>.<mss>+<hh>:<mm>.",
          "Snapshot objects use the following naming structure: run-<yyyy>-<mm>-<dd>T<hh>-<mm>-<ss>."
        ],
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the Config Export Policy."
            ],
            "type": "str"
          },
          "export_policy": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the Export Policy to use for Config Snapshots."
            ],
            "type": "str"
          },
          "format": {
            "choices": [
              "json",
              "xml"
            ],
            "description": [
              "Sets the config backup to be formatted in JSON or XML.",
              "The APIC defaults to C(json) when unset."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "include_secure": {
            "description": [
              "Determines if secure information should be included in the backup.",
              "The APIC defaults to C(yes) when unset."
            ],
            "type": "bool"
          },
          "max_count": {
            "description": [
              "Determines how many snapshots can exist for the Export Policy before the APIC starts to rollover.",
              "Accepted values range between C(1) and C(10).",
              "The APIC defaults to C(3) when unset."
            ],
            "type": "int"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "snapshot": {
            "description": [
              "The name of the snapshot to delete."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_config_rollback"
          },
          {
            "description": "More information about the internal APIC classes B(config:Snapshot) and B(config:ExportP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Config Snapshots (config:Snapshot, config:ExportP)"
      },
      "examples": "\n- name: Create a Snapshot\n  cisco.aci.aci_config_snapshot:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: present\n    export_policy: config_backup\n    max_count: 10\n    description: Backups taken before new configs are applied.\n  delegate_to: localhost\n\n- name: Query all Snapshots\n  cisco.aci.aci_config_snapshot:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query Snapshots associated with a particular Export Policy\n  cisco.aci.aci_config_snapshot:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    export_policy: config_backup\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Delete a Snapshot\n  cisco.aci.aci_config_snapshot:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    export_policy: config_backup\n    snapshot: run-2017-08-24T17-20-05\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_contract": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Contract resources on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_contract.py",
        "has_action": false,
        "module": "aci_contract",
        "notes": [
          "This module does not manage Contract Subjects, see M(cisco.aci.aci_contract_subject) to do this. Contract Subjects can still be removed using this module.",
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract": {
            "aliases": [
              "contract_name",
              "name"
            ],
            "description": [
              "The name of the contract."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the contract."
            ],
            "type": "str"
          },
          "dscp": {
            "aliases": [
              "target"
            ],
            "choices": [
              "AF11",
              "AF12",
              "AF13",
              "AF21",
              "AF22",
              "AF23",
              "AF31",
              "AF32",
              "AF33",
              "AF41",
              "AF42",
              "AF43",
              "CS0",
              "CS1",
              "CS2",
              "CS3",
              "CS4",
              "CS5",
              "CS6",
              "CS7",
              "EF",
              "VA",
              "unspecified"
            ],
            "description": [
              "The target Differentiated Service (DSCP) value.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "priority": {
            "choices": [
              "level1",
              "level2",
              "level3",
              "unspecified"
            ],
            "description": [
              "The desired QoS class to be used.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "scope": {
            "choices": [
              "application-profile",
              "context",
              "global",
              "tenant"
            ],
            "description": [
              "The scope of a service contract.",
              "The APIC defaults to C(context) when unset during creation."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_contract_subject"
          },
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(vz:BrCP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage contract resources (vz:BrCP)"
      },
      "examples": "\n- name: Add a new contract\n  cisco.aci.aci_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    description: Communication between web-servers and database\n    scope: application-profile\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing contract\n  cisco.aci.aci_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific contract\n  cisco.aci.aci_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all contracts\n  cisco.aci.aci_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_contract_export": {
      "doc": {
        "author": [
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Contract interfaces on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_contract_export.py",
        "has_action": false,
        "module": "aci_contract_export",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract": {
            "aliases": [
              "contract_name"
            ],
            "description": [
              "The name of the contract to export."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the contract interface."
            ],
            "type": "str"
          },
          "destination_tenant": {
            "description": [
              "The The tenant associated with the contract interface."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "interface_name"
            ],
            "description": [
              "The name of the contract interface."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant hosting the contract to export."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_contract"
          },
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(vz:BrCP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage contract interfaces (vz:CPIf)"
      },
      "examples": "\n- name: Create a new contract interface\n  cisco.aci.aci_contract_export:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: contractintf\n    destination_tenant: tndest\n    tenant: tnsrc\n    contract: web_to_db\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing contract interface\n  cisco.aci.aci_contract_export:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: contractintf\n    destination_tenant: tndest\n    tenant: tnsrc\n    contract: web_to_db\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific contract interface\n  cisco.aci.aci_contract_export:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: contractintf\n    destination_tenant: tndest\n    tenant: tnsrc\n    contract: web_to_db\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all contract interfaces\n  cisco.aci.aci_contract_export:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_contract_subject": {
      "doc": {
        "author": [
          "Swetha Chunduri (@schunduri)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage initial Contract Subjects on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_contract_subject.py",
        "has_action": false,
        "module": "aci_contract_subject",
        "notes": [
          "The C(tenant) and C(contract) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_contract) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "consumer_match": {
            "choices": [
              "all",
              "at_least_one",
              "at_most_one",
              "none"
            ],
            "description": [
              "The match criteria across consumers.",
              "The APIC defaults to C(at_least_one) when unset during creation."
            ],
            "type": "str"
          },
          "contract": {
            "aliases": [
              "contract_name"
            ],
            "description": [
              "The name of the Contract."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the contract subject."
            ],
            "type": "str"
          },
          "dscp": {
            "aliases": [
              "target"
            ],
            "choices": [
              "AF11",
              "AF12",
              "AF13",
              "AF21",
              "AF22",
              "AF23",
              "AF31",
              "AF32",
              "AF33",
              "AF41",
              "AF42",
              "AF43",
              "CS0",
              "CS1",
              "CS2",
              "CS3",
              "CS4",
              "CS5",
              "CS6",
              "CS7",
              "EF",
              "VA",
              "unspecified"
            ],
            "description": [
              "The target DSCP.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "priority": {
            "choices": [
              "level1",
              "level2",
              "level3",
              "unspecified"
            ],
            "description": [
              "The QoS class.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "provider_match": {
            "choices": [
              "all",
              "at_least_one",
              "at_most_one",
              "none"
            ],
            "description": [
              "The match criteria across providers.",
              "The APIC defaults to C(at_least_one) when unset during creation."
            ],
            "type": "str"
          },
          "reverse_filter": {
            "description": [
              "Determines if the APIC should reverse the src and dst ports to allow the return traffic back, since ACI is stateless filter.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "subject": {
            "aliases": [
              "contract_subject",
              "name",
              "subject_name"
            ],
            "description": [
              "The contract subject name."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_contract"
          },
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(vz:Subj).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage initial Contract Subjects (vz:Subj)"
      },
      "examples": "\n- name: Add a new contract subject\n  cisco.aci.aci_contract_subject:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: default\n    description: test\n    reverse_filter: yes\n    priority: level1\n    dscp: unspecified\n    state: present\n  register: query_result\n\n- name: Remove a contract subject\n  cisco.aci.aci_contract_subject:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: default\n    state: absent\n  delegate_to: localhost\n\n- name: Query a contract subject\n  cisco.aci.aci_contract_subject:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: default\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all contract subjects\n  cisco.aci.aci_contract_subject:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_contract_subject_to_filter": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind Contract Subjects to Filters on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_contract_subject_to_filter.py",
        "has_action": false,
        "module": "aci_contract_subject_to_filter",
        "notes": [
          "The C(tenant), C(contract), C(subject), and C(filter_name) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant), M(cisco.aci.aci_contract), M(cisco.aci.aci_contract_subject), and M(cisco.aci.aci_filter) modules can be used for these."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract": {
            "aliases": [
              "contract_name"
            ],
            "description": [
              "The name of the contract."
            ],
            "type": "str"
          },
          "filter": {
            "aliases": [
              "filter_name"
            ],
            "description": [
              "The name of the Filter to bind to the Subject."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "log": {
            "aliases": [
              "directive"
            ],
            "choices": [
              "log",
              "none"
            ],
            "description": [
              "Determines if the binding should be set to log.",
              "The APIC defaults to C(none) when unset during creation."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "subject": {
            "aliases": [
              "contract_subject",
              "subject_name"
            ],
            "description": [
              "The name of the Contract Subject."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_contract_subject"
          },
          {
            "module": "cisco.aci.aci_filter"
          },
          {
            "description": "More information about the internal APIC class B(vz:RsSubjFiltAtt).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind Contract Subjects to Filters (vz:RsSubjFiltAtt)"
      },
      "examples": "\n- name: Add a new contract subject to filer binding\n  cisco.aci.aci_contract_subject_to_filter:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: test\n    filter: '{{ filter }}'\n    log: '{{ log }}'\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing contract subject to filter binding\n  cisco.aci.aci_contract_subject_to_filter:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: test\n    filter: '{{ filter }}'\n    log: '{{ log }}'\n    state: present\n  delegate_to: localhost\n\n- name: Query a specific contract subject to filter binding\n  cisco.aci.aci_contract_subject_to_filter:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: test\n    filter: '{{ filter }}'\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all contract subject to filter bindings\n  cisco.aci.aci_contract_subject_to_filter:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: test\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_contract_subject_to_service_graph": {
      "doc": {
        "author": [
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind contract subject to service graph."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_contract_subject_to_service_graph.py",
        "has_action": false,
        "module": "aci_contract_subject_to_service_graph",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract": {
            "description": [
              "The name of the contract."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "service_graph": {
            "description": [
              "The service graph name."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "subject": {
            "description": [
              "The contract subject name."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "The name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind contract subject to service graph (vz:RsSubjGraphAtt)."
      },
      "examples": "\n- name: Add a new contract subject to service graph binding\n  cisco.aci.aci_contract_subject_to_service_graph:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: test\n    service_graph: '{{ service_graph }}'\n    state: present\n  delegate_to: localhost\n- name: Remove an existing contract subject to service graph binding\n  cisco.aci.aci_contract_subject_to_service_graph:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: test\n    service_graph: '{{ service_graph }}'\n    state: absent\n  delegate_to: localhost\n- name: Query a specific contract subject to service graph binding\n  cisco.aci.aci_contract_subject_to_service_graph:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    contract: web_to_db\n    subject: test\n    service_graph: '{{ service_graph }}'\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_dhcp_relay": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage DHCP relay policy (dhcpRelayP) configuration on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_dhcp_relay.py",
        "has_action": false,
        "module": "aci_dhcp_relay",
        "notes": [
          "The C(tenant) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) modules can be used for this."
        ],
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the relay policy"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "relay_policy"
            ],
            "description": [
              "Name of the DHCP relay policy"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(dhcpRelayP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage DHCP relay policies."
      },
      "examples": "\n- name: Add a new DHCP relay policy\n  cisco.aci.aci_dhcp_relay:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Auto-Demo\n    name: my_dhcp_relay\n    description: via Ansible\n    state: present\n  delegate_to: localhost\n\n- name: Remove a DHCP relay policy\n  cisco.aci.aci_dhcp_relay:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Auto-Demo\n    name: my_dhcp_relay\n    state: absent\n  delegate_to: localhost\n\n- name: Query a DHCP relay policy\n  cisco.aci.aci_dhcp_relay:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Auto-Demo\n    name: my_dhcp_relay\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all DHCP relay policies in a specific tenant\n  cisco.aci.aci_dhcp_relay:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Auto-Demo\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_dhcp_relay_provider": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage DHCP relay policy providers (dhcpRsProv) configuration on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_dhcp_relay_provider.py",
        "has_action": false,
        "module": "aci_dhcp_relay_provider",
        "notes": [
          "The C(tenant) and C(relay_policy) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and C(cisco.aci.aci_dhcp_relay) modules can be used for this."
        ],
        "options": {
          "anp": {
            "description": [
              "Application Profile the EPG is in.",
              "Only used when epg_type is app_epg."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "dhcp_server_addr": {
            "description": [
              "DHCP server address"
            ],
            "type": "str"
          },
          "dn": {
            "description": [
              "dn of the EPG the DHCP server is in",
              "Only used when epg_type is dn"
            ],
            "type": "str"
          },
          "epg": {
            "aliases": [
              "app_epg"
            ],
            "description": [
              "Name of the Application EPG the DHCP server is in.",
              "Only used when epg_type is epg"
            ],
            "type": "str"
          },
          "epg_type": {
            "choices": [
              "epg",
              "l2_external",
              "l3_external",
              "dn"
            ],
            "description": [
              "Type of EPG the DHCP server is in"
            ],
            "required": true,
            "type": "str"
          },
          "external_epg": {
            "aliases": [
              "external_net"
            ],
            "description": [
              "Name of the external network object the DHCP server is in.",
              "Only used when epg_type is l2_external or l3_external."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l2out_name": {
            "description": [
              "Name of the L2out the DHCP server is in.",
              "Only used when epg_type is l2_external"
            ],
            "type": "str"
          },
          "l3out_name": {
            "description": [
              "Name of the L3out the DHCP server is in.",
              "Only used when epg_type is l3_external."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "provider_tenant": {
            "description": [
              "Name of the tenant the epg or external_epg is in",
              "Only required if the epg or external_epg is in a different tenant than the relay_policy"
            ],
            "type": "str"
          },
          "relay_policy": {
            "aliases": [
              "relay_policy_name"
            ],
            "description": [
              "Name of an existing DHCP relay policy"
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "Name of the tenant the relay_policy is in."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(dhcpRsProv).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage DHCP relay policy providers."
      },
      "examples": "\n- name: Add a new DHCP relay App EPG provider\n  cisco.aci.aci_dhcp_relay_provider:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Auto-Demo\n    relay_policy: my_dhcp_relay\n    epg_type: epg\n    anp: my_anp\n    epg: my_app_epg\n    dhcp_server_addr: 10.20.30.40\n    state: present\n  delegate_to: localhost\n\n- name: Add a new DHCP relay L3out provider\n  cisco.aci.aci_dhcp_relay_provider:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Auto-Demo\n    relay_policy: my_dhcp_relay\n    epg_type: l3_external\n    l3out_name: my_l3out\n    external_net: my_l3out_ext_net\n    dhcp_server_addr: 10.20.30.40\n    state: present\n  delegate_to: localhost\n\n- name: Remove a DHCP relay provider\n  cisco.aci.aci_dhcp_relay_provider:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Auto-Demo\n    relay_policy: my_dhcp_relay\n    epg_type: epg\n    anp: my_anp\n    epg: my_app_epg\n    state: absent\n  delegate_to: localhost\n\n- name: Query a DHCP relay provider\n  cisco.aci.aci_dhcp_relay_provider:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Auto-Demo\n    relay_policy: my_dhcp_relay\n    epg_type: epg\n    anp: my_anp\n    epg: my_app_epg\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_dns_domain": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage DNS Domain configuration on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_dns_domain.py",
        "has_action": false,
        "module": "aci_dns_domain",
        "notes": [
          "The C(dns_profile) must exist before using this module in your playbook. The M(cisco.aci.aci_dns_profile) modules can be used for this."
        ],
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "default": {
            "description": [
              "Whether this is the default domain"
            ],
            "type": "bool"
          },
          "dns_profile": {
            "aliases": [
              "profile_name"
            ],
            "description": [
              "Name of the DNS profile."
            ],
            "required": true,
            "type": "str"
          },
          "domain": {
            "aliases": [
              "name",
              "domain_name"
            ],
            "description": [
              "DNS domain name"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(dnsDomain).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage DNS Provider (dnsDomain) objects."
      },
      "examples": "\n- name: Add a new DNS domain\n  cisco.aci.aci_dns_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    domain: example.com\n    state: present\n  delegate_to: localhost\n\n- name: Remove a DNS domain\n  cisco.aci.aci_dns_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    domain: example.com\n    state: absent\n  delegate_to: localhost\n\n- name: Query a DNS domain\n  cisco.aci.aci_dns_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    domain: example.com\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all DNS domains within a DNS profile\n  cisco.aci.aci_dns_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_dns_profile": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage DNS Profile configuration on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_dns_profile.py",
        "has_action": false,
        "module": "aci_dns_profile",
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "dns_profile": {
            "aliases": [
              "name",
              "profile_name"
            ],
            "description": [
              "Name of the DNS profile."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(dnsProfile).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage DNS Profile (dnsProfile) objects."
      },
      "examples": "\n- name: Add a new DNS profile\n  cisco.aci.aci_dns_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    state: present\n  delegate_to: localhost\n\n- name: Remove a DNS profile\n  cisco.aci.aci_dns_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    state: absent\n  delegate_to: localhost\n\n- name: Query a DNS profile\n  cisco.aci.aci_dns_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all DNS profiles\n  cisco.aci.aci_dns_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_dns_provider": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage DNS Provider configuration on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_dns_provider.py",
        "has_action": false,
        "module": "aci_dns_provider",
        "notes": [
          "The C(dns_profile) must exist before using this module in your playbook. The M(cisco.aci.aci_dns_profile) modules can be used for this."
        ],
        "options": {
          "address": {
            "aliases": [
              "addr",
              "ip_address"
            ],
            "description": [
              "address of the DNS server"
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "dns_profile": {
            "aliases": [
              "profile_name"
            ],
            "description": [
              "Name of the DNS profile."
            ],
            "required": true,
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "preferred": {
            "description": [
              "Whether this is the preferred DNS server"
            ],
            "type": "bool"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(dnsProv).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage DNS Provider (dnsProv) objects."
      },
      "examples": "\n- name: Add a new DNS provider\n  cisco.aci.aci_dns_provider:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    address: 10.20.30.40\n    state: present\n  delegate_to: localhost\n\n- name: Remove a DNS provider\n  cisco.aci.aci_dns_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    address: 10.20.30.40\n    state: absent\n  delegate_to: localhost\n\n- name: Query a DNS provider\n  cisco.aci.aci_dns_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dns_profile: my_dns_prof\n    address: 10.20.30.40\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all DNS providers within a DNS profile\n  cisco.aci.aci_dns_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_domain": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage physical, virtual, bridged, routed or FC domain profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_domain.py",
        "has_action": false,
        "module": "aci_domain",
        "options": {
          "access_mode": {
            "choices": [
              "read-only",
              "read-write"
            ],
            "description": [
              "Access mode for vmm domains",
              "This parameter cannot be changed after a domain is created"
            ],
            "type": "str"
          },
          "add_infra_pg": {
            "aliases": [
              "infra_pg"
            ],
            "description": [
              "Configure port groups for infra VLAN (e.g. Virtual APIC)."
            ],
            "type": "bool"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "domain_name",
              "domain_profile",
              "name"
            ],
            "description": [
              "Name of the physical, virtual, bridged routed or FC domain profile."
            ],
            "type": "str"
          },
          "domain_type": {
            "aliases": [
              "type"
            ],
            "choices": [
              "fc",
              "l2dom",
              "l3dom",
              "phys",
              "vmm"
            ],
            "description": [
              "The type of domain profile.",
              "C(fc): The FC domain profile is a policy pertaining to single FC Management domain",
              "C(l2dom): The external bridged domain profile is a policy for managing L2 bridged infrastructure bridged outside the fabric.",
              "C(l3dom): The external routed domain profile is a policy for managing L3 routed infrastructure outside the fabric.",
              "C(phys): The physical domain profile stores the physical resources and encap resources that should be used for EPGs associated with this domain.",
              "C(vmm): The VMM domain profile is a policy for grouping VM controllers with similar networking policy requirements."
            ],
            "required": true,
            "type": "str"
          },
          "dscp": {
            "aliases": [
              "target"
            ],
            "choices": [
              "AF11",
              "AF12",
              "AF13",
              "AF21",
              "AF22",
              "AF23",
              "AF31",
              "AF32",
              "AF33",
              "AF41",
              "AF42",
              "AF43",
              "CS0",
              "CS1",
              "CS2",
              "CS3",
              "CS4",
              "CS5",
              "CS6",
              "CS7",
              "EF",
              "VA",
              "unspecified"
            ],
            "description": [
              "The target Differentiated Service (DSCP) value.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "enable_vm_folder": {
            "description": [
              "Enable VM folder data retrieval"
            ],
            "type": "bool"
          },
          "encap_mode": {
            "choices": [
              "unknown",
              "vlan",
              "vxlan"
            ],
            "description": [
              "The layer 2 encapsulation protocol to use with the virtual switch."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "multicast_address": {
            "description": [
              "The multicast IP address to use for the virtual switch."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tag_collection": {
            "description": [
              "Enables Cisco APIC to collect VMs that have been assigned tags in VMware vCenter for microsegmentation."
            ],
            "type": "bool"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vm_provider": {
            "choices": [
              "cloudfoundry",
              "kubernetes",
              "microsoft",
              "openshift",
              "openstack",
              "redhat",
              "vmware"
            ],
            "description": [
              "The VM platform for VMM Domains.",
              "Support for Kubernetes was added in ACI v3.0.",
              "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
            ],
            "type": "str"
          },
          "vswitch": {
            "choices": [
              "avs",
              "default",
              "dvs",
              "unknown"
            ],
            "description": [
              "The virtual switch to use for vmm domains.",
              "The APIC defaults to C(default) when unset during creation."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_aep_to_domain"
          },
          {
            "module": "cisco.aci.aci_domain_to_encap_pool"
          },
          {
            "module": "cisco.aci.aci_domain_to_vlan_pool"
          },
          {
            "description": "More information about the internal APIC classes B(phys:DomP), B(vmm:DomP), B(l2ext:DomP), B(l3ext:DomP) and B(fc:DomP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage physical, virtual, bridged, routed or FC domain profiles (phys:DomP, vmm:DomP, l2ext:DomP, l3ext:DomP, fc:DomP)"
      },
      "examples": "\n- name: Add a new physical domain\n  cisco.aci.aci_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    domain_type: phys\n    state: present\n\n- name: Remove a physical domain\n  cisco.aci.aci_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    domain_type: phys\n    state: absent\n\n- name: Add a new VMM domain\n  cisco.aci.aci_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: hyperv_dom\n    domain_type: vmm\n    vm_provider: microsoft\n    state: present\n  delegate_to: localhost\n\n- name: Remove a VMM domain\n  cisco.aci.aci_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: hyperv_dom\n    domain_type: vmm\n    vm_provider: microsoft\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific physical domain\n  cisco.aci.aci_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    domain_type: phys\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all domains\n  cisco.aci.aci_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain_type: phys\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_domain_to_encap_pool": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind Domain to Encap Pools on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_domain_to_encap_pool.py",
        "has_action": false,
        "module": "aci_domain_to_encap_pool",
        "notes": [
          "The C(domain) and C(encap_pool) parameters should exist before using this module. The M(cisco.aci.aci_domain) and M(cisco.aci.aci_encap_pool) can be used for these."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "domain_name",
              "domain_profile"
            ],
            "description": [
              "Name of the domain being associated with the Encap Pool."
            ],
            "type": "str"
          },
          "domain_type": {
            "choices": [
              "fc",
              "l2dom",
              "l3dom",
              "phys",
              "vmm"
            ],
            "description": [
              "Determines if the Domain is physical (phys) or virtual (vmm)."
            ],
            "required": true,
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pool": {
            "aliases": [
              "pool_name"
            ],
            "description": [
              "The name of the pool."
            ],
            "type": "str"
          },
          "pool_allocation_mode": {
            "aliases": [
              "allocation_mode",
              "mode"
            ],
            "choices": [
              "dynamic",
              "static"
            ],
            "description": [
              "The method used for allocating encaps to resources.",
              "Only vlan and vsan support allocation modes."
            ],
            "type": "str"
          },
          "pool_type": {
            "choices": [
              "vlan",
              "vsan",
              "vxlan"
            ],
            "description": [
              "The encap type of C(pool)."
            ],
            "required": true,
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vm_provider": {
            "choices": [
              "cloudfoundry",
              "kubernetes",
              "microsoft",
              "openshift",
              "openstack",
              "redhat",
              "vmware"
            ],
            "description": [
              "The VM platform for VMM Domains.",
              "Support for Kubernetes was added in ACI v3.0.",
              "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "module": "cisco.aci.aci_encap_pool"
          },
          {
            "description": "More information about the internal APIC class B(infra:RsVlanNs).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind Domain to Encap Pools (infra:RsVlanNs)"
      },
      "examples": "\n- name: Add domain to VLAN pool binding\n  cisco.aci.aci_domain_to_encap_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    domain_type: phys\n    pool: test_pool\n    pool_type: vlan\n    pool_allocation_mode: dynamic\n    state: present\n  delegate_to: localhost\n\n- name: Remove domain to VLAN pool binding\n  cisco.aci.aci_domain_to_encap_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    domain_type: phys\n    pool: test_pool\n    pool_type: vlan\n    pool_allocation_mode: dynamic\n    state: absent\n  delegate_to: localhost\n\n- name: Query our domain to VLAN pool binding\n  cisco.aci.aci_domain_to_encap_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    pool: test_pool\n    pool_type: vlan\n    pool_allocation_mode: dynamic\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all domain to VLAN pool bindings\n  cisco.aci.aci_domain_to_encap_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain_type: phys\n    pool_type: vlan\n    pool_allocation_mode: dynamic\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_domain_to_vlan_pool": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind Domain to VLAN Pools on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_domain_to_vlan_pool.py",
        "has_action": false,
        "module": "aci_domain_to_vlan_pool",
        "notes": [
          "The C(domain) and C(vlan_pool) parameters should exist before using this module. The M(cisco.aci.aci_domain) and M(cisco.aci.aci_vlan_pool) can be used for these."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "domain_name",
              "domain_profile"
            ],
            "description": [
              "Name of the domain being associated with the VLAN Pool."
            ],
            "type": "str"
          },
          "domain_type": {
            "choices": [
              "fc",
              "l2dom",
              "l3dom",
              "phys",
              "vmm"
            ],
            "description": [
              "Determines if the Domain is physical (phys) or virtual (vmm)."
            ],
            "required": true,
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pool": {
            "aliases": [
              "pool_name",
              "vlan_pool"
            ],
            "description": [
              "The name of the pool."
            ],
            "type": "str"
          },
          "pool_allocation_mode": {
            "aliases": [
              "allocation_mode",
              "mode"
            ],
            "choices": [
              "dynamic",
              "static"
            ],
            "description": [
              "The method used for allocating VLANs to resources."
            ],
            "required": true,
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vm_provider": {
            "choices": [
              "cloudfoundry",
              "kubernetes",
              "microsoft",
              "openshift",
              "openstack",
              "redhat",
              "vmware"
            ],
            "description": [
              "The VM platform for VMM Domains.",
              "Support for Kubernetes was added in ACI v3.0.",
              "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "module": "cisco.aci.aci_vlan_pool"
          },
          {
            "description": "More information about the internal APIC class B(infra:RsVlanNs).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind Domain to VLAN Pools (infra:RsVlanNs)"
      },
      "examples": "\n- name: Bind a VMM domain to VLAN pool\n  cisco.aci.aci_domain_to_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmw_dom\n    domain_type: vmm\n    pool: vmw_pool\n    pool_allocation_mode: dynamic\n    vm_provider: vmware\n    state: present\n  delegate_to: localhost\n\n- name: Remove a VMM domain to VLAN pool binding\n  cisco.aci.aci_domain_to_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmw_dom\n    domain_type: vmm\n    pool: vmw_pool\n    pool_allocation_mode: dynamic\n    vm_provider: vmware\n    state: absent\n  delegate_to: localhost\n\n- name: Bind a physical domain to VLAN pool\n  cisco.aci.aci_domain_to_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    domain_type: phys\n    pool: phys_pool\n    pool_allocation_mode: static\n    state: present\n  delegate_to: localhost\n\n- name: Bind a physical domain to VLAN pool\n  cisco.aci.aci_domain_to_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    domain_type: phys\n    pool: phys_pool\n    pool_allocation_mode: static\n    state: absent\n  delegate_to: localhost\n\n- name: Query an domain to VLAN pool binding\n  cisco.aci.aci_domain_to_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: phys_dom\n    domain_type: phys\n    pool: phys_pool\n    pool_allocation_mode: static\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all domain to VLAN pool bindings\n  cisco.aci.aci_domain_to_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain_type: phys\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_encap_pool": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage vlan, vxlan, and vsan pools on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_encap_pool.py",
        "has_action": false,
        "module": "aci_encap_pool",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the C(pool)."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pool": {
            "aliases": [
              "name",
              "pool_name"
            ],
            "description": [
              "The name of the pool."
            ],
            "type": "str"
          },
          "pool_allocation_mode": {
            "aliases": [
              "allocation_mode",
              "mode"
            ],
            "choices": [
              "dynamic",
              "static"
            ],
            "description": [
              "The method used for allocating encaps to resources.",
              "Only vlan and vsan support allocation modes."
            ],
            "type": "str"
          },
          "pool_type": {
            "aliases": [
              "type"
            ],
            "choices": [
              "vlan",
              "vsan",
              "vxlan"
            ],
            "description": [
              "The encap type of C(pool)."
            ],
            "required": true,
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_encap_pool_range"
          },
          {
            "module": "cisco.aci.aci_vlan_pool"
          },
          {
            "description": "More information about the internal APIC classes B(fvns:VlanInstP), B(fvns:VxlanInstP) and B(fvns:VsanInstP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage encap pools (fvns:VlanInstP, fvns:VxlanInstP, fvns:VsanInstP)"
      },
      "examples": "\n- name: Add a new vlan pool\n  cisco.aci.aci_encap_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_type: vlan\n    description: Production VLANs\n    state: present\n  delegate_to: localhost\n\n- name: Remove a vlan pool\n  cisco.aci.aci_encap_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_type: vlan\n    state: absent\n  delegate_to: localhost\n\n- name: Query a vlan pool\n  cisco.aci.aci_encap_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_type: vlan\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all vlan pools\n  cisco.aci.aci_encap_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool_type: vlan\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_encap_pool_range": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage vlan, vxlan, and vsan ranges that are assigned to pools on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_encap_pool_range.py",
        "has_action": false,
        "module": "aci_encap_pool_range",
        "notes": [
          "The C(pool) must exist in order to add or delete a range."
        ],
        "options": {
          "allocation_mode": {
            "aliases": [
              "mode"
            ],
            "choices": [
              "dynamic",
              "inherit",
              "static"
            ],
            "description": [
              "The method used for allocating encaps to resources.",
              "Only vlan and vsan support allocation modes."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the pool range."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pool": {
            "aliases": [
              "pool_name"
            ],
            "description": [
              "The name of the pool that the range should be assigned to."
            ],
            "type": "str"
          },
          "pool_allocation_mode": {
            "aliases": [
              "pool_mode"
            ],
            "choices": [
              "dynamic",
              "static"
            ],
            "description": [
              "The method used for allocating encaps to resources.",
              "Only vlan and vsan support allocation modes."
            ],
            "type": "str"
          },
          "pool_type": {
            "aliases": [
              "type"
            ],
            "choices": [
              "vlan",
              "vxlan",
              "vsan"
            ],
            "description": [
              "The encap type of C(pool)."
            ],
            "required": true,
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "range_end": {
            "aliases": [
              "end"
            ],
            "description": [
              "The end of encap range."
            ],
            "type": "int"
          },
          "range_name": {
            "aliases": [
              "name",
              "range"
            ],
            "description": [
              "The name to give to the encap range."
            ],
            "type": "str"
          },
          "range_start": {
            "aliases": [
              "start"
            ],
            "description": [
              "The start of the encap range."
            ],
            "type": "int"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_encap_pool"
          },
          {
            "module": "cisco.aci.aci_vlan_pool_encap_block"
          },
          {
            "description": "More information about the internal APIC classes B(fvns:EncapBlk) and B(fvns:VsanEncapBlk).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage encap ranges assigned to pools (fvns:EncapBlk, fvns:VsanEncapBlk)"
      },
      "examples": "\n- name: Add a new VLAN pool range\n  cisco.aci.aci_encap_pool_range:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_type: vlan\n    pool_allocation_mode: static\n    range_name: anstest\n    range_start: 20\n    range_end: 40\n    allocation_mode: inherit\n    state: present\n  delegate_to: localhost\n\n- name: Remove a VLAN pool range\n  cisco.aci.aci_encap_pool_range:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_type: vlan\n    pool_allocation_mode: static\n    range_name: anstest\n    range_start: 20\n    range_end: 40\n    state: absent\n  delegate_to: localhost\n\n- name: Query a VLAN range\n  cisco.aci.aci_encap_pool_range:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_type: vlan\n    pool_allocation_mode: static\n    range_name: anstest\n    range_start: 20\n    range_end: 50\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a VLAN pool for ranges by range_name\n  cisco.aci.aci_encap_pool_range:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool_type: vlan\n    range_name: anstest\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a VLAN pool for ranges by range_start\n  cisco.aci.aci_encap_pool_range:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool_type: vlan\n    range_start: 20\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a VLAN pool for ranges by range_start and range_end\n  cisco.aci.aci_encap_pool_range:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool_type: vlan\n    range_start: 20\n    range_end: 40\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all VLAN pool ranges\n  cisco.aci.aci_encap_pool_range:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool_type: vlan\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_epg": {
      "doc": {
        "author": [
          "Swetha Chunduri (@schunduri)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage End Point Groups (EPG) on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_epg.py",
        "has_action": false,
        "module": "aci_epg",
        "notes": [
          "The C(tenant) and C(app_profile) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_ap) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "Name of an existing application network profile, that will contain the EPGs."
            ],
            "type": "str"
          },
          "bd": {
            "aliases": [
              "bd_name",
              "bridge_domain"
            ],
            "description": [
              "Name of the bridge domain being associated with the EPG."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "custom_qos_policy": {
            "description": [
              "The name of the custom Quality of Service policy."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the EPG."
            ],
            "type": "str"
          },
          "epg": {
            "aliases": [
              "epg_name",
              "name"
            ],
            "description": [
              "Name of the end point group."
            ],
            "type": "str"
          },
          "fwd_control": {
            "choices": [
              "none",
              "proxy-arp"
            ],
            "description": [
              "The forwarding control used by the EPG.",
              "The APIC defaults to C(none) when unset during creation."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "intra_epg_isolation": {
            "choices": [
              "enforced",
              "unenforced"
            ],
            "description": [
              "The Intra EPG Isolation.",
              "The APIC defaults to C(unenforced) when unset during creation."
            ],
            "type": "str"
          },
          "monitoring_policy": {
            "description": [
              "The name of the monitoring policy."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "preferred_group": {
            "description": [
              "Whether ot not the EPG is part of the Preferred Group and can communicate without contracts.",
              "This is very convenient for migration scenarios, or when ACI is used for network automation but not for policy.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "priority": {
            "choices": [
              "level1",
              "level2",
              "level3",
              "unspecified"
            ],
            "description": [
              "The QoS class.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "useg": {
            "choices": [
              "yes",
              "no"
            ],
            "description": [
              "Use C(yes) to create uSeg EPG and C(no) is used to create Application EPG."
            ],
            "type": "str"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_ap"
          },
          {
            "description": "More information about the internal APIC class B(fv:AEPg).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage End Point Groups (EPG) objects (fv:AEPg)"
      },
      "examples": "\n- name: Add a new EPG\n  cisco.aci.aci_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: intranet\n    epg: web_epg\n    description: Web Intranet EPG\n    bd: prod_bd\n    monitoring_policy: default\n    preferred_group: yes\n    state: present\n  delegate_to: localhost\n\n- aci_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: ticketing\n    epg: \"{{ item.epg }}\"\n    description: Ticketing EPG\n    bd: \"{{ item.bd }}\"\n    priority: unspecified\n    intra_epg_isolation: unenforced\n    state: present\n  delegate_to: localhost\n  with_items:\n    - epg: web\n      bd: web_bd\n    - epg: database\n      bd: database_bd\n\n- name: Add a new uSeg EPG\n  cisco.aci.aci_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: intranet\n    epg: web_epg\n    description: Web Intranet EPG\n    bd: prod_bd\n    monitoring_policy: default\n    preferred_group: yes\n    useg: yes\n    state: present\n  delegate_to: localhost\n\n- name: Remove an EPG\n  cisco.aci.aci_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    tenant: production\n    app_profile: intranet\n    epg: web_epg\n    monitoring_policy: default\n    state: absent\n  delegate_to: localhost\n\n- name: Query an EPG\n  cisco.aci.aci_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: ticketing\n    epg: web_epg\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all EPGs\n  cisco.aci.aci_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all EPGs with a Specific Name\n  cisco.aci.aci_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    epg: web_epg\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all EPGs of an App Profile\n  cisco.aci.aci_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    ap: ticketing\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_epg_monitoring_policy": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage monitoring policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_epg_monitoring_policy.py",
        "has_action": false,
        "module": "aci_epg_monitoring_policy",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the monitoring policy."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "monitoring_policy": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the monitoring policy."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(mon:EPGPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage monitoring policies (mon:EPGPol)"
      },
      "examples": "\n- cisco.aci.aci_epg_monitoring_policy:\n    host: '{{ hostname }}'\n    username: '{{ username }}'\n    password: '{{ password }}'\n    monitoring_policy: '{{ monitoring_policy }}'\n    description: '{{ description }}'\n    tenant: '{{ tenant }}'\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_epg_to_contract": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind EPGs to Contracts on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_epg_to_contract.py",
        "has_action": false,
        "module": "aci_epg_to_contract",
        "notes": [
          "The C(tenant), C(app_profile), C(EPG), and C(Contract) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant), M(cisco.aci.aci_ap), M(cisco.aci.aci_epg), and M(cisco.aci.aci_contract) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "Name of an existing application network profile, that will contain the EPGs."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract": {
            "aliases": [
              "contract_name"
            ],
            "description": [
              "The name of the contract."
            ],
            "type": "str"
          },
          "contract_label": {
            "description": [
              "Contract label to match"
            ],
            "type": "str"
          },
          "contract_type": {
            "choices": [
              "consumer",
              "provider"
            ],
            "description": [
              "Determines if the EPG should Provide or Consume the Contract."
            ],
            "required": true,
            "type": "str"
          },
          "epg": {
            "aliases": [
              "epg_name"
            ],
            "description": [
              "The name of the end point group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "priority": {
            "choices": [
              "level1",
              "level2",
              "level3",
              "level4",
              "level5",
              "level6",
              "unspecified"
            ],
            "description": [
              "QoS class.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "provider_match": {
            "choices": [
              "all",
              "at_least_one",
              "at_most_one",
              "none"
            ],
            "description": [
              "The matching algorithm for Provided Contracts.",
              "The APIC defaults to C(at_least_one) when unset during creation."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "subject_label": {
            "description": [
              "Subject label to match"
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_ap"
          },
          {
            "module": "cisco.aci.aci_epg"
          },
          {
            "module": "cisco.aci.aci_contract"
          },
          {
            "description": "More information about the internal APIC classes B(fv:RsCons) and B(fv:RsProv).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind EPGs to Contracts (fv:RsCons, fv:RsProv)"
      },
      "examples": "\n- name: Add a new contract to EPG binding\n  cisco.aci.aci_epg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    contract: anstest_http\n    contract_type: provider\n    contract_label: contractlabel\n    subject_label: subjlabel\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing contract to EPG binding\n  cisco.aci.aci_epg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    contract: anstest_http\n    contract_type: provider\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific contract to EPG binding\n  cisco.aci.aci_epg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    contract: anstest_http\n    contract_type: provider\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all provider contract to EPG bindings\n  cisco.aci.aci_epg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    contract_type: provider\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_epg_to_contract_interface": {
      "doc": {
        "author": [
          "Sabari Jaganathan (@sajagana)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind EPGs to Consumed Contracts Interface on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_epg_to_contract_interface.py",
        "has_action": false,
        "module": "aci_epg_to_contract_interface",
        "notes": [
          "The C(tenant), C(app_profile), C(EPG), and C(Contract Interface) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant), M(cisco.aci.aci_ap), M(cisco.aci.aci_epg), and M(cisco.aci.aci_contract_export) modules can be used for this."
        ],
        "options": {
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "Name of an existing application profile, that will contain the EPGs."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract_interface": {
            "aliases": [
              "contract_interface_name"
            ],
            "description": [
              "Name of the Contract interface, which is the contract with a \"Global\" scope which is exported to the tenant."
            ],
            "type": "str"
          },
          "epg": {
            "aliases": [
              "epg_name"
            ],
            "description": [
              "The name of the end point group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "priority": {
            "choices": [
              "level1",
              "level2",
              "level3",
              "level4",
              "level5",
              "level6",
              "unspecified"
            ],
            "description": [
              "QoS class.",
              "The default value of QoS is C(unspecified) during the creation."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_ap"
          },
          {
            "module": "cisco.aci.aci_epg"
          },
          {
            "module": "cisco.aci.aci_contract_export"
          },
          {
            "description": "More information about the internal APIC classes B(fv:RsCons) and B(fv:RsProv).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind EPGs to Consumed Contracts Interface (fv:RsConsIf)."
      },
      "examples": "\n- name: Add a new consumed contract interface to EPG\n  cisco.aci.aci_epg_to_contract_interface:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    contract_interface: anstest_http\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing consumed contract interface\n  cisco.aci.aci_epg_to_contract_interface:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    contract_interface: anstest_http\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific consumed contract interface\n  cisco.aci.aci_epg_to_contract_interface:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    contract_interface: anstest_http\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all  consumed contract interfaces\n  cisco.aci.aci_epg_to_contract_interface:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_epg_to_contract_master": {
      "doc": {
        "author": [
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage End Point Groups (EPG) contract master relationships on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_epg_to_contract_master.py",
        "has_action": false,
        "module": "aci_epg_to_contract_master",
        "notes": [
          "The C(tenant) and C(app_profile) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_ap) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "Name of an existing application network profile, that will contain the EPGs."
            ],
            "required": true,
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract_master_ap": {
            "description": [
              "Name of the application profile where the contract master EPG is."
            ],
            "type": "str"
          },
          "contract_master_epg": {
            "description": [
              "Name of the end point group which serves as contract master."
            ],
            "type": "str"
          },
          "epg": {
            "aliases": [
              "epg_name",
              "name"
            ],
            "description": [
              "Name of the end point group."
            ],
            "required": true,
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_epg"
          },
          {
            "description": "More information about the internal APIC class B(fv:AEPg).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage End Point Group (EPG) contract master relationships (fv:RsSecInherited)"
      },
      "examples": "\n- name: Add contract master\n  cisco.aci.aci_epg_to_contract_master:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: apName\n    epg: epgName\n    contract_master_ap: ap\n    contract_master_epg: epg\n    state: present\n  delegate_to: localhost\n\n- name: Remove contract master\n  cisco.aci.aci_epg_to_contract_master:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: apName\n    epg: epgName\n    contract_master_ap: ap\n    contract_master_epg: epg\n    state: absent\n  delegate_to: localhost\n\n- name: Query contract master\n  cisco.aci.aci_epg_to_contract_master:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: apName\n    epg: epgName\n    contract_master_ap: ap\n    contract_master_epg: epg\n    state: query\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_epg_to_domain": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind EPGs to Physical and Virtual Domains on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_epg_to_domain.py",
        "has_action": false,
        "module": "aci_epg_to_domain",
        "notes": [
          "The C(tenant), C(ap), C(epg), and C(domain) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) M(cisco.aci.aci_ap), M(cisco.aci.aci_epg) M(cisco.aci.aci_domain) modules can be used for this.",
          "OpenStack VMM domains must not be created using this module. The OpenStack VMM domain is created directly by the Cisco APIC Neutron plugin as part of the installation and configuration. This module can be used to query status of an OpenStack VMM domain."
        ],
        "options": {
          "allow_useg": {
            "choices": [
              "encap",
              "useg"
            ],
            "description": [
              "Allows micro-segmentation.",
              "The APIC defaults to C(encap) when unset during creation."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "Name of an existing application network profile, that will contain the EPGs."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "custom_epg_name": {
            "description": [
              "The custom epg name in VMM domain association."
            ],
            "type": "str"
          },
          "deploy_immediacy": {
            "choices": [
              "immediate",
              "lazy"
            ],
            "description": [
              "Determines when the policy is pushed to hardware Policy CAM.",
              "The APIC defaults to C(lazy) when unset during creation."
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "domain_name",
              "domain_profile"
            ],
            "description": [
              "Name of the physical or virtual domain being associated with the EPG."
            ],
            "type": "str"
          },
          "domain_type": {
            "aliases": [
              "type"
            ],
            "choices": [
              "l2dom",
              "phys",
              "vmm"
            ],
            "description": [
              "Specify whether the Domain is a physical (phys), a virtual (vmm) or an L2 external domain association (l2dom)."
            ],
            "type": "str"
          },
          "encap": {
            "description": [
              "The VLAN encapsulation for the EPG when binding a VMM Domain with static C(encap_mode).",
              "This acts as the secondary encap when using useg.",
              "Accepted values range between C(1) and C(4096)."
            ],
            "type": "int"
          },
          "encap_mode": {
            "choices": [
              "auto",
              "vlan",
              "vxlan"
            ],
            "description": [
              "The encapsulation method to be used.",
              "The APIC defaults to C(auto) when unset during creation.",
              "If vxlan is selected, switching_mode must be \"AVE\"."
            ],
            "type": "str"
          },
          "enhanced_lag_policy": {
            "aliases": [
              "lag_policy"
            ],
            "description": [
              "Name of the VMM Domain Enhanced Lag Policy."
            ],
            "type": "str"
          },
          "epg": {
            "aliases": [
              "epg_name",
              "name"
            ],
            "description": [
              "Name of the end point group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "netflow": {
            "description": [
              "Determines if netflow should be enabled.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "primary_encap": {
            "description": [
              "Determines the primary VLAN ID when using useg.",
              "Accepted values range between C(1) and C(4096)."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "promiscuous": {
            "choices": [
              "accept",
              "reject"
            ],
            "default": "reject",
            "description": [
              "Allow/Disallow promiscuous mode in vmm domain"
            ],
            "type": "str"
          },
          "resolution_immediacy": {
            "choices": [
              "immediate",
              "lazy",
              "pre-provision"
            ],
            "description": [
              "Determines when the policies should be resolved and available.",
              "The APIC defaults to C(lazy) when unset during creation."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "switching_mode": {
            "choices": [
              "AVE",
              "native"
            ],
            "default": "native",
            "description": [
              "Switching Mode used by the switch"
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vm_provider": {
            "choices": [
              "cloudfoundry",
              "kubernetes",
              "microsoft",
              "openshift",
              "openstack",
              "redhat",
              "vmware"
            ],
            "description": [
              "The VM platform for VMM Domains.",
              "Support for Kubernetes was added in ACI v3.0.",
              "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_ap"
          },
          {
            "module": "cisco.aci.aci_epg"
          },
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "description": "More information about the internal APIC class B(fv:RsDomAtt).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind EPGs to Domains (fv:RsDomAtt)"
      },
      "examples": "\n- name: Add a new physical domain to EPG binding\n  cisco.aci.aci_epg_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    domain: anstest\n    domain_type: phys\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing physical domain to EPG binding\n  cisco.aci.aci_epg_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    domain: anstest\n    domain_type: phys\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific physical domain to EPG binding\n  cisco.aci.aci_epg_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    domain: anstest\n    domain_type: phys\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all domain to EPG bindings\n  cisco.aci.aci_epg_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_esg": {
      "doc": {
        "author": [
          "Sabari Jaganathan (@sajagana)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Endpoint Security Groups (ESGs) on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_esg.py",
        "has_action": false,
        "module": "aci_esg",
        "options": {
          "admin_state": {
            "choices": [
              false,
              true
            ],
            "description": [
              "Use C(false) to set 'Admin Up' on the ESG Admin state and is the default.",
              "Use C(true) to set 'Admin Shut' on the ESG Admin state"
            ],
            "type": "bool"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "The name of the application profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Endpoint security group description."
            ],
            "type": "str"
          },
          "esg": {
            "aliases": [
              "esg_name",
              "name"
            ],
            "description": [
              "Name of the Endpoint Security Group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "intra_esg_isolation": {
            "choices": [
              "enforced",
              "unenforced"
            ],
            "description": [
              "The default value of Intra ESG Isolation is C(unenforced)."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "preferred_group_member": {
            "choices": [
              "exclude",
              "include"
            ],
            "description": [
              "The default value of Preferred Group Member is C(exclude)."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vrf": {
            "aliases": [
              "vrf_name"
            ],
            "description": [
              "Name of the VRF"
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_aep_to_domain"
          },
          {
            "description": "More information about the internal APIC classes B(infra:AttEntityP) and B(infra:ProvAcc).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Endpoint Security Groups (ESGs) objects (fv:ESg)"
      },
      "examples": "\n- name: Add a new ESG\n  cisco.aci.aci_esg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: intranet\n    esg: web_esg\n    vrf: 'default'\n    description: Web Intranet ESG\n    state: present\n  delegate_to: localhost\n\n- name: Add list of ESGs\n  cisco.aci.aci_esg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: ticketing\n    esg: \"{{ item.esg }}\"\n    description: Ticketing ESG\n    vrf: 'default'\n    state: present\n  delegate_to: localhost\n  with_items:\n    - esg: web\n    - esg: database\n\n- name: Query an ESG\n  cisco.aci.aci_esg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: ticketing\n    esg: web_esg\n    state: query\n  delegate_to: localhost\n\n- name: Query all ESGs\n  cisco.aci.aci_esg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n\n- name: Query all ESGs with a Specific Name\n  cisco.aci.aci_esg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    esg: web_esg\n    state: query\n  delegate_to: localhost\n\n- name: Query all ESGs of an App Profile\n  cisco.aci.aci_esg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    ap: ticketing\n    state: query\n  delegate_to: localhost\n\n- name: Remove an ESG\n  cisco.aci.aci_esg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    app_profile: intranet\n    esg: web_esg\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_esg_contract_master": {
      "doc": {
        "author": [
          "Sabari Jaganathan (@sajagana)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Endpoint Security Groups (ESG) contract master relationships on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_esg_contract_master.py",
        "has_action": false,
        "module": "aci_esg_contract_master",
        "options": {
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "The name of the application profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract_master_ap": {
            "description": [
              "Name of the application profile where the contract master ESG is."
            ],
            "type": "str"
          },
          "contract_master_esg": {
            "description": [
              "Name of the ESG which serves as contract master."
            ],
            "type": "str"
          },
          "esg": {
            "aliases": [
              "esg_name"
            ],
            "description": [
              "Name of the Endpoint Security Group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_esg"
          },
          {
            "description": "Manage Endpoint Security Groups (ESGs) on Cisco ACI fabrics.",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "Manage Endpoint Security Groups (ESGs) objects (fv:ESg)"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage ESG contract master relationships (fv:RsSecInherited)"
      },
      "examples": "\n- name: Add an ESG contract master\n  cisco.aci.aci_esg_contract_master:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: apName\n    esg: esgName\n    contract_master_ap: ap\n    contract_master_esg: contract_esg\n    state: present\n  delegate_to: localhost\n\n- name: Query an ESG contract master\n  cisco.aci.aci_esg_contract_master:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: apName\n    esg: esgName\n    contract_master_ap: ap\n    contract_master_esg: contract_esg\n    state: query\n  delegate_to: localhost\n\n- name: Remove an ESG contract master\n  cisco.aci.aci_esg_contract_master:\n    host: apic_host\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: apName\n    esg: esgName\n    contract_master_ap: ap\n    contract_master_esg: contract_esg\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_esg_epg_selector": {
      "doc": {
        "author": [
          "Sabari Jaganathan (@sajagana)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Endpoint Security Groups - EPG Selectors on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_esg_epg_selector.py",
        "has_action": false,
        "module": "aci_esg_epg_selector",
        "options": {
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "The name of the application profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "epg_selector_description"
            ],
            "description": [
              "Description of the ESG Tag Selector."
            ],
            "type": "str"
          },
          "epg": {
            "aliases": [
              "epg_name"
            ],
            "description": [
              "Name of the EPG which is used to create EPG Selector object under the ESG."
            ],
            "type": "str"
          },
          "epg_ap": {
            "description": [
              "Name of the Application profile which contains the EPG."
            ],
            "type": "str"
          },
          "esg": {
            "aliases": [
              "esg_name"
            ],
            "description": [
              "Name of the Endpoint Security Group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_esg"
          },
          {
            "description": "Manage Endpoint Security Groups (ESGs) on Cisco ACI fabrics.",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "Manage Endpoint Security Groups (ESGs) objects (fv:ESg)"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage ESG - EPG Selectors (fv:fvEPgSelector)"
      },
      "examples": "\n- name: Add an EPG selector\n  cisco.aci.aci_esg_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: web_esg\n    epg_ap: production_ap1\n    epg: production_ap1-epg\n    description: epg-test-description\n    state: present\n  delegate_to: localhost\n\n- name: Add list of EPG selectors\n  cisco.aci.aci_esg_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: \"{{ item.esg }}\"\n    epg_ap: \"{{ item.epg_ap }}\"\n    epg: \"{{ item.epg }}\"\n    description: epg-test-description\n    state: present\n  delegate_to: localhost\n  with_items:\n    - {\"epg_ap\": \"production_ap1\", \"epg\": \"epg-test1\", \"esg\": \"web_esg\"}\n    - {\"epg_ap\": \"production_ap1\", \"epg\": \"epg-test2\", \"esg\": \"web_esg\"}\n\n- name: Query an EPG selector with esg and epg name\n  cisco.aci.aci_esg_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: web_esg\n    epg_ap: production_ap1\n    epg: production_ap1-epg\n    state: query\n  delegate_to: localhost\n\n- name: Query all EPG selectors under a application profile\n  cisco.aci.aci_esg_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    state: query\n  delegate_to: localhost\n\n- name: Query all EPG selectors\n  cisco.aci.aci_esg_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n\n- name: Remove an EPG selector\n  cisco.aci.aci_esg_epg_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: web_esg\n    epg_ap: production_ap1\n    epg: production_ap1-epg\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_esg_ip_subnet_selector": {
      "doc": {
        "author": [
          "Sabari Jaganathan (@sajagana)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Endpoint Security Groups (ESG) IP Subnet selector on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_esg_ip_subnet_selector.py",
        "has_action": false,
        "module": "aci_esg_ip_subnet_selector",
        "options": {
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "The name of the application profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "ip_subnet_selector_description"
            ],
            "description": [
              "Description of the ESG IP Subnet selector."
            ],
            "type": "str"
          },
          "esg": {
            "aliases": [
              "esg_name"
            ],
            "description": [
              "Name of the Endpoint Security Group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "ip": {
            "aliases": [
              "subnet"
            ],
            "description": [
              "IP address of the subnet selector."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_esg"
          },
          {
            "description": "Manage Endpoint Security Groups (ESGs) on Cisco ACI fabrics.",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "Manage Endpoint Security Groups (ESGs) objects (fv:ESg)"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage ESG IP Subnet selector(fv:EPSelector)"
      },
      "examples": "\n- name: Add an IP subnet selector\n  cisco.aci.aci_esg_tag_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: web_esg\n    ip: \"10.0.0.0\"\n    description: \"IP Subnet Selector Description\"\n    state: present\n  delegate_to: localhost\n\n- name: Query all IP subnet selector\n  cisco.aci.aci_esg_tag_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n\n- name: Remove an IP subnet selector\n  cisco.aci.aci_esg_tag_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: web_esg\n    ip: \"10.0.0.0\"\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_esg_tag_selector": {
      "doc": {
        "author": [
          "Sabari Jaganathan (@sajagana)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Endpoint Security Groups Tag Selectors on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_esg_tag_selector.py",
        "has_action": false,
        "module": "aci_esg_tag_selector",
        "options": {
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "The name of the application profile."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "tag_selector_description"
            ],
            "description": [
              "Description of the ESG Tag Selector."
            ],
            "type": "str"
          },
          "esg": {
            "aliases": [
              "esg_name"
            ],
            "description": [
              "Name of the Endpoint Security Group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "match_value": {
            "description": [
              "Value filed of the ESG Tag Selector."
            ],
            "type": "str"
          },
          "name": {
            "aliases": [
              "match_key"
            ],
            "description": [
              "ESG Tag Selector Key Name"
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "operator": {
            "aliases": [
              "value_operator"
            ],
            "choices": [
              "contains",
              "equals",
              "regex"
            ],
            "description": [
              "C(equals) is the default operator type of the ESG Tag Selector.",
              "C(contains) is used to match values partially.",
              "C(regex) allows to pass patterns values."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_esg"
          },
          {
            "description": "Manage Endpoint Security Groups (ESGs) on Cisco ACI fabrics.",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "Manage Endpoint Security Groups (ESGs) objects (fv:ESg)"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage ESG Tag Selectors (fv:TagSelector)"
      },
      "examples": "\n- name: Add a new Tag Selector\n  cisco.aci.aci_esg_tag_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: web_esg\n    name: tag-selector-key\n    match_value: tag-selector-value\n    description: tag-selector-description\n    state: present\n  delegate_to: localhost\n\n- name: Add list of Tag Selectors\n  cisco.aci.aci_esg_tag_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: web_esg\n    name: \"{{ item.key }}\"\n    match_value: \"{{ item.value }}\"\n    description: \"{{ item.description }}\"\n    state: present\n  delegate_to: localhost\n  with_items:\n    - {key: tag_selector_key_0, value: tag_selector_value_0, description: tag_selector_description_0}\n    - {key: tag_selector_key_1, value: tag_selector_value_1, description: tag_selector_description_1}\n\n- name: Query all Tag Selectors\n  cisco.aci.aci_esg_tag_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n\n- name: Query all Tag Selectors with name and value\n  cisco.aci.aci_esg_tag_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: tag-selector-key\n    match_value: tag-selector-value\n    state: query\n  delegate_to: localhost\n\n- name: Remove a Tag Selectors\n  cisco.aci.aci_esg_tag_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ap: production_ap\n    esg: web_esg\n    name: tag-selector-key\n    match_value: tag-selector-value\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_fabric_leaf_profile": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage fabric leaf switch profiles in an ACI fabric."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_fabric_leaf_profile.py",
        "has_action": false,
        "module": "aci_fabric_leaf_profile",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "description of the profile"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "leaf_profile",
              "leaf_switch_profile"
            ],
            "description": [
              "Name of the fabric leaf switch profile"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fabricLeafP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage fabric leaf profiles (fabric:LeafP)."
      },
      "examples": "\n- name: Create a leaf switch profile\n  cisco.aci.aci_fabric_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_leaf_profile\n    state: present\n  delegate_to: localhost\n\n- name: Remove a leaf switch profile\n  cisco.aci.aci_fabric_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_leaf_profile\n    state: absent\n  delegate_to: localhost\n\n- name: Query a leaf profile\n  cisco.aci.aci_fabric_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_leaf_profile\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all leaf profiles\n  cisco.aci.aci_fabric_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_fabric_leaf_switch_assoc": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage fabric leaf switch associations (fabric:LeafS) to an existing fabric leaf profile (fabric:leafP) in an ACI fabric, and bind them to a policy group (fabric:RsLeNodePGrp)"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_fabric_leaf_switch_assoc.py",
        "has_action": false,
        "module": "aci_fabric_leaf_switch_assoc",
        "notes": [
          "The C(profile) must exist before using this module in your playbook. The M(cisco.aci.aci_fabric_leaf_profile) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description of the Fabric Switch Association"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "association_name",
              "switch_association"
            ],
            "description": [
              "Name of the switch association"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy_group": {
            "description": [
              "Name of an existing leaf switch policy group"
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "profile": {
            "aliases": [
              "leaf_profile",
              "leaf_switch_profile"
            ],
            "description": [
              "Name of an existing fabric leaf switch profile"
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(fabricLeafS) and B(fabricRsLeNodePGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage leaf switch bindings to profiles and policy groups (fabric:LeafS and fabric:RsLeNodePGrp)."
      },
      "examples": "\n- name: Create a leaf switch profile association\n  cisco.aci.aci_fabric_leaf_switch_assoc:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    profile: my_leaf_profile\n    name: my_leaf_switch_assoc\n    policy_group: my_leaf_pol_grp\n    state: present\n  delegate_to: localhost\n- name: Remove a leaf switch profile association\n  cisco.aci.aci_fabric_leaf_switch_assoc:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    profile: my_leaf_profile\n    name: my_leaf_switch_assoc\n    state: absent\n  delegate_to: localhost\n- name: Query a leaf profile association\n  cisco.aci.aci_fabric_leaf_switch_assoc:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    profile: my_leaf_profile\n    name: my_leaf_switch_assoc\n    state: query\n  delegate_to: localhost\n  register: query_result\n- name: Query all leaf profiles\n  cisco.aci.aci_fabric_leaf_switch_assoc:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_fabric_node": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Fabric Node Members on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_fabric_node.py",
        "has_action": false,
        "module": "aci_fabric_node",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the new Fabric Node Member."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "node_id": {
            "description": [
              "Node ID Number for the new Fabric Node Member."
            ],
            "type": "int"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "The pod id of the new Fabric Node Member."
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "role": {
            "aliases": [
              "role_name"
            ],
            "choices": [
              "leaf",
              "spine",
              "unspecified"
            ],
            "description": [
              "Role for the new Fabric Node Member."
            ],
            "type": "str"
          },
          "serial": {
            "aliases": [
              "serial_number"
            ],
            "description": [
              "Serial Number for the new Fabric Node Member."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "switch": {
            "aliases": [
              "name",
              "switch_name"
            ],
            "description": [
              "Switch Name for the new Fabric Node Member."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fabric:NodeIdentP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Fabric Node Members (fabric:NodeIdentP)"
      },
      "examples": "\n- name: Add fabric node\n  cisco.aci.aci_fabric_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    serial: FDO2031124L\n    node_id: 1011\n    switch: fab4-sw1011\n    state: present\n  delegate_to: localhost\n\n- name: Remove fabric node\n  cisco.aci.aci_fabric_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    serial: FDO2031124L\n    node_id: 1011\n    state: absent\n  delegate_to: localhost\n\n- name: Query fabric nodes\n  cisco.aci.aci_fabric_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_fabric_scheduler": {
      "doc": {
        "author": [
          "Steven Gerhart (@sgerhart)"
        ],
        "collection": "cisco.aci",
        "description": [
          "With the module you can create schedule policies that can be a shell, onetime execution or recurring"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_fabric_scheduler.py",
        "has_action": false,
        "module": "aci_fabric_scheduler",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "concurCap": {
            "description": [
              "This is the amount of devices that can be executed on at a time"
            ],
            "type": "int"
          },
          "date": {
            "description": [
              "This is the date and time that the scheduler will execute"
            ],
            "type": "str"
          },
          "day": {
            "choices": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday",
              "even-day",
              "odd-day",
              "every-day"
            ],
            "default": "every-day",
            "description": [
              "This sets the day when execution will take place"
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the Scheduler."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "hour": {
            "description": [
              "This set the hour of execution"
            ],
            "type": "int"
          },
          "maxTime": {
            "description": [
              "This is the amount MAX amount of time a process can be executed"
            ],
            "type": "str"
          },
          "minute": {
            "description": [
              "This sets the minute of execution, used in conjunction with hour"
            ],
            "type": "int"
          },
          "name": {
            "aliases": [
              "scheduler_name"
            ],
            "description": [
              "The name of the Scheduler."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "recurring": {
            "description": [
              "If you want to make the Scheduler a recurring it would be a \"True\" and for a oneTime execution it would be \"False\". For a shell just exclude this option from the task"
            ],
            "type": "bool"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "windowname": {
            "description": [
              "This is the name for your what recurring or oneTime execution"
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "This modules creates ACI schedulers."
      },
      "examples": "\n   - name: Simple Scheduler (Empty)\n     cisco.aci.aci_fabric_scheduler:\n        host: \"{{ inventory_hostname }}\"\n        username: \"{{ user }}\"\n        password: \"{{ pass }}\"\n        validate_certs: no\n        name: simpleScheduler\n        state: present\n   - name: Remove Simple Scheduler\n     cisco.aci.aci_fabric_scheduler:\n        host: \"{{ inventory_hostname }}\"\n        username: \"{{ user }}\"\n        password: \"{{ pass }}\"\n        validate_certs: no\n        name: simpleScheduler\n        state: absent\n   - name: One Time Scheduler\n     cisco.aci.aci_fabric_scheduler:\n        host: \"{{ inventory_hostname }}\"\n        username: \"{{ user }}\"\n        password: \"{{ pass }}\"\n        validate_certs: no\n        name: OneTime\n        windowname: OneTime\n        recurring: False\n        concurCap: 20\n        date: \"2018-11-20T24:00:00\"\n        state: present\n   - name: Recurring Scheduler\n     cisco.aci.aci_fabric_scheduler:\n        host: \"{{ inventory_hostname }}\"\n        username: \"{{ user }}\"\n        password: \"{{ pass }}\"\n        validate_certs: no\n        name: Recurring\n        windowname: Recurring\n        recurring: True\n        concurCap: 20\n        hour: 13\n        minute: 30\n        day: Tuesday\n        state: present\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_fabric_spine_profile": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage fabric spine switch profiles in an ACI fabric."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_fabric_spine_profile.py",
        "has_action": false,
        "module": "aci_fabric_spine_profile",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "description of the profile"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "spine_profile",
              "spine_switch_profile"
            ],
            "description": [
              "Name of the fabric spine switch profile"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fabricSpineP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage fabric spine profiles (fabric:SpineP)."
      },
      "examples": "\n- name: Create a spine switch profile\n  cisco.aci.aci_fabric_spine_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_spine_profile\n    state: present\n  delegate_to: localhost\n\n- name: Remove a spine switch profile\n  cisco.aci.aci_fabric_spine_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_spine_profile\n    state: absent\n  delegate_to: localhost\n\n- name: Query a spine profile\n  cisco.aci.aci_fabric_spine_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_spine_profile\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all spine profiles\n  cisco.aci.aci_fabric_spine_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_fabric_spine_switch_assoc": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage fabric spine switch associations (fabric:SpineS) to an existing fabric spine profile (fabric:SpineP) in an ACI fabric, and bind them to a policy group (fabric:RsSpNodePGrp)"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_fabric_spine_switch_assoc.py",
        "has_action": false,
        "module": "aci_fabric_spine_switch_assoc",
        "notes": [
          "The C(profile) must exist before using this module in your playbook. The M(cisco.aci.aci_fabric_spine_profile) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description of the Fabric Switch Association"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "association_name",
              "switch_association"
            ],
            "description": [
              "Name of the switch association"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy_group": {
            "description": [
              "Name of an existing spine switch policy group"
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "profile": {
            "aliases": [
              "spine_profile",
              "spine_switch_profile"
            ],
            "description": [
              "Name of an existing fabric spine switch profile"
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(fabricSpineS) and B(fabricRsSpNodePGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage spine switch bindings to profiles and policy groups (fabric:SpineS and fabric:RsSpNodePGrp)."
      },
      "examples": "\n- name: Create a spine switch profile association\n  cisco.aci.aci_fabric_spine_switch_assoc:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    profile: my_spine_profile\n    name: my_spine_switch_assoc\n    policy_group: my_spine_pol_grp\n    state: present\n  delegate_to: localhost\n\n- name: Remove a spine switch profile association\n  cisco.aci.aci_fabric_spine_switch_assoc:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    profile: my_spine_profile\n    name: my_spine_switch_assoc\n    state: absent\n  delegate_to: localhost\n\n- name: Query a spine profile association\n  cisco.aci.aci_fabric_spine_switch_assoc:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    profile: my_spine_profile\n    name: my_spine_switch_assoc\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all spine profiles\n  cisco.aci.aci_fabric_spine_switch_assoc:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_fabric_switch_block": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage fabric node blocks within switch associations (fabric:SpineS and fabric:LeafS) contained within fabric switch profiles (fabric:SpineP and fabric:LeafP)"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_fabric_switch_block.py",
        "has_action": false,
        "module": "aci_fabric_switch_block",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "association": {
            "aliases": [
              "association_name",
              "switch_association"
            ],
            "description": [
              "Name of an existing switch association"
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description of the Node Block"
            ],
            "type": "str"
          },
          "from_node": {
            "aliases": [
              "from",
              "from_"
            ],
            "description": [
              "First Node ID of the block"
            ],
            "type": "int"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "block_name"
            ],
            "description": [
              "Name of the block"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "profile": {
            "aliases": [
              "profile_name",
              "switch_profile"
            ],
            "description": [
              "Name of an existing fabric spine or leaf switch profile"
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "switch_type": {
            "choices": [
              "leaf",
              "spine"
            ],
            "description": [
              "Type of switch profile, leaf or spine"
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "to_node": {
            "aliases": [
              "to",
              "to_"
            ],
            "description": [
              "Last Node ID of the block"
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fabricNodeBlk)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage switch blocks (fabric:NodeBlk)."
      },
      "examples": "\n- name: Create a spine switch association block\n  cisco.aci.aci_fabric_switch_block:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    switch_type: spine\n    profile: my_spine_profile\n    association: my_spine_switch_assoc\n    name: my_spine_block\n    from_node: 101\n    to_node: 101\n    state: present\n  delegate_to: localhost\n\n- name: Remove a spine switch profile association\n  cisco.aci.aci_fabric_switch_block:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    switch_type: spine\n    profile: my_spine_profile\n    association: my_spine_switch_assoc\n    name: my_spine_block\n    state: absent\n  delegate_to: localhost\n\n- name: Query a spine profile association\n  cisco.aci.aci_fabric_switch_block:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    switch_type: spine\n    profile: my_spine_profile\n    association: my_spine_switch_assoc\n    name: my_spine_block\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_fabric_switch_policy_group": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Fabric Switch Policy Group (fabricLeNodePGrp and fabricSpNodePGrp) configuration on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_fabric_switch_policy_group.py",
        "has_action": false,
        "module": "aci_fabric_switch_policy_group",
        "options": {
          "analytics_cluster": {
            "description": [
              "Name of the analytics cluster. Requires analytics_name to be present"
            ],
            "type": "str"
          },
          "analytics_name": {
            "description": [
              "Name of the analytics policy. Requires analytics_cluster to be present"
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "core_export_policy": {
            "aliases": [
              "core",
              "core_export",
              "fabricRsNodeCoreP"
            ],
            "description": [
              "Core Export Policy to attach to this Policy Group"
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description for the Leaf Policy Group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "inventory_policy": {
            "aliases": [
              "inventory",
              "fabricRsCallhomeInvPol"
            ],
            "description": [
              "Inventory Policy to attach to this Policy Group"
            ],
            "type": "str"
          },
          "monitoring_policy": {
            "aliases": [
              "monitoring",
              "fabricRsMonInstFabricPol"
            ],
            "description": [
              "Monitoring Policy to attach to this Policy Group"
            ],
            "type": "str"
          },
          "name": {
            "aliases": [
              "policy_group",
              "policy_group_name"
            ],
            "description": [
              "The name of the Leaf Policy Group."
            ],
            "type": "str"
          },
          "node_control_policy": {
            "aliases": [
              "node_control",
              "fabricRsNodeCtrl"
            ],
            "description": [
              "Node Control Policy to attach to this Policy Group"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "power_redundancy_policy": {
            "aliases": [
              "power_redundancy",
              "fabricRsPsuInstPol"
            ],
            "description": [
              "Power Redundancy Policy to atttach to this Policy Group"
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "switch_type": {
            "choices": [
              "leaf",
              "spine"
            ],
            "description": [
              "Whether this is a leaf or spine policy group"
            ],
            "required": true,
            "type": "str"
          },
          "tech_support_export_policy": {
            "aliases": [
              "tech_support",
              "tech_support_export",
              "fabricRsNodeTechSupP"
            ],
            "description": [
              "Tech Support Export Policy to attach to this Policy Group"
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "twamp_responder_policy": {
            "aliases": [
              "twamp_responder",
              "fabricRsTwampResponderPol"
            ],
            "description": [
              "TWAMP Responder Policy to attach to this Policy Group"
            ],
            "type": "str"
          },
          "twamp_server_policy": {
            "aliases": [
              "twamp_server",
              "fabricRsTwampServerPol"
            ],
            "description": [
              "TWAMP Server Policy to attach to this Policy Group"
            ],
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(fabricLeNodePGrp and fabricSpNodePGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Fabric Switch Policy Group objects."
      },
      "examples": "\n- name: Add a new Fabric Leaf Policy Group\n  cisco.aci.aci_fabric_switch_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_fabric_leaf_policy_group\n    switch_type: leaf\n    monitoring_policy: my_monitor_policy\n    inventory_policy: my_inv_policy\n    state: present\n    delegate_to: localhost\n\n- name: Remove existing analytics and monitoring policy bindings from a Policy Group\n  cisco.aci.aci_fabric_switch_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_fabric_leaf_policy_group\n    switch_type: leaf\n    monitoring_policy: \"\"\n    analytics_cluster: \"\"\n    analytics_name: \"\"\n    state: present\n    delegate_to: localhost\n\n- name: Remove a Fabric Leaf Policy Group\n  cisco.aci.aci_fabric_switch_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_fabric_leaf_policy_group\n    switch_type: leaf\n    state: absent\n    delegate_to: localhost\n\n- name: Query a Fabric Leaf Policy Group\n  cisco.aci.aci_fabric_switch_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_fabric_leaf_policy_group\n    switch_type: leaf\n    state: query\n    delegate_to: localhost\n    register: query_result\n\n- name: Query all Fabric Leaf Policy Groups\n  cisco.aci.aci_fabric_switch_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    switch_type: leaf\n    state: query\n    delegate_to: localhost\n    register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_filter": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manages top level filter objects on Cisco ACI fabrics.",
          "This modules does not manage filter entries, see M(cisco.aci.aci_filter_entry) for this functionality."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_filter.py",
        "has_action": false,
        "module": "aci_filter",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the filter."
            ],
            "type": "str"
          },
          "filter": {
            "aliases": [
              "filter_name",
              "name"
            ],
            "description": [
              "The name of the filter."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(vz:Filter).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manages top level filter objects (vz:Filter)"
      },
      "examples": "\n- name: Add a new filter to a tenant\n  cisco.aci.aci_filter:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    filter: web_filter\n    description: Filter for web protocols\n    tenant: production\n    state: present\n  delegate_to: localhost\n\n- name: Remove a filter for a tenant\n  cisco.aci.aci_filter:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    filter: web_filter\n    tenant: production\n    state: absent\n  delegate_to: localhost\n\n- name: Query a filter of a tenant\n  cisco.aci.aci_filter:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    filter: web_filter\n    tenant: production\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all filters for a tenant\n  cisco.aci.aci_filter:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_filter_entry": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage filter entries for a filter on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_filter_entry.py",
        "has_action": false,
        "module": "aci_filter_entry",
        "notes": [
          "The C(tenant) and C(filter) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_filter) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "arp_flag": {
            "choices": [
              "arp_reply",
              "arp_request",
              "unspecified"
            ],
            "description": [
              "The arp flag to use when the ether_type is arp.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the Filter Entry."
            ],
            "type": "str"
          },
          "dst_port": {
            "description": [
              "Used to set both destination start and end ports to the same value when ip_protocol is tcp or udp.",
              "Accepted values are any valid TCP/UDP port range.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "dst_port_end": {
            "description": [
              "Used to set the destination end port when ip_protocol is tcp or udp.",
              "Accepted values are any valid TCP/UDP port range.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "dst_port_start": {
            "description": [
              "Used to set the destination start port when ip_protocol is tcp or udp.",
              "Accepted values are any valid TCP/UDP port range.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "entry": {
            "aliases": [
              "entry_name",
              "filter_entry",
              "name"
            ],
            "description": [
              "Then name of the Filter Entry."
            ],
            "type": "str"
          },
          "ether_type": {
            "choices": [
              "arp",
              "fcoe",
              "ip",
              "ipv4",
              "ipv6",
              "mac_security",
              "mpls_ucast",
              "trill",
              "unspecified"
            ],
            "description": [
              "The Ethernet type.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "filter": {
            "aliases": [
              "filter_name"
            ],
            "description": [
              "The name of Filter that the entry should belong to."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "icmp6_msg_type": {
            "choices": [
              "dst_unreachable",
              "echo_request",
              "echo_reply",
              "neighbor_advertisement",
              "neighbor_solicitation",
              "redirect",
              "time_exceeded",
              "unspecified"
            ],
            "description": [
              "ICMPv6 message type; used when ip_protocol is icmpv6.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "icmp_msg_type": {
            "choices": [
              "dst_unreachable",
              "echo",
              "echo_reply",
              "src_quench",
              "time_exceeded",
              "unspecified"
            ],
            "description": [
              "ICMPv4 message type; used when ip_protocol is icmp.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "ip_protocol": {
            "choices": [
              "eigrp",
              "egp",
              "icmp",
              "icmpv6",
              "igmp",
              "igp",
              "l2tp",
              "ospfigp",
              "pim",
              "tcp",
              "udp",
              "unspecified"
            ],
            "description": [
              "The IP Protocol type when ether_type is ip.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "present, absent, query"
            ],
            "type": "str"
          },
          "stateful": {
            "description": [
              "Determines the statefulness of the filter entry."
            ],
            "type": "bool"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_filter"
          },
          {
            "description": "More information about the internal APIC class B(vz:Entry).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage filter entries (vz:Entry)"
      },
      "examples": "\n- cisco.aci.aci_filter_entry:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ user }}\"\n    password: \"{{ pass }}\"\n    state: \"{{ state }}\"\n    entry: \"{{ entry }}\"\n    tenant: \"{{ tenant }}\"\n    ether_name: \"{{  ether_name }}\"\n    icmp_msg_type: \"{{ icmp_msg_type }}\"\n    filter: \"{{ filter }}\"\n    descr: \"{{ descr }}\"\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_firmware_group": {
      "doc": {
        "author": [
          "Steven Gerhart (@sgerhart)"
        ],
        "collection": "cisco.aci",
        "description": [
          "This module creates a firmware group, so that you can apply firmware policy to nodes."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_firmware_group.py",
        "has_action": false,
        "module": "aci_firmware_group",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "firmwarepol": {
            "description": [
              "This is the name of the firmware policy, which was create by aci_firmware_policy. It is important that",
              "you use the same name as the policy created with aci_firmware_policy"
            ],
            "type": "str"
          },
          "group": {
            "description": [
              "This the name of the firmware group"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "This module creates a firmware group"
      },
      "examples": "\n    - name: firmware group\n      cisco.aci.aci_firmware_group:\n        host: \"{{ inventory_hostname }}\"\n        username: \"{{ user }}\"\n        password: \"{{ pass }}\"\n        validate_certs: no\n        group: testingfwgrp1\n        firmwarepol: test2FrmPol\n        state: present\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_firmware_group_node": {
      "doc": {
        "author": [
          "Steven Gerhart (@sgerhart)"
        ],
        "collection": "cisco.aci",
        "description": [
          "This module addes/deletes a node to the firmware group. This modules assigns 1 node at a time."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_firmware_group_node.py",
        "has_action": false,
        "module": "aci_firmware_group_node",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "group": {
            "description": [
              "This is the name of the firmware group"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "node": {
            "description": [
              "The node to be added to the firmware group - the value equals the NodeID"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "This modules adds and remove nodes from the firmware group"
      },
      "examples": "\n    - name: add firmware group node\n      cisco.aci.aci_firmware_group_node:\n        host: \"{{ inventory_hostname }}\"\n        username: \"{{ user }}\"\n        password: \"{{ pass }}\"\n        validate_certs: no\n        group: testingfwgrp\n        node: 1001\n        state: present\n    - name: Remove firmware group node\n      cisco.aci.aci_firmware_group_node:\n        host: \"{{ inventory_hostname }}\"\n        username: \"{{ user }}\"\n        password: \"{{ pass }}\"\n        validate_certs: no\n        group: testingfwgrp\n        node: 1001\n        state: absent\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_firmware_policy": {
      "doc": {
        "author": [
          "Steven Gerhart (@sgerhart)"
        ],
        "collection": "cisco.aci",
        "description": [
          "This module creates a firmware policy for firmware groups. The firmware policy is create first and then",
          "referenced by the firmware group. You will assign the firmware and specify if you want to ignore the compatibility",
          "check"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_firmware_policy.py",
        "has_action": false,
        "module": "aci_firmware_policy",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "ignoreCompat": {
            "description": [
              "Check if compatibility checks should be ignored"
            ],
            "type": "bool"
          },
          "name": {
            "description": [
              "Name of the firmware policy"
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "version": {
            "description": [
              "The version of the firmware associated with this policy. This value is very import as well as constructing",
              "it correctly. The syntax for this field is n9000-xx.x. If you look at the firmware repository using the UI",
              "each version will have a \"Full Version\" column, this is the value you need to use. So, if the Full Version",
              "is 13.1(1i), the value for this field would be n9000-13.1(1i)"
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "This creates a firmware policy"
      },
      "examples": "\n   - name: firmware policy\n     cisco.aci.aci_firmware_policy:\n        host: \"{{ inventory_hostname }}\"\n        username: \"{{ user }}\"\n        password: \"{{ pass }}\"\n        validate_certs: no\n        name: test2FrmPol\n        version: n9000-13.2(1m)\n        ignoreCompat: False\n        state: present\n\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_firmware_source": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage firmware image sources on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_firmware_source.py",
        "has_action": false,
        "module": "aci_firmware_source",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "polling_interval": {
            "description": [
              "Polling interval in minutes."
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "source": {
            "aliases": [
              "name",
              "source_name"
            ],
            "description": [
              "The identifying name for the outside source of images, such as an HTTP or SCP server."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "url": {
            "description": "The firmware URL for the image(s) on the source.",
            "type": "str"
          },
          "url_password": {
            "description": "The Firmware password or key string.",
            "type": "str"
          },
          "url_protocol": {
            "aliases": [
              "url_proto"
            ],
            "choices": [
              "http",
              "local",
              "scp",
              "usbkey"
            ],
            "default": "scp",
            "description": [
              "The Firmware download protocol."
            ],
            "type": "str"
          },
          "url_username": {
            "description": "The username for the source.",
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(firmware:OSource).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage firmware image sources (firmware:OSource)"
      },
      "examples": "\n- name: Add firmware source\n  cisco.aci.aci_firmware_source:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    source: aci-msft-pkg-3.1.1i.zip\n    url: foo.bar.cisco.com/download/cisco/aci/aci-msft-pkg-3.1.1i.zip\n    url_protocol: http\n    state: present\n  delegate_to: localhost\n\n- name: Remove firmware source\n  cisco.aci.aci_firmware_source:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    source: aci-msft-pkg-3.1.1i.zip\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific firmware source\n  cisco.aci.aci_firmware_source:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    source: aci-msft-pkg-3.1.1i.zip\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all firmware sources\n  cisco.aci.aci_firmware_source:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_blacklist": {
      "doc": {
        "author": [
          "Akini Ross (@akinross)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Enables or Disables physical interfaces on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_blacklist.py",
        "has_action": false,
        "module": "aci_interface_blacklist",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "fex_id": {
            "description": [
              "The fex ID that the C(interface) belongs to.",
              "The C(fex_id) value is usually something like '123'."
            ],
            "type": "int"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface": {
            "description": [
              "The name of the C(interface) that is targeted.",
              "Usually an interface name with the following format C(1/7)."
            ],
            "type": "str"
          },
          "node_id": {
            "aliases": [
              "leaf",
              "spine",
              "node"
            ],
            "description": [
              "The switch ID that the C(interface) belongs to.",
              "The C(node_id) value is usually something like '101'."
            ],
            "type": "int"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "aliases": [
              "pod",
              "pod_number"
            ],
            "description": [
              "The pod number.",
              "C(pod_id) is usually an integer below C(12)"
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Enabling or Disabling physical interfaces."
      },
      "examples": "\n- name: Disable Interface\n  cisco.aci.aci_interface_blacklist:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    interface: 1/49\n    state: present\n  delegate_to: localhost\n\n- name: Enable Interface\n  cisco.aci.aci_interface_blacklist:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    interface: 1/49\n    state: absent\n  delegate_to: localhost\n\n- name: Disable Interface on Fex\n  cisco.aci.aci_interface_blacklist:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    fex_id: 123\n    interface: 1/49\n    state: present\n  delegate_to: localhost\n\n- name: Enable Interface on Fex\n  cisco.aci.aci_interface_blacklist:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    fex_id: 123\n    interface: 1/49\n    state: absent\n  delegate_to: localhost\n\n- name: Query Interface\n  cisco.aci.aci_interface_blacklist:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    interface: 1/49\n    state: query\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_description": {
      "doc": {
        "author": [
          "Akini Ross (@akinross)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Setting and removing description on physical interfaces on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_description.py",
        "has_action": false,
        "module": "aci_interface_description",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "The C(description) that should be attached to the C(interface)."
            ],
            "type": "str"
          },
          "fex_id": {
            "description": [
              "The fex ID that the C(interface) belongs to.",
              "The C(fex_id) value is usually something like '123'."
            ],
            "type": "int"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface": {
            "description": [
              "The name of the C(interface) that is targeted.",
              "Usually an interface name with the following format C(1/7)."
            ],
            "type": "str"
          },
          "node_id": {
            "aliases": [
              "leaf",
              "spine",
              "node"
            ],
            "description": [
              "The switch ID that the C(interface) belongs to.",
              "The C(node_id) value is usually something like '101'."
            ],
            "type": "int"
          },
          "node_type": {
            "choices": [
              "leaf",
              "spine"
            ],
            "description": [
              "The type of node the C(interface) is configured on."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "aliases": [
              "pod",
              "pod_number"
            ],
            "description": [
              "The pod number.",
              "C(pod_id) is usually an integer below C(12)"
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Setting and removing description on physical interfaces."
      },
      "examples": "\n- name: Set Interface Description\n  cisco.aci.aci_interface_description:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    node_type: leaf\n    interface: 1/49\n    description: foobar\n    state: present\n  delegate_to: localhost\n\n- name: Remove Interface Description\n  cisco.aci.aci_interface_description:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    node_type: leaf\n    interface: 1/49\n    description: foobar\n    state: absent\n  delegate_to: localhost\n\n- name: Set Interface Description on Fex\n  cisco.aci.aci_interface_description:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    fex_id: 123\n    interface: 1/49\n    description: foobar\n    state: present\n  delegate_to: localhost\n\n- name: Remove Interface Description on Fex\n  cisco.aci.aci_interface_description:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    fex_id: 123\n    interface: 1/49\n    description: foobar\n    state: absent\n  delegate_to: localhost\n\n- name: Query Interface\n  cisco.aci.aci_interface_description:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    validate_certs: no\n    pod_id: 1\n    node_id: 105\n    node_type: leaf\n    interface: 1/49\n    state: query\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_cdp": {
      "doc": {
        "author": [
          "Tim Knipper (@tknipper11)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage CDP interface policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_cdp.py",
        "has_action": false,
        "module": "aci_interface_policy_cdp",
        "options": {
          "admin_state": {
            "description": [
              "Enable or Disable CDP state.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "cdp_policy": {
            "aliases": [
              "cdp_interface",
              "name"
            ],
            "description": [
              "The CDP interface policy name."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the CDP interface policy name."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(cdp:IfPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage CDP interface policies (cdp:IfPol)"
      },
      "examples": "\n- name: Create CDP Interface Policy to enable CDP\n  cisco.aci.aci_interface_policy_cdp:\n    name: Ansible_CDP_Interface_Policy\n    host: apic.example.com\n    username: admin\n    password: adminpass\n    admin_state: true\n    state: present\n\n- name: Create CDP Interface Policy to disable CDP\n  cisco.aci.aci_interface_policy_cdp:\n    name: Ansible_CDP_Interface_Policy\n    host: apic.example.com\n    username: admin\n    password: adminpass\n    admin_state: false\n    state: present\n\n- name: Remove CDP Interface Policy\n  cisco.aci.aci_interface_policy_cdp:\n    name: Ansible_CDP_Interface_Policy\n    host: apic.example.com\n    username: admin\n    password: adminpass\n    output_level: debug\n    state: absent\n\n- name: Query CDP Policy\n  cisco.aci.aci_interface_policy_cdp:\n    host: apic.example.com\n    username: admin\n    password: adminpass\n    state: query\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "cdpIfPol": {
                "attributes": {
                  "adminSt": "disabled",
                  "annotation": "",
                  "descr": "Ansible Created CDP Test Policy",
                  "dn": "uni/infra/cdpIfP-Ansible_CDP_Test_Policy",
                  "name": "Ansible_CDP_Test_Policy",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_fc": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage ACI Fiber Channel interface policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_fc.py",
        "has_action": false,
        "module": "aci_interface_policy_fc",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description of the Fiber Channel interface policy."
            ],
            "type": "str"
          },
          "fc_policy": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the Fiber Channel interface policy."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "port_mode": {
            "choices": [
              "f",
              "np"
            ],
            "description": [
              "The Port Mode to use.",
              "The APIC defaults to C(f) when unset during creation."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fc:IfPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Fibre Channel interface policies (fc:IfPol)"
      },
      "examples": "\n- name: Add a Fibre Channel interface policy\n  cisco.aci.aci_interface_policy_fc:\n    host: '{{ hostname }}'\n    username: '{{ username }}'\n    password: '{{ password }}'\n    fc_policy: '{{ fc_policy }}'\n    port_mode: '{{ port_mode }}'\n    description: '{{ description }}'\n    state: present\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_l2": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Layer 2 interface policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_l2.py",
        "has_action": false,
        "module": "aci_interface_policy_l2",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description of the Layer 2 interface policy."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l2_policy": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the Layer 2 interface policy."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "qinq": {
            "choices": [
              "core",
              "disabled",
              "edge"
            ],
            "description": [
              "Determines if QinQ is disabled or if the port should be considered a core or edge port.",
              "The APIC defaults to C(disabled) when unset during creation."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vepa": {
            "description": [
              "Determines if Virtual Ethernet Port Aggregator is disabled or enabled.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "vlan_scope": {
            "choices": [
              "global",
              "portlocal"
            ],
            "description": [
              "The scope of the VLAN.",
              "The APIC defaults to C(global) when unset during creation."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(l2:IfPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 2 interface policies (l2:IfPol)"
      },
      "examples": "\n- name: Add a Layer 2 interface policy\n  cisco.aci.aci_interface_policy_l2:\n    host: '{{ hostname }}'\n    username: '{{ username }}'\n    password: '{{ password }}'\n    l2_policy: '{{ l2_policy }}'\n    vlan_scope: '{{ vlan_policy }}'\n    description: '{{ description }}'\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_leaf_breakout_port_group": {
      "doc": {
        "author": [
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage fabric interface policy leaf breakout port group on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_leaf_breakout_port_group.py",
        "has_action": false,
        "module": "aci_interface_policy_leaf_breakout_port_group",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "breakout_map": {
            "description": [
              "The mapping of breakout port."
            ],
            "type": "str"
          },
          "breakout_port_group": {
            "aliases": [
              "name"
            ],
            "description": [
              "Name of the leaf breakout port group to be added/deleted."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the leaf breakout port group to be created."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(infra:BrkoutPortGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage fabric interface policy leaf breakout port group (infra:BrkoutPortGrp)"
      },
      "examples": "\n- name: Create a Leaf Breakout Port Group\n  cisco.aci.aci_interface_policy_leaf_breakout_port_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    breakout_port_group: BreakoutPortName\n    breakout_map: 10g-4x\n    state: present\n  delegate_to: localhost\n\n- name: Query all Leaf Breakout Port Groups of type link\n  cisco.aci.aci_interface_policy_leaf_breakout_port_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a specific Leaf Breakout Port Group\n  cisco.aci.aci_interface_policy_leaf_breakout_port_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    breakout_port_group: BreakoutPortName\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Delete an Leaf Breakout Port Group\n  cisco.aci.aci_interface_policy_leaf_breakout_port_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    breakout_port_group: BreakoutPortName\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_leaf_policy_group": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage fabric interface policy leaf policy groups on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_leaf_policy_group.py",
        "has_action": false,
        "module": "aci_interface_policy_leaf_policy_group",
        "notes": [
          "When using the module please select the appropriate link_aggregation_type (lag_type). C(link) for Port Channel(PC), C(node) for Virtual Port Channel(VPC) and C(leaf) for Leaf Access Port Policy Group."
        ],
        "options": {
          "aep": {
            "aliases": [
              "aep_name"
            ],
            "description": [
              "Choice of attached_entity_profile (AEP) to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "cdp_policy": {
            "aliases": [
              "cdp_policy_name"
            ],
            "description": [
              "Choice of cdp_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the leaf policy group to be created."
            ],
            "type": "str"
          },
          "egress_data_plane_policing_policy": {
            "aliases": [
              "egress_data_plane_policing_policy_name"
            ],
            "description": [
              "Choice of egress_data_plane_policing_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "fibre_channel_interface_policy": {
            "aliases": [
              "fibre_channel_interface_policy_name"
            ],
            "description": [
              "Choice of fibre_channel_interface_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "ingress_data_plane_policing_policy": {
            "aliases": [
              "ingress_data_plane_policing_policy_name"
            ],
            "description": [
              "Choice of ingress_data_plane_policing_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "l2_interface_policy": {
            "aliases": [
              "l2_interface_policy_name"
            ],
            "description": [
              "Choice of l2_interface_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "lag_type": {
            "aliases": [
              "lag_type_name"
            ],
            "choices": [
              "leaf",
              "link",
              "node"
            ],
            "description": [
              "Selector for the type of leaf policy group we want to create.",
              "C(leaf) for Leaf Access Port Policy Group",
              "C(link) for Port Channel (PC)",
              "C(node) for Virtual Port Channel (VPC)"
            ],
            "required": true,
            "type": "str"
          },
          "link_level_policy": {
            "aliases": [
              "link_level_policy_name"
            ],
            "description": [
              "Choice of link_level_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "lldp_policy": {
            "aliases": [
              "lldp_policy_name"
            ],
            "description": [
              "Choice of lldp_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "mcp_policy": {
            "aliases": [
              "mcp_policy_name"
            ],
            "description": [
              "Choice of mcp_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "monitoring_policy": {
            "aliases": [
              "monitoring_policy_name"
            ],
            "description": [
              "Choice of monitoring_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy_group": {
            "aliases": [
              "name",
              "policy_group_name"
            ],
            "description": [
              "Name of the leaf policy group to be added/deleted."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "port_channel_policy": {
            "aliases": [
              "port_channel_policy_name"
            ],
            "description": [
              "Choice of port_channel_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "port_security_policy": {
            "aliases": [
              "port_security_policy_name"
            ],
            "description": [
              "Choice of port_security_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "priority_flow_control_policy": {
            "aliases": [
              "priority_flow_control_policy_name"
            ],
            "description": [
              "Choice of priority_flow_control_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "slow_drain_policy": {
            "aliases": [
              "slow_drain_policy_name"
            ],
            "description": [
              "Choice of slow_drain_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "storm_control_interface_policy": {
            "aliases": [
              "storm_control_interface_policy_name"
            ],
            "description": [
              "Choice of storm_control_interface_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "stp_interface_policy": {
            "aliases": [
              "stp_interface_policy_name"
            ],
            "description": [
              "Choice of stp_interface_policy to be used as part of the leaf policy group to be created."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(infra:AccBndlGrp) and B(infra:AccPortGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage fabric interface policy leaf policy groups (infra:AccBndlGrp, infra:AccPortGrp)"
      },
      "examples": "\n- name: Create a Port Channel (PC) Interface Policy Group\n  cisco.aci.aci_interface_policy_leaf_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    lag_type: link\n    policy_group: policygroupname\n    description: policygroupname description\n    link_level_policy: whateverlinklevelpolicy\n    cdp_policy: whatevercdppolicy\n    lldp_policy: whateverlldppolicy\n    port_channel_policy: whateverlacppolicy\n    state: present\n  delegate_to: localhost\n\n- name: Create a Virtual Port Channel (VPC) Interface Policy Group\n  cisco.aci.aci_interface_policy_leaf_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    lag_type: node\n    policy_group: policygroupname\n    link_level_policy: whateverlinklevelpolicy\n    cdp_policy: whatevercdppolicy\n    lldp_policy: whateverlldppolicy\n    port_channel_policy: whateverlacppolicy\n    state: present\n  delegate_to: localhost\n\n- name: Create a Leaf Access Port Policy Group\n  cisco.aci.aci_interface_policy_leaf_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    lag_type: leaf\n    policy_group: policygroupname\n    link_level_policy: whateverlinklevelpolicy\n    cdp_policy: whatevercdppolicy\n    lldp_policy: whateverlldppolicy\n    state: present\n  delegate_to: localhost\n\n- name: Query all Leaf Access Port Policy Groups of type link\n  cisco.aci.aci_interface_policy_leaf_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    lag_type: link\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a specific Lead Access Port Policy Group\n  cisco.aci.aci_interface_policy_leaf_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    lag_type: leaf\n    policy_group: policygroupname\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Delete an Interface policy Leaf Policy Group\n  cisco.aci.aci_interface_policy_leaf_policy_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    lag_type: leaf\n    policy_group: policygroupname\n    state: absent\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_leaf_profile": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage fabric interface policy leaf profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_leaf_profile.py",
        "has_action": false,
        "module": "aci_interface_policy_leaf_profile",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the Fabric access policy leaf interface profile."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "name",
              "leaf_interface_profile_name",
              "leaf_interface_profile",
              "interface_profile_name"
            ],
            "description": [
              "The name of the Fabric access policy leaf interface profile."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "type": {
            "choices": [
              "fex",
              "leaf"
            ],
            "default": "leaf",
            "description": [
              "The type of profile to be created."
            ],
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(infra:AccPortP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage fabric interface policy leaf profiles (infra:AccPortP)"
      },
      "examples": "\n- name: Add a new leaf_interface_profile\n  cisco.aci.aci_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    description:  leafintprfname description\n    state: present\n  delegate_to: localhost\n\n- name: Add a new leaf_interface_profile of type fex\n  cisco.aci.aci_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname_fex\n    type: fex\n    description: leafintprfname description\n    state: present\n  delegate_to: localhost\n\n- name: Remove a leaf_interface_profile\n  cisco.aci.aci_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    state: absent\n  delegate_to: localhost\n\n- name: Remove a leaf_interface_profile of type fex\n  cisco.aci.aci_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname_fex\n    type: fex\n    state: absent\n  delegate_to: localhost\n\n- name: Query a leaf_interface_profile\n  cisco.aci.aci_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a leaf_interface_profile of type fex\n  cisco.aci.aci_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname_fex\n    type: fex\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all leaf_interface_profiles\n  cisco.aci.aci_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n\n- name: Query all leaf_interface_profiles of type fex\n  cisco.aci.aci_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    type: fex\n    state: query\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_link_level": {
      "doc": {
        "author": [
          "Vasily Prokopov (@vasilyprokopov)"
        ],
        "collection": "cisco.aci",
        "description": [
          "The link level interface policy specifies the layer 1 parameters of switch interfaces."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_link_level.py",
        "has_action": false,
        "module": "aci_interface_policy_link_level",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "auto_negotiation": {
            "default": true,
            "description": [
              "Auto-negotiation enables devices to automatically exchange information over a link about speed and duplex abilities.",
              "The APIC defaults to C(on) when unset during creation."
            ],
            "type": "bool"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description of the Link Level interface policy."
            ],
            "type": "str"
          },
          "forwarding_error_correction": {
            "choices": [
              "inherit",
              "kp-fec",
              "cl91-rs-fec",
              "cl74-fc-fec",
              "disable-fec",
              "ieee-rs-fec",
              "cons16-rs-fec"
            ],
            "default": "inherit",
            "description": [
              "Determines the forwarding error correction (FEC) mode.",
              "The APIC defaults to C(inherit) when unset during creation."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "link_debounce_interval": {
            "default": 100,
            "description": [
              "Enables the debounce timer for physical interface ports and sets it for a specified amount of time in milliseconds.",
              "The APIC defaults to C(100) when unset during creation."
            ],
            "type": "int"
          },
          "link_level_policy": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the Link Level interface policy."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "speed": {
            "choices": [
              "100M",
              "1G",
              "10G",
              "25G",
              "40G",
              "50G",
              "100G",
              "200G",
              "400G",
              "inherit"
            ],
            "default": "inherit",
            "description": [
              "Determines the interface policy administrative port speed.",
              "The APIC defaults to C(inherit) when unset during creation."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fabric:HIfPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Link Level interface policies (fabric:HIfPol)"
      },
      "examples": "\n- name: Add a Link Level Policy\n  aci_interface_policy_link_level:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    link_level_policy: link_level_policy_test\n    description: via Ansible\n    auto_negotiation: on\n    speed: 100M\n    link_debounce_interval: 100\n    forwarding_error_correction: cl91-rs-fec\n    state: present\n  delegate_to: localhost\n\n- name: Remove a Link Level Policy\n  aci_interface_policy_link_level:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    link_level_policy: ansible_test\n    state: absent\n\n- name: Query a Link Level Policy\n  aci_interface_policy_link_level:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    link_level_policy: link_level_policy_test\n    state: query\n  delegate_to: localhost\n\n- name: Query all Link Level Policies\n  aci_interface_policy_link_level:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_lldp": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage LLDP interface policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_lldp.py",
        "has_action": false,
        "module": "aci_interface_policy_lldp",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the LLDP interface policy name."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "lldp_policy": {
            "aliases": [
              "name"
            ],
            "description": [
              "The LLDP interface policy name."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "receive_state": {
            "description": [
              "Enable or disable Receive state.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "transmit_state": {
            "description": [
              "Enable or Disable Transmit state.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(lldp:IfPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage LLDP interface policies (lldp:IfPol)"
      },
      "examples": "\n- name: Add a LLDP interface policy\n  cisco.aci.aci_interface_policy_lldp:\n    host: '{{ hostname }}'\n    username: '{{ username }}'\n    password: '{{ password }}'\n    lldp_policy: '{{ lldp_policy }}'\n    description: '{{ description }}'\n    receive_state: '{{ receive_state }}'\n    transmit_state: '{{ transmit_state }}'\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_mcp": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage MCP interface policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_mcp.py",
        "has_action": false,
        "module": "aci_interface_policy_mcp",
        "options": {
          "admin_state": {
            "description": [
              "Enable or disable admin state.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the MCP interface."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "mcp": {
            "aliases": [
              "mcp_interface",
              "name"
            ],
            "description": [
              "The name of the MCP interface."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(mcp:IfPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage MCP interface policies (mcp:IfPol)"
      },
      "examples": "\n- name: Add a MCP interface policy\n  cisco.aci.aci_interface_policy_mcp:\n    host: '{{ hostname }}'\n    username: '{{ username }}'\n    password: '{{ password }}'\n    mcp: '{{ mcp }}'\n    description: '{{ descr }}'\n    admin_state: '{{ admin_state }}'\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_ospf": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage OSPF interface policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_ospf.py",
        "has_action": false,
        "module": "aci_interface_policy_ospf",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "controls": {
            "choices": [
              "advert-subnet",
              "bfd",
              "mtu-ignore",
              "passive"
            ],
            "description": [
              "The interface policy controls.",
              "This is a list of one or more of the following controls:",
              "C(advert-subnet) -- Advertise IP subnet instead of a host mask in the router LSA.",
              "C(bfd) -- Bidirectional Forwarding Detection",
              "C(mtu-ignore) -- Disables MTU mismatch detection on an interface.",
              "C(passive) -- The interface does not participate in the OSPF protocol and will not establish adjacencies or send routing updates. However the interface is announced as part of the routing network."
            ],
            "elements": "str",
            "type": "list"
          },
          "cost": {
            "description": [
              "The OSPF cost of the interface.",
              "The cost (also called metric) of an interface in OSPF is an indication of the overhead required to send packets across a certain interface. The cost of an interface is inversely proportional to the bandwidth of that interface. A higher bandwidth indicates a lower cost. There is more overhead (higher cost) and time delays involved in crossing a 56k serial line than crossing a 10M ethernet line. The formula used to calculate the cost is C(cost= 10000 0000/bandwith in bps) For example, it will cost 10 EXP8/10 EXP7 = 10 to cross a 10M Ethernet line and will cost 10 EXP8/1544000 = 64 to cross a T1 line.",
              "By default, the cost of an interface is calculated based on the bandwidth; you can force the cost of an interface with the ip ospf cost value interface subconfiguration mode command.",
              "Accepted values range between C(1) and C(450).",
              "The APIC defaults to C(0) when unset during creation."
            ],
            "type": "int"
          },
          "dead_interval": {
            "description": [
              "The interval between hello packets from a neighbor before the router declares the neighbor as down.",
              "This value must be the same for all networking devices on a specific network.",
              "Specifying a smaller dead interval (seconds) will give faster detection of a neighbor being down and improve convergence, but might cause more routing instability.",
              "Accepted values range between C(1) and C(65535).",
              "The APIC defaults to C(40) when unset during creation."
            ],
            "type": "int"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the OSPF interface."
            ],
            "type": "str"
          },
          "hello_interval": {
            "description": [
              "The interval between hello packets that OSPF sends on the interface.",
              "Note that the smaller the hello interval, the faster topological changes will be detected, but more routing traffic will ensue.",
              "This value must be the same for all routers and access servers on a specific network.",
              "Accepted values range between C(1) and C(65535).",
              "The APIC defaults to C(10) when unset during creation."
            ],
            "type": "int"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "network_type": {
            "choices": [
              "bcast",
              "p2p"
            ],
            "description": [
              "The OSPF interface policy network type.",
              "OSPF supports broadcast and point-to-point.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "ospf": {
            "aliases": [
              "ospf_interface",
              "name"
            ],
            "description": [
              "The OSPF interface policy name.",
              "This name can be between 1 and 64 alphanumeric characters.",
              "Note that you cannot change this name after the object has been saved."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "prefix_suppression": {
            "description": [
              "Whether prefix suppressions is enabled or disabled.",
              "The APIC defaults to C(inherit) when unset during creation."
            ],
            "type": "bool"
          },
          "priority": {
            "description": [
              "The priority for the OSPF interface profile.",
              "Accepted values ranges between C(0) and C(255).",
              "The APIC defaults to C(1) when unset during creation."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "retransmit_interval": {
            "description": [
              "The interval between LSA retransmissions.",
              "The retransmit interval occurs while the router is waiting for an acknowledgement from the neighbor router that it received the LSA.",
              "If no acknowledgment is received at the end of the interval, then the LSA is resent.",
              "Accepted values range between C(1) and C(65535).",
              "The APIC defaults to C(5) when unset during creation."
            ],
            "type": "int"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant the OSPF interface policy should belong to."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "transmit_delay": {
            "description": [
              "The delay time needed to send an LSA update packet.",
              "OSPF increments the LSA age time by the transmit delay amount before transmitting the LSA update.",
              "You should take into account the transmission and propagation delays for the interface when you set this value.",
              "Accepted values range between C(1) and C(450).",
              "The APIC defaults to C(1) when unset during creation."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(ospf:IfPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage OSPF interface policies (ospf:IfPol)"
      },
      "examples": "\n- name: Ensure ospf interface policy exists\n  cisco.aci.aci_interface_policy_ospf:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ospf: ospf1\n    state: present\n  delegate_to: localhost\n\n- name: Ensure ospf interface policy does not exist\n  cisco.aci.aci_interface_policy_ospf:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ospf: ospf1\n    state: present\n  delegate_to: localhost\n\n- name: Query an ospf interface policy\n  cisco.aci.aci_interface_policy_ospf:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    ospf: ospf1\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all ospf interface policies in tenant production\n  cisco.aci.aci_interface_policy_ospf:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_port_channel": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage port channel interface policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_port_channel.py",
        "has_action": false,
        "module": "aci_interface_policy_port_channel",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the port channel."
            ],
            "type": "str"
          },
          "fast_select": {
            "description": [
              "Determines if Fast Select is enabled for Hot Standby Ports.",
              "This makes up the LACP Policy Control Policy; if one setting is defined, then all other Control Properties left undefined or set to false will not exist after the task is ran.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "graceful_convergence": {
            "description": [
              "Determines if Graceful Convergence is enabled.",
              "This makes up the LACP Policy Control Policy; if one setting is defined, then all other Control Properties left undefined or set to false will not exist after the task is ran.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "load_defer": {
            "description": [
              "Determines if Load Defer is enabled.",
              "This makes up the LACP Policy Control Policy; if one setting is defined, then all other Control Properties left undefined or set to false will not exist after the task is ran.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "max_links": {
            "description": [
              "Maximum links.",
              "Accepted values range between 1 and 16.",
              "The APIC defaults to C(16) when unset during creation."
            ],
            "type": "int"
          },
          "min_links": {
            "description": [
              "Minimum links.",
              "Accepted values range between 1 and 16.",
              "The APIC defaults to C(1) when unset during creation."
            ],
            "type": "int"
          },
          "mode": {
            "choices": [
              "active",
              "mac-pin",
              "mac-pin-nicload",
              "off",
              "passive"
            ],
            "description": [
              "Port channel interface policy mode.",
              "Determines the LACP method to use for forming port-channels.",
              "The APIC defaults to C(off) when unset during creation."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "port_channel": {
            "aliases": [
              "name"
            ],
            "description": [
              "Name of the port channel."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "suspend_individual": {
            "description": [
              "Determines if Suspend Individual is enabled.",
              "This makes up the LACP Policy Control Policy; if one setting is defined, then all other Control Properties left undefined or set to false will not exist after the task is ran.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "symmetric_hash": {
            "description": [
              "Determines if Symmetric Hashing is enabled.",
              "This makes up the LACP Policy Control Policy; if one setting is defined, then all other Control Properties left undefined or set to false will not exist after the task is ran.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(lacp:LagPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage port channel interface policies (lacp:LagPol)"
      },
      "examples": "\n- name: Add a port channel interface policy\n  cisco.aci.aci_interface_policy_port_channel:\n    host: '{{ inventory_hostname }}'\n    username: '{{ username }}'\n    password: '{{ password }}'\n    port_channel: '{{ port_channel }}'\n    description: '{{ description }}'\n    min_links: '{{ min_links }}'\n    max_links: '{{ max_links }}'\n    mode: '{{ mode }}'\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_policy_port_security": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage port security on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_policy_port_security.py",
        "has_action": false,
        "module": "aci_interface_policy_port_security",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the contract."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "max_end_points": {
            "description": [
              "Maximum number of end points.",
              "Accepted values range between C(0) and C(12000).",
              "The APIC defaults to C(0) when unset during creation."
            ],
            "type": "int"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "port_security": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the port security."
            ],
            "type": "str"
          },
          "port_security_timeout": {
            "description": [
              "The delay time in seconds before MAC learning is re-enabled",
              "Accepted values range between C(60) and C(3600)",
              "The APIC defaults to C(60) when unset during creation"
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(l2:PortSecurityPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage port security (l2:PortSecurityPol)"
      },
      "examples": "\n- name: Add a port security interface policy\n  cisco.aci.aci_interface_policy_port_security:\n    host: '{{ inventory_hostname }}'\n    username: '{{ username }}'\n    password: '{{ password }}'\n    port_security: '{{ port_security }}'\n    description: '{{ descr }}'\n    max_end_points: '{{ max_end_points }}'\n    port_security_timeout: '{{ port_security_timeout }}'\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_interface_selector_to_switch_policy_leaf_profile": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind interface selector profiles to switch policy leaf profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_interface_selector_to_switch_policy_leaf_profile.py",
        "has_action": false,
        "module": "aci_interface_selector_to_switch_policy_leaf_profile",
        "notes": [
          "This module requires an existing leaf profile, the module M(cisco.aci.aci_switch_policy_leaf_profile) can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_selector": {
            "aliases": [
              "name",
              "interface_selector_name",
              "interface_profile_name"
            ],
            "description": [
              "Name of Interface Profile Selector to be added and associated with the Leaf Profile."
            ],
            "type": "str"
          },
          "leaf_profile": {
            "aliases": [
              "leaf_profile_name"
            ],
            "description": [
              "Name of the Leaf Profile to which we add a Selector."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_switch_policy_leaf_profile"
          },
          {
            "description": "More information about the internal APIC class B(infra:RsAccPortP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind interface selector profiles to switch policy leaf profiles (infra:RsAccPortP)"
      },
      "examples": "\n- name: Associating an interface selector profile to a switch policy leaf profile\n  cisco.aci.aci_interface_selector_to_switch_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    interface_selector: interface_profile_name\n    state: present\n  delegate_to: localhost\n\n- name: Remove an interface selector profile associated with a switch policy leaf profile\n  cisco.aci.aci_interface_selector_to_switch_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    interface_selector: interface_profile_name\n    state: absent\n  delegate_to: localhost\n\n- name: Query an interface selector profile associated with a switch policy leaf profile\n  cisco.aci.aci_interface_selector_to_switch_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    interface_selector: interface_profile_name\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l2out": {
      "doc": {
        "author": [
          "Sudhakar Shet Kudtarkar (@kudtarkar1)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Layer2 Out configuration on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l2out.py",
        "has_action": false,
        "module": "aci_l2out",
        "notes": [
          "The C(tenant) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "bd": {
            "description": [
              "Name of the Bridge domain which is associted with the L2Out."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description for the L2Out."
            ],
            "type": "str"
          },
          "domain": {
            "description": [
              "Name of the external L2 Domain that is being associated with L2Out."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l2out": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of outer layer2."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vlan": {
            "description": [
              "The VLAN which is being associated with the L2Out."
            ],
            "type": "int"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fvTenant).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer2 Out (L2Out) objects."
      },
      "examples": "\n- name: Add a new L2Out\n  cisco.aci.aci_l2out:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l2out: l2out\n    description: via Ansible\n    bd: bd1\n    domain: l2Dom\n    vlan: 3200\n    state: present\n    delegate_to: localhost\n\n- name: Remove an L2Out\n  cisco.aci.aci_l2out:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l2out: l2out\n    state: absent\n    delegate_to: localhost\n\n- name: Query an L2Out\n  cisco.aci.aci_l2out:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l2out: l2out\n    state: query\n    delegate_to: localhost\n    register: query_result\n\n- name: Query all L2Outs in a specific tenant\n  cisco.aci.aci_l2out:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    state: query\n    delegate_to: localhost\n    register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l2out_extepg": {
      "doc": {
        "author": [
          "Sudhakar Shet Kudtarkar (@kudtarkar1)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage External Network Instance (L2Out External EPG) objects (l2extInstP) on ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l2out_extepg.py",
        "has_action": false,
        "module": "aci_l2out_extepg",
        "notes": [
          "The C(tenant) and C(l2out) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_l2out) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description for the l2out."
            ],
            "type": "str"
          },
          "extepg": {
            "aliases": [
              "external_epg",
              "extepg_name",
              "name"
            ],
            "description": [
              "Name of the external end point group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l2out": {
            "description": [
              "Name of the l2out."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "preferred_group": {
            "description": [
              "This depicts whether this External EPG is part of the Preferred Group and can communicate without contracts.",
              "This is convenient for migration scenarios, or when ACI is used for network automation but not for policy.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "qos_class": {
            "choices": [
              "level1",
              "level2",
              "level3",
              "level4",
              "level5",
              "level6",
              "Unspecified"
            ],
            "description": [
              "The bandwidth level for Quality of service."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "Name of existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fvtenant) and B(l2extOut).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage External Network Instance (L2Out External EPG) objects (l2extInstP)."
      },
      "examples": "\n- name: Add a new L2 external end point group\n  cisco.aci.aci_l2out_extepg:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l2out: l2out\n    extepg: NewExt\n    description: external epg\n    preferred_group: False\n    state: present\n    delegate_to: localhost\n\n- name: Remove an L2 external end point group\n  cisco.aci.aci_l2out_extepg:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l2out: l2out\n    extepg: NewExt\n    state: absent\n    delegate_to: localhost\n\n- name: Query the L2 external end point group\n  cisco.aci.aci_l2out_extepg:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l2out: l2out\n    extepg: NewExt\n    state: query\n    delegate_to: localhost\n    register: query_result\n\n- name: Query all L2 external end point groups in a tenant\n  cisco.aci.aci_l2out_extepg:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    state: query\n    delegate_to: localhost\n    register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l2out_extepg_to_contract": {
      "doc": {
        "author": [
          "Sudhakar Shet Kudtarkar (@kudtarkar1)",
          "Shreyas Srish (@shrsr)",
          "Oleksandr Kreshchenko (@alexkross)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind Contracts to L2 External End Point Groups (EPGs) on ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l2out_extepg_to_contract.py",
        "has_action": false,
        "module": "aci_l2out_extepg_to_contract",
        "notes": [
          "The C(tenant), C(l2out) and C(extepg) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant), M(cisco.aci.aci_l2out) and M(cisco.aci.aci_l2out_extepg) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract": {
            "description": [
              "Name of the contract."
            ],
            "type": "str"
          },
          "contract_type": {
            "choices": [
              "consumer",
              "provider"
            ],
            "description": [
              "The type of contract."
            ],
            "required": true,
            "type": "str"
          },
          "extepg": {
            "aliases": [
              "extepg_name",
              "external_epg"
            ],
            "description": [
              "Name of the external end point group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l2out": {
            "aliases": [
              "l2out_name"
            ],
            "description": [
              "Name of the l2out."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "priority": {
            "choices": [
              "level1",
              "level2",
              "level3",
              "unspecified"
            ],
            "description": [
              "This has four levels of priority."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "provider_match": {
            "choices": [
              "all",
              "at_least_one",
              "at_most_one",
              "none"
            ],
            "description": [
              "This is configurable for provided contracts."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "Name of existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fvtenant), B(l2extInstP) and B(l2extOut).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind Contracts to L2 External End Point Groups (EPGs)"
      },
      "examples": "\n- name: Bind a contract to an L2 external EPG\n  cisco.aci.aci_l2out_extepg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l2out: l2out\n    extepg : testEpg\n    contract: contract1\n    contract_type: provider\n    state: present\n  delegate_to: localhost\n\n- name: Remove existing contract from an L2 external EPG\n  cisco.aco.aci_l2out_extepg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l2out: l2out\n    extepg : testEpg\n    contract: contract1\n    contract_type: provider\n    state: absent\n  delegate_to: localhost\n\n- name: Query a contract bound to an L2 external EPG\n  cisco.aci.aci_l2out_extepg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: ansible_tenant\n    l2out: ansible_l2out\n    extepg: ansible_extEpg\n    contract: ansible_contract\n    contract_type: provider\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all contracts relationships\n  cisco.aci.aci_l2out_extepg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    contract_type: provider\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l2out_logical_interface_path": {
      "doc": {
        "author": [
          "Oleksandr Kreshchenko (@alexkross)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage interface path entry of L2 outside node (BD extension) on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l2out_logical_interface_path.py",
        "has_action": false,
        "module": "aci_l2out_logical_interface_path",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface": {
            "description": [
              "The C(interface) string value part of the tDn.",
              "Usually a policy group like C(test-IntPolGrp) or an interface of the following format C(1/7) depending on C(interface_type)."
            ],
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "name",
              "interface_profile_name",
              "logical_interface"
            ],
            "description": [
              "Name of the interface profile."
            ],
            "type": "str"
          },
          "interface_type": {
            "choices": [
              "switch_port",
              "port_channel",
              "vpc"
            ],
            "default": "switch_port",
            "description": [
              "The type of interface for the static EPG deployment."
            ],
            "type": "str"
          },
          "l2out": {
            "aliases": [
              "l2out_name"
            ],
            "description": [
              "Name of an existing L2Out."
            ],
            "type": "str"
          },
          "leaves": {
            "aliases": [
              "leafs",
              "nodes",
              "paths",
              "switches"
            ],
            "description": [
              "The switch ID(s) that the C(interface) belongs to.",
              "When C(interface_type) is C(switch_port) or C(port_channel), then C(leaves) is a string of the leaf ID.",
              "When C(interface_type) is C(vpc), then C(leaves) is a list with both leaf IDs.",
              "The C(leaves) value is usually something like '101' or '101-102' depending on C(connection_type)."
            ],
            "elements": "str",
            "type": "list"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "aliases": [
              "pod",
              "pod_number"
            ],
            "description": [
              "The pod number part of the tDn.",
              "C(pod_id) is usually an integer below C(10)."
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l2out"
          },
          {
            "module": "aci_l2out_logical_node_profile"
          },
          {
            "module": "aci_l2out_logical_interface_profile"
          },
          {
            "module": "aci_l2out_extepg"
          },
          {
            "description": "More information about the internal APIC classes",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 2 Outside (L2Out) logical interface path (l2extRsPathL2OutAtt)"
      },
      "examples": "\n- name: Add new node profile\n  cisco.aci.aci_l2out_logical_node_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l2out: my_l2out\n    #node_profile: my_node_profile # 'default' by default\n    state: present\n  delegate_to: localhost\n\n- name: Add new interface profile\n  cisco.aci.aci_l2out_logical_interface_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l2out: my_l2out\n    node_profile: default\n    interface_profile: my_interface_profile # 'default' by default\n    state: present\n  delegate_to: localhost\n\n- name: Add new path to interface profile\n  cisco.aci.aci_l2out_logical_interface_path:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l2out: my_l2out\n    node_profile: default\n    interface_profile: default\n    interface_type: vpc\n    pod_id: 1\n    leaves: 101-102\n    interface: L2o1\n    state: present\n  delegate_to: localhost\n\n- name: Delete an interface profile\n  cisco.aci.aci_l2out_logical_interface_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l2out: my_l2out\n    node_profile: default\n    interface_profile: default\n    state: absent\n  delegate_to: localhost\n\n- name: Query an node profile\n  cisco.aci.aci_l2out_logical_node_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l2out: my_l2out\n    #node_profile: default\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all node profiles\n  cisco.aci.aci_l2out_logical_node_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l2out_logical_interface_profile": {
      "doc": {
        "author": [
          "Oleksandr Kreshchenko (@alexkross)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage interface profiles of L2 outside (BD extension) on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l2out_logical_interface_profile.py",
        "has_action": false,
        "module": "aci_l2out_logical_interface_profile",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "name",
              "interface_profile_name",
              "logical_interface"
            ],
            "description": [
              "Name of the interface profile."
            ],
            "type": "str"
          },
          "l2out": {
            "aliases": [
              "l2out_name"
            ],
            "description": [
              "Name of an existing L2Out."
            ],
            "type": "str"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "default": "default",
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l2out"
          },
          {
            "module": "aci_l2out_logical_node_profile"
          },
          {
            "module": "aci_l2out_logical_interface_path"
          },
          {
            "module": "aci_l2out_extepg"
          },
          {
            "description": "More information about the internal APIC classes",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 2 Outside (L2Out) interface profiles (l2ext:LIfP)"
      },
      "examples": "\nSee module aci_l2out_logical_interface_path.\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l2out_logical_node_profile": {
      "doc": {
        "author": [
          "Oleksandr Kreshchenko (@alexkross)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage node profiles of L2 outside (BD extension) on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l2out_logical_node_profile.py",
        "has_action": false,
        "module": "aci_l2out_logical_node_profile",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l2out": {
            "aliases": [
              "l2out_name"
            ],
            "description": [
              "Name of an existing L2Out."
            ],
            "type": "str"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l2out"
          },
          {
            "module": "aci_l2out_logical_interface_profile"
          },
          {
            "module": "aci_l2out_logical_interface_path"
          },
          {
            "module": "aci_l2out_extepg"
          },
          {
            "description": "More information about the internal APIC classes",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 2 Outside (L2Out) logical node profiles (l2ext:LNodeP)"
      },
      "examples": "\nSee module aci_l2out_logical_interface_path.\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out": {
      "doc": {
        "author": [
          "Rostyslav Davydenko (@rost-d)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Layer 3 Outside (L3Out) on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out.py",
        "has_action": false,
        "module": "aci_l3out",
        "notes": [
          "The C(tenant) and C(domain) and C(vrf) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_domain) and M(cisco.aci.aci_vrf) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "asn": {
            "aliases": [
              "as_number"
            ],
            "description": [
              "The AS number for the L3Out.",
              "Only applicable when using 'eigrp' as the l3protocol"
            ],
            "type": "int"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the L3Out."
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "ext_routed_domain_name",
              "routed_domain"
            ],
            "description": [
              "Name of the external L3 domain being associated with the L3Out."
            ],
            "type": "str"
          },
          "dscp": {
            "aliases": [
              "target"
            ],
            "choices": [
              "AF11",
              "AF12",
              "AF13",
              "AF21",
              "AF22",
              "AF23",
              "AF31",
              "AF32",
              "AF33",
              "AF41",
              "AF42",
              "AF43",
              "CS0",
              "CS1",
              "CS2",
              "CS3",
              "CS4",
              "CS5",
              "CS6",
              "CS7",
              "EF",
              "VA",
              "unspecified"
            ],
            "description": [
              "The target Differentiated Service (DSCP) value.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name",
              "name"
            ],
            "description": [
              "Name of L3Out being created."
            ],
            "type": "str"
          },
          "l3protocol": {
            "choices": [
              "bgp",
              "eigrp",
              "ospf",
              "pim",
              "static"
            ],
            "description": [
              "Routing protocol for the L3Out"
            ],
            "elements": "str",
            "type": "list"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "route_control": {
            "aliases": [
              "route_control_enforcement"
            ],
            "choices": [
              "export",
              "import"
            ],
            "description": [
              "Route Control enforcement direction. The only allowed values are export or import,export."
            ],
            "elements": "str",
            "type": "list"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vrf": {
            "aliases": [
              "vrf_name"
            ],
            "description": [
              "Name of the VRF being associated with the L3Out."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "module": "cisco.aci.aci_vrf"
          },
          {
            "description": "More information about the internal APIC class B(l3ext:Out).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 3 Outside (L3Out) objects (l3ext:Out)"
      },
      "examples": "\n- name: Add a new L3Out\n  cisco.aci.aci_l3out:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    name: prod_l3out\n    description: L3Out for Production tenant\n    domain: l3dom_prod\n    vrf: prod\n    l3protocol: ospf\n    state: present\n  delegate_to: localhost\n\n- name: Delete L3Out\n  cisco.aci.aci_l3out:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    name: prod_l3out\n    state: absent\n  delegate_to: localhost\n\n- name: Query L3Out information\n  cisco.aci.aci_l3out:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    name: prod_l3out\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_bgp_peer": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage L3Out BGP Peers on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_bgp_peer.py",
        "has_action": false,
        "module": "aci_l3out_bgp_peer",
        "options": {
          "address_type_controls": {
            "choices": [
              "af-ucast",
              "af-mcast"
            ],
            "description": [
              "Address Type Controls"
            ],
            "elements": "str",
            "type": "list"
          },
          "admin_state": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "Admin state for the BGP session"
            ],
            "type": "str"
          },
          "allow_self_as_count": {
            "description": [
              "Number of allowed self AS.",
              "Only used if C(allow-self-as) is enabled under C(bgp_controls)."
            ],
            "type": "int"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "bgp_controls": {
            "choices": [
              "send-com",
              "send-ext-com",
              "allow-self-as",
              "as-override",
              "dis-peer-as-check",
              "nh-self"
            ],
            "description": [
              "BGP Controls"
            ],
            "elements": "str",
            "type": "list"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "interface_profile_name",
              "logical_interface"
            ],
            "description": [
              "Name of the interface profile."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "required": true,
            "type": "str"
          },
          "node_id": {
            "description": [
              "Node to build the interface on for Port-channels and single ports.",
              "Hyphen separated pair of nodes (e.g. \"201-202\") for vPCs."
            ],
            "required": true,
            "type": "str"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "path_ep": {
            "description": [
              "Path to interface",
              "Interface Port Group name for Port-channels and vPCs",
              "Port number for single ports (e.g. \"eth1/12\")"
            ],
            "required": true,
            "type": "str"
          },
          "peer_controls": {
            "choices": [
              "bfd",
              "dis-conn-check"
            ],
            "description": [
              "Peer Controls"
            ],
            "elements": "str",
            "type": "list"
          },
          "peer_ip": {
            "description": [
              "IP address of the BGP peer."
            ],
            "required": true,
            "type": "str"
          },
          "pod_id": {
            "description": [
              "Pod to build the interface on."
            ],
            "required": true,
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_asn_controls": {
            "choices": [
              "remove-exclusive",
              "remove-all",
              "replace-as"
            ],
            "description": [
              "Private AS Controls"
            ],
            "elements": "str",
            "type": "list"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "remote_asn": {
            "description": [
              "Autonomous System Number of the BGP peer."
            ],
            "type": "int"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "ttl": {
            "description": [
              "eBGP Multihop Time To Live"
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "weight": {
            "description": [
              "Weight for BGP routes from this neighbor"
            ],
            "type": "int"
          }
        },
        "seealso": [
          {
            "module": "aci_l3out"
          },
          {
            "module": "aci_l3out_logical_node_profile"
          },
          {
            "description": "More information about the internal APIC classes B(bgp:peerP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 3 Outside (L3Out) BGP Peers (bgp:PeerP)"
      },
      "examples": "\n- name: Add a new BGP peer on a physical interface\n  cisco.aci.aci_l3out_bgp_peer:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    peer_ip: 192.168.10.2\n    remote_asn: 65456\n    bgp_controls:\n      - nh-self\n      - send-com\n      - send-ext-com\n    peer_controls:\n      - bfd\n    state: present\n  delegate_to: localhost\n\n- name: Add a new BGP peer on a vPC\n  cisco.aci.aci_l3out_bgp_peer:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201-202\n    path_ep: my_vpc_ipg\n    peer_ip: 192.168.20.2\n    remote_asn: 65457\n    ttl: 4\n    weight: 50\n    state: present\n  delegate_to: localhost\n\n- name: Shutdown a BGP peer\n  cisco.aci.aci_l3out_bgp_peer:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    peer_ip: 192.168.10.2\n    admin_state: disabled\n    state: present\n  delegate_to: localhost\n\n- name: Delete a BGP peer\n  cisco.aci.aci_l3out_bgp_peer:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    peer_ip: 192.168.10.2\n    state: absent\n  delegate_to: localhost\n\n- name: Query a BGP peer\n  cisco.aci.aci_l3out_bgp_peer:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    peer_ip: 192.168.10.2\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_extepg": {
      "doc": {
        "author": [
          "Rostyslav Davydenko (@rost-d)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage External Network Instance Profile (ExtEpg) objects (l3extInstP:instP)"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_extepg.py",
        "has_action": false,
        "module": "aci_l3out_extepg",
        "notes": [
          "The C(tenant) and C(domain) and C(vrf) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_domain) and M(cisco.aci.aci_vrf) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the ExtEpg."
            ],
            "type": "str"
          },
          "dscp": {
            "aliases": [
              "target"
            ],
            "choices": [
              "AF11",
              "AF12",
              "AF13",
              "AF21",
              "AF22",
              "AF23",
              "AF31",
              "AF32",
              "AF33",
              "AF41",
              "AF42",
              "AF43",
              "CS0",
              "CS1",
              "CS2",
              "CS3",
              "CS4",
              "CS5",
              "CS6",
              "CS7",
              "EF",
              "VA",
              "unspecified"
            ],
            "description": [
              "The target Differentiated Service (DSCP) value.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "extepg": {
            "aliases": [
              "extepg_name",
              "name"
            ],
            "description": [
              "Name of ExtEpg being created."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "preferred_group": {
            "description": [
              "Whether ot not the EPG is part of the Preferred Group and can communicate without contracts.",
              "This is very convenient for migration scenarios, or when ACI is used for network automation but not for policy.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "module": "cisco.aci.aci_vrf"
          },
          {
            "description": "More information about the internal APIC class B(l3ext:Out).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage External Network Instance Profile (ExtEpg) objects (l3extInstP:instP)"
      },
      "examples": "\n- name: Add a new ExtEpg\n  cisco.aci.aci_l3out_extepg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    l3out: prod_l3out\n    name: prod_extepg\n    description: ExtEpg for Production L3Out\n    state: present\n  delegate_to: localhost\n\n- name: Delete ExtEpg\n  cisco.aci.aci_extepg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    l3out: prod_l3out\n    name: prod_extepg\n    state: absent\n  delegate_to: localhost\n\n- name: Query ExtEpg information\n  cisco.aci.aci_l3out_extepg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    l3out: prod_l3out\n    name: prod_extepg\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_extepg_to_contract": {
      "doc": {
        "author": [
          "Sudhakar Shet Kudtarkar (@kudtarkar1)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind Contracts to External End Point Groups (EPGs) on ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_extepg_to_contract.py",
        "has_action": false,
        "module": "aci_l3out_extepg_to_contract",
        "notes": [
          "The C(tenant), C(l3out) and C(extepg) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant), M(cisco.aci.aci_l3out) and M(cisco.aci.aci_l3out_extepg) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract": {
            "description": [
              "Name of the contract."
            ],
            "type": "str"
          },
          "contract_type": {
            "choices": [
              "consumer",
              "provider"
            ],
            "description": [
              "The type of contract."
            ],
            "required": true,
            "type": "str"
          },
          "extepg": {
            "aliases": [
              "extepg_name",
              "external_epg"
            ],
            "description": [
              "Name of the external end point group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of the l3out."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "priority": {
            "choices": [
              "level1",
              "level2",
              "level3",
              "unspecified"
            ],
            "description": [
              "This has four levels of priority."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "provider_match": {
            "choices": [
              "all",
              "at_least_one",
              "at_most_one",
              "none"
            ],
            "description": [
              "This is configurable for provided contracts."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "description": [
              "Name of existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(fvtenant), B(l3extInstP) and B(l3extOut).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind Contracts to External End Point Groups (EPGs)"
      },
      "examples": "\n- name: Bind a contract to an external EPG\n  cisco.aci.aci_l3out_extepg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l3out: l3out\n    extepg : testEpg\n    contract: contract1\n    contract_type: provider\n    state: present\n  delegate_to: localhost\n\n- name: Remove existing contract from an external EPG\n  cisco.aci.aci_l3out_extepg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: Auto-Demo\n    l3out: l3out\n    extepg : testEpg\n    contract: contract1\n    contract_type: provider\n    state: absent\n  delegate_to: localhost\n\n- name: Query a contract bound to an external EPG\n  cisco.aci.aci_l3out_extepg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    tenant: ansible_tenant\n    l3out: ansible_l3out\n    extepg: ansible_extEpg\n    contract: ansible_contract\n    contract_type: provider\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all contracts relationships\n  cisco.aci.aci_l3out_extepg_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretePassword\n    contract_type: provider\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_extsubnet": {
      "doc": {
        "author": [
          "Rostyslav Davydenko (@rost-d)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage External Subnet objects (l3extSubnet:extsubnet)"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_extsubnet.py",
        "has_action": false,
        "module": "aci_l3out_extsubnet",
        "notes": [
          "The C(tenant) and C(domain) and C(vrf) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_domain) and M(cisco.aci.aci_vrf) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the External Subnet."
            ],
            "type": "str"
          },
          "extepg": {
            "aliases": [
              "extepg_name"
            ],
            "description": [
              "Name of an existing ExtEpg."
            ],
            "required": true,
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "network": {
            "aliases": [
              "address",
              "ip"
            ],
            "description": [
              "The network address for the Subnet."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "scope": {
            "choices": [
              "export-rtctrl",
              "import-security",
              "shared-rtctrl",
              "shared-security"
            ],
            "default": [
              "import-security"
            ],
            "description": [
              "Determines the scope of the Subnet.",
              "The C(export-rtctrl) option controls which external networks are advertised out of the fabric using route-maps and IP prefix-lists.",
              "The C(import-security) option classifies for the external EPG. The rules and contracts defined in this external EPG apply to networks matching this subnet.",
              "The C(shared-rtctrl) option controls which external prefixes are advertised to other tenants for shared services.",
              "The C(shared-security) option configures the classifier for the subnets in the VRF where the routes are leaked.",
              "The APIC defaults to C(import-security) when unset during creation."
            ],
            "elements": "str",
            "type": "list"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "subnet_name": {
            "aliases": [
              "name"
            ],
            "description": [
              "Name of External Subnet being created."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "module": "cisco.aci.aci_vrf"
          },
          {
            "description": "More information about the internal APIC class B(l3ext:Out).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage External Subnet objects (l3extSubnet:extsubnet)"
      },
      "examples": "\n- name: Add a new External Subnet\n  cisco.aci.aci_l3out_extsubnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    l3out: prod_l3out\n    extepg: prod_extepg\n    description: External Subnet for Production ExtEpg\n    network: 192.0.2.0/24\n    scope: export-rtctrl\n    state: present\n  delegate_to: localhost\n\n- name: Delete External Subnet\n  cisco.aci.aci_l3out_extsubnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    l3out: prod_l3out\n    extepg: prod_extepg\n    network: 192.0.2.0/24\n    state: absent\n  delegate_to: localhost\n\n- name: Query ExtEpg Subnet information\n  cisco.aci.aci_l3out_extsubnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    l3out: prod_l3out\n    extepg: prod_extepg\n    network: 192.0.2.0/24\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_interface": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)",
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage L3Out interfaces on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_interface.py",
        "has_action": false,
        "module": "aci_l3out_interface",
        "options": {
          "address": {
            "aliases": [
              "addr",
              "ip_address"
            ],
            "description": [
              "IP address."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "encap": {
            "description": [
              "encapsulation on the interface (e.g. \"vlan-500\")"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "interface_profile_name",
              "logical_interface"
            ],
            "description": [
              "Name of the interface profile."
            ],
            "required": true,
            "type": "str"
          },
          "interface_type": {
            "choices": [
              "l3-port",
              "sub-interface",
              "ext-svi"
            ],
            "description": [
              "Type of interface to build."
            ],
            "type": "str"
          },
          "ipv6_dad": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "IPv6 DAD feature."
            ],
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "required": true,
            "type": "str"
          },
          "mode": {
            "choices": [
              "regular",
              "native",
              "untagged"
            ],
            "description": [
              "Interface mode, only used if instance_type is ext-svi"
            ],
            "type": "str"
          },
          "mtu": {
            "description": [
              "Interface MTU."
            ],
            "type": "str"
          },
          "node_id": {
            "description": [
              "Node to build the interface on for Port-channels and single ports.",
              "Hyphen separated pair of nodes (e.g. \"201-202\") for vPCs."
            ],
            "type": "str"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "path_ep": {
            "description": [
              "Path to interface",
              "Interface Policy Group name for Port-channels and vPCs",
              "Port number for single ports (e.g. \"eth1/12\")"
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "Pod to build the interface on."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "required": true,
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l3out"
          },
          {
            "module": "aci_l3out_logical_node_profile"
          },
          {
            "description": "More information about the internal APIC class B(l3ext:RsPathL3OutAtt)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 3 Outside (L3Out) interfaces (l3ext:RsPathL3OutAtt)"
      },
      "examples": "\n- name: Add a new routed interface\n  cisco.aci.aci_l3out_interface:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    interface_type: l3-port\n    address: 192.168.10.1/27\n    state: present\n  delegate_to: localhost\n\n- name: Add a new SVI vPC\n  cisco.aci.aci_l3out_interface:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201-202\n    path_ep: my_vpc_ipg\n    interface_type: ext-svi\n    encap: vlan-800\n    mode: regular\n    state: present\n  delegate_to: localhost\n\n- name: Delete an interface\n  cisco.aci.aci_l3out_interface:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    state: absent\n  delegate_to: localhost\n\n- name: Query an interface\n  cisco.aci.aci_l3out_interface:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_interface_secondary_ip": {
      "doc": {
        "author": [
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Layer 3 Outside (L3Out) interface secondary IP addresses (l3ext:Ip)."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_interface_secondary_ip.py",
        "has_action": false,
        "module": "aci_l3out_interface_secondary_ip",
        "notes": [
          "This is a test"
        ],
        "options": {
          "address": {
            "aliases": [
              "addr",
              "ip_address"
            ],
            "description": [
              "Secondary IP address."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "interface_profile_name",
              "logical_interface"
            ],
            "description": [
              "Name of the interface profile."
            ],
            "type": "str"
          },
          "ipv6_dad": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "IPv6 DAD feature."
            ],
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "type": "str"
          },
          "node_id": {
            "description": [
              "Node to build the interface on for Port-channels and single ports.",
              "Hyphen separated pair of nodes (e.g. \"201-202\") for vPCs."
            ],
            "type": "str"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "path_ep": {
            "description": [
              "Path to interface",
              "Interface Policy Group name for Port-channels and vPCs",
              "Port number for single ports (e.g. \"eth1/12\")"
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "Pod to build the interface on."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "side": {
            "choices": [
              "A",
              "B"
            ],
            "description": [
              "Provides the side for vPC member interfaces."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l3out"
          },
          {
            "module": "aci_l3out_logical_node_profile"
          },
          {
            "module": "aci_l3out_logical_interface_profile"
          },
          {
            "module": "aci_l3out_logical_interface"
          },
          {
            "description": "More information about the internal APIC class B(l3ext:RsPathL3OutAtt)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 3 Outside (L3Out) interface secondary IP addresses (l3ext:Ip)."
      },
      "examples": "\n- name: Add a new secondary IP to a routed interface\n  cisco.aci.aci_l3out_interface_secondary_ip:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    address: 192.168.10.2/27\n    state: present\n  delegate_to: localhost\n\n- name: Add a new secondary IP to a vPC member\n  cisco.aci.aci_l3out_interface_secondary_ip:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201-202\n    path_ep: my_vpc_ipg\n    side: A\n    address: 192.168.10.2/27\n    state: present\n  delegate_to: localhost\n\n- name: Delete a secondary IP\n  cisco.aci.aci_l3out_interface_secondary_ip:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    address: 192.168.10.2/27\n    state: absent\n  delegate_to: localhost\n\n- name: Query a secondary IP\n  cisco.aci.aci_l3out_interface_secondary_ip:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    pod_id: 1\n    node_id: 201\n    path_ep: eth1/12\n    address: 192.168.10.2/27\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_logical_interface_profile": {
      "doc": {
        "author": [
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage L3Out interface profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_logical_interface_profile.py",
        "has_action": false,
        "module": "aci_l3out_logical_interface_profile",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "egress_dpp_policy": {
            "description": [
              "Name of the egress data plane policing policy."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "ingress_dpp_policy": {
            "description": [
              "Name of the ingress data plane policing policy."
            ],
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "name",
              "interface_profile_name",
              "logical_interface"
            ],
            "description": [
              "Name of the interface profile."
            ],
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "type": "str"
          },
          "nd_policy": {
            "description": [
              "Name of the neighbor discovery interface policy."
            ],
            "type": "str"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l3out"
          },
          {
            "module": "aci_l3out_logical_node_profile"
          },
          {
            "description": "More information about the internal APIC classes",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 3 Outside (L3Out) logical interface profiles (l3ext:LIfP)"
      },
      "examples": "\n- name: Add a new interface profile\n  cisco.aci.aci_l3out_logical_interface_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    state: present\n  delegate_to: localhost\n\n- name: Delete an interface profile\n  cisco.aci.aci_l3out_logical_interface_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    state: absent\n  delegate_to: localhost\n\n- name: Query an interface profile\n  cisco.aci.aci_l3out_logical_interface_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    interface_profile: my_interface_profile\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all interface profiles\n  cisco.aci.aci_l3out_logical_interface_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_logical_interface_vpc_member": {
      "doc": {
        "author": [
          "Anvitha Jain (@anvitha-jain)",
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Member Node objects (l3extMember:Member)"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_logical_interface_vpc_member.py",
        "has_action": false,
        "module": "aci_l3out_logical_interface_vpc_member",
        "notes": [
          "The L3Out vPC inteface used must exist before using this module in your playbook. The M(cisco.aci.aci_l3out_logical_interface_profile) module can be used for this."
        ],
        "options": {
          "address": {
            "aliases": [
              "addr",
              "ip_address"
            ],
            "description": [
              "IP address."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the logical interface VPC member."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface_profile": {
            "aliases": [
              "interface_profile_name",
              "logical_interface"
            ],
            "description": [
              "Name of the interface profile."
            ],
            "type": "str"
          },
          "ipv6_dad": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "IPv6 DAD feature."
            ],
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "node_id": {
            "description": [
              "Hyphen separated pair of nodes (e.g. \"201-202\")"
            ],
            "type": "str"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "path_dn": {
            "description": [
              "DN of existing path endpoint (fabricPathEp)."
            ],
            "type": "str"
          },
          "path_ep": {
            "description": [
              "vPC Interface Policy Group name"
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "Pod to of the interface."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "side": {
            "choices": [
              "A",
              "B"
            ],
            "description": [
              "Provides the side of member."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_l3out_logical_interface_profile"
          },
          {
            "description": "More information about the internal APIC class B(l3ext:Out).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Member Node objects (l3extMember:Member)"
      },
      "examples": "\n- name: Create a VPC member based on the path_dn\n  cisco.aci.aci_l3out_logical_interface_vpc_member:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    l3out: l3out\n    node_profile: nodeName\n    interface_profile: interfaceName\n    path_dn: topology/pod-1/protpaths-101-102/pathep-[policy_group_name]\n    side: A\n    state: present\n  delegate_to: localhost\n\n- name: Create a VPC member based pod, node and path\n  cisco.aci.aci_l3out_logical_interface_vpc_member:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    l3out: l3out\n    node_profile: nodeName\n    interface_profile: interfaceName\n    pod_id: 1\n    node_id: 101-102\n    path_ep: policy_group_name\n    side: A\n    address: 192.168.1.252/24\n    state: present\n  delegate_to: localhost\n\n- name: Delete a VPC member\n  cisco.aci.aci_l3out_logical_interface_vpc_member:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    l3out: l3out\n    node_profile: nodeName\n    interface_profile: interfaceName\n    path_dn: topology/pod-1/protpaths-101-102/pathep-[policy_group_name]\n    side: A\n    state: absent\n  delegate_to: localhost\n\n- name: Query all VPC members\n  cisco.aci.aci_l3out_logical_interface_vpc_member:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a specific VPC member under l3out\n  cisco.aci.aci_l3out_logical_interface_vpc_member:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    l3out: l3out\n    node_profile: nodeName\n    interface_profile: interfaceName\n    path_dn: topology/pod-1/protpaths-101-102/pathep-[policy_group_name]\n    side: A\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_logical_node": {
      "doc": {
        "author": [
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind nodes to node profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_logical_node.py",
        "has_action": false,
        "module": "aci_l3out_logical_node",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "type": "str"
          },
          "node_id": {
            "description": [
              "Existing nodeId."
            ],
            "type": "int"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "Existing podId."
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "router_id": {
            "description": [
              "Router ID in dotted decimal notation."
            ],
            "type": "str"
          },
          "router_id_as_loopback": {
            "choices": [
              "yes",
              "no"
            ],
            "default": "yes",
            "description": [
              "Configure the router ID as a loopback IP."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l3out"
          },
          {
            "module": "aci_l3out_logical_node_profile"
          },
          {
            "description": "More information about the internal APIC classes B(vmm:DomP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 3 Outside (L3Out) logical node profile nodes (l3ext:RsNodeL3OutAtt)"
      },
      "examples": "\n- name: Add a new node to a node profile\n  cisco.aci.aci_l3out_logical_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    pod_id: 1\n    node_id: 111\n    router_id: 111.111.111.111\n    state: present\n  delegate_to: localhost\n\n- name: Delete a node from a node profile\n  cisco.aci.aci_l3out_logical_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    pod_id: 1\n    node_id: 111\n    state: absent\n  delegate_to: localhost\n\n- name: Query a node\n  cisco.aci.aci_l3out_logical_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    pod_id: 1\n    node_id: 111\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all nodes\n  cisco.aci.aci_l3out_logical_node:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_logical_node_profile": {
      "doc": {
        "author": [
          "Jason Juenger (@jasonjuenger)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Layer 3 Outside (L3Out) logical node profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_logical_node_profile.py",
        "has_action": false,
        "module": "aci_l3out_logical_node_profile",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the node profile."
            ],
            "type": "str"
          },
          "dscp": {
            "aliases": [
              "target_dscp"
            ],
            "choices": [
              "AF11",
              "AF12",
              "AF13",
              "AF21",
              "AF22",
              "AF23",
              "AF31",
              "AF32",
              "AF33",
              "AF41",
              "AF42",
              "AF43",
              "CS0",
              "CS1",
              "CS2",
              "CS3",
              "CS4",
              "CS5",
              "CS6",
              "CS7",
              "EF",
              "VA",
              "unspecified"
            ],
            "description": [
              "The target Differentiated Service (DSCP) value.",
              "The APIC defaults to C(unspecified) when unset during creation."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l3out"
          },
          {
            "description": "More information about the internal APIC classes B(vmm:DomP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Layer 3 Outside (L3Out) logical node profiles (l3extLNodeP:lnodep)"
      },
      "examples": "\n- name: Add a new node profile\n  cisco.aci.aci_l3out_logical_node_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    node_profile: my_node_profile\n    description: node profile for my_l3out\n    l3out: my_l3out\n    tenant: my_tenant\n    dscp: CS0\n    state: present\n  delegate_to: localhost\n\n- name: Delete a node profile\n  cisco.aci.aci_l3out_logical_node_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    node_profile: my_node_profile\n    l3out: my_l3out\n    tenant: my_tenant\n    state: absent\n  delegate_to: localhost\n\n- name: Query a node profile\n  cisco.aci.aci_l3out_logical_node_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    node_profile: my_node_profile\n    l3out: my_l3out\n    tenant: my_tenant\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all node profile for L3out\n  cisco.aci.aci_l3out_logical_node_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    l3out: my_l3out\n    tenant: my_tenant\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_route_tag_policy": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage route tag policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_route_tag_policy.py",
        "has_action": false,
        "module": "aci_l3out_route_tag_policy",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the route tag policy."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "rtp": {
            "aliases": [
              "name",
              "rtp_name"
            ],
            "description": [
              "The name of the route tag policy."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tag": {
            "description": [
              "The value of the route tag.",
              "Accepted values range between C(0) and C(4294967295).",
              "The APIC defaults to C(4294967295) when unset during creation."
            ],
            "type": "int"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(l3ext:RouteTagPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage route tag policies (l3ext:RouteTagPol)"
      },
      "examples": "\n- cisco.aci.aci_l3out_route_tag_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    rtp: '{{ rtp_name }}'\n    tenant: production\n    tag: '{{ tag }}'\n    description: '{{ description }}'\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_static_routes": {
      "doc": {
        "author": [
          "Anvitha Jain(@anvitha-jain)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage External Subnet objects (l3ext:ipRouteP)"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_static_routes.py",
        "has_action": false,
        "module": "aci_l3out_static_routes",
        "notes": [
          "The C(tenant), C(l3out), C(logical_node), C(fabric_node) and C(prefix) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) and M(cisco.aci.aci_l3out) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "bfd": {
            "choices": [
              "bfd",
              null
            ],
            "description": [
              "Determines if bfd is required for route control.",
              "The APIC defaults to C(null) when unset during creation."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the static routes."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "type": "str"
          },
          "logical_node": {
            "aliases": [
              "node_profile",
              "node_profile_name"
            ],
            "description": [
              "Name of an existing logical node profile."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "node_id": {
            "description": [
              "Existing nodeId."
            ],
            "type": "int"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "Existing podId."
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "preference": {
            "description": [
              "Administrative preference value for the route."
            ],
            "type": "int"
          },
          "prefix": {
            "aliases": [
              "route"
            ],
            "description": [
              "Configure IP and next hop IP for the routed outside network."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "track_policy": {
            "description": [
              "Relation definition for static route to TrackList."
            ],
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_l3out"
          },
          {
            "description": "More information about the internal APIC class B(l3ext:Out).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Static routes object (l3ext:ipRouteP)"
      },
      "examples": "\n- name: Create static routes\n  cisco.aci.aci_l3out_static_routes:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    l3out: l3out\n    logical_node: nodeName\n    node_id: 101\n    pod_id: 1\n    prefix: 10.10.0.0/16\n  delegate_to: localhost\n\n- name: Delete static routes\n  cisco.aci.aci_l3out_static_routes:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    l3out: l3out\n    logical_node: nodeName\n    node_id: 101\n    pod_id: 1\n    prefix: 10.10.0.0/16\n  delegate_to: localhost\n\n- name: Query for a specific MO under l3out\n  cisco.aci.aci_l3out_static_routes:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: tenantName\n    l3out: l3out\n    logical_node: nodeName\n    node_id: 101\n    pod_id: 1\n    prefix: 10.10.0.0/16\n  delegate_to: localhost\n\n- name: Query for all static routes\n  cisco.aci.aci_l3out_static_routes:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_l3out_static_routes_nexthop": {
      "doc": {
        "author": [
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage nexthops for static routes."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_l3out_static_routes_nexthop.py",
        "has_action": false,
        "module": "aci_l3out_static_routes_nexthop",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "l3out": {
            "aliases": [
              "l3out_name"
            ],
            "description": [
              "Name of an existing L3Out."
            ],
            "type": "str"
          },
          "nexthop": {
            "description": [
              "The nexthop for the prefix"
            ],
            "type": "str"
          },
          "node_id": {
            "description": [
              "Existing nodeId."
            ],
            "type": "int"
          },
          "node_profile": {
            "aliases": [
              "node_profile_name",
              "logical_node"
            ],
            "description": [
              "Name of the node profile."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "Existing podId."
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "prefix": {
            "aliases": [
              "route"
            ],
            "description": [
              "The IP prefix"
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "aci_l3out"
          },
          {
            "module": "aci_l3out_logical_node_profile"
          },
          {
            "module": "aci_l3out_logical_node_profile_to_node"
          },
          {
            "module": "aci_l3out_static_routes"
          },
          {
            "description": "More information about the internal APIC classes B(vmm:DomP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage nexthops for static routes (ip:NexthopP)"
      },
      "examples": "\n- name: Add a new nexthop to a prefix\n  cisco.aci.aci_l3out_static_routes_nexthop:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    pod_id: 1\n    node_id: 111\n    prefix: 10.84.90.0/24\n    nexthop: 10.1.1.1\n    state: present\n  delegate_to: localhost\n\n- name: Delete a nexthop from a prefix\n  cisco.aci.aci_l3out_static_routes_nexthop:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    pod_id: 1\n    node_id: 111\n    prefix: 10.84.90.0/24\n    nexthop: 10.1.1.1\n    state: absent\n  delegate_to: localhost\n\n- name: Query a nexthop\n  cisco.aci.aci_l3out_static_routes_nexthop:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: my_tenant\n    l3out: my_l3out\n    node_profile: my_node_profile\n    pod_id: 1\n    node_id: 111\n    prefix: 10.84.90.0/24\n    nexthop: 10.1.1.1\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all nexthops\n  cisco.aci.aci_l3out_static_routes_nexthop:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_maintenance_group": {
      "doc": {
        "author": [
          "Steven Gerhart (@sgerhart)"
        ],
        "collection": "cisco.aci",
        "description": [
          "This modules creates an ACI maintenance group"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_maintenance_group.py",
        "has_action": false,
        "module": "aci_maintenance_group",
        "notes": [
          "a maintenance policy (aci_maintenance_policy must be created prior to creating an aci maintenance group"
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "group": {
            "description": [
              "This is the name of the group"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy": {
            "description": [
              "This is the name of the policy that was created using aci_maintenance_policy"
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "This creates an ACI maintenance group"
      },
      "examples": "\n- name: maintenance group\n  cisco.aci.aci_maintenance_group:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ user }}\"\n    password: \"{{ pass }}\"\n    validate_certs: no\n    group: maintenancegrp1\n    policy: maintenancePol1\n    state: present\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_maintenance_group_node": {
      "doc": {
        "author": [
          "Steven Gerhart (@sgerhart)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage maintenance group nodes"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_maintenance_group_node.py",
        "has_action": false,
        "module": "aci_maintenance_group_node",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "group": {
            "description": [
              "The maintenance group name that you want to add the node to."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "node": {
            "description": [
              "The node to be added to the maintenance group.",
              "The value equals the nodeid."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage maintenance group nodes"
      },
      "examples": "\n- name: maintenance group\n  cisco.aci.aci_maintenance_group_node:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ user }}\"\n    password: \"{{ pass }}\"\n    validate_certs: no\n    group: maintenancegrp1\n    node: 1001\n    state: present\n\n- name: maintenance group\n  cisco.aci.aci_maintenance_group_node:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ user }}\"\n    password: \"{{ pass }}\"\n    validate_certs: no\n    group: maintenancegrp1\n    node: 1002\n    state: absent\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_maintenance_policy": {
      "doc": {
        "author": [
          "Steven Gerhart (@sgerhart)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage maintenance policies that defines behavior during an ACI upgrade."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_maintenance_policy.py",
        "has_action": false,
        "module": "aci_maintenance_policy",
        "notes": [
          "A scheduler is required for this module, which could have been created using the M(cisco.aci.aci_fabric_scheduler) module or via the UI."
        ],
        "options": {
          "adminst": {
            "choices": [
              "triggered",
              "untriggered"
            ],
            "default": "untriggered",
            "description": [
              "Will trigger an immediate upgrade for nodes if adminst is set to triggered."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "graceful": {
            "description": [
              "Whether the system will bring down the nodes gracefully during an upgrade, which reduces traffic lost.",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "ignoreCompat": {
            "description": [
              "To check whether compatibility checks should be ignored",
              "The APIC defaults to C(no) when unset during creation."
            ],
            "type": "bool"
          },
          "name": {
            "aliases": [
              "maintenance_policy"
            ],
            "description": [
              "The name for the maintenance policy."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "runmode": {
            "choices": [
              "pauseOnlyOnFailures",
              "pauseNever"
            ],
            "default": "pauseOnlyOnFailures",
            "description": [
              "Whether the system pauses on error or just continues through it."
            ],
            "type": "str"
          },
          "scheduler": {
            "description": [
              "The name of scheduler that is applied to the policy."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage firmware maintenance policies"
      },
      "examples": "\n- name: Ensure maintenance policy is present\n  cisco.aci.aci_maintenance_policy:\n    host: '{{ inventory_hostname }}'\n    username: '{{ user }}'\n    password: '{{ pass }}'\n    validate_certs: no\n    name: maintenancePol1\n    scheduler: simpleScheduler\n    runmode: False\n    state: present\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_node_mgmt_epg": {
      "doc": {
        "author": [
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Cisco ACI Fabric Node EPGs"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_node_mgmt_epg.py",
        "has_action": false,
        "module": "aci_node_mgmt_epg",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "bd": {
            "description": [
              "The in-band bridge domain which is used when type is in_band"
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "encap": {
            "description": [
              "The in-band access encapsulation which is used when type is in_band"
            ],
            "type": "str"
          },
          "epg": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the end point group"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "type": {
            "choices": [
              "in_band",
              "out_of_band"
            ],
            "description": [
              "type of management interface"
            ],
            "required": true,
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "In band or Out of band management EPGs"
      },
      "examples": "\n- name: Add in band mgmt epg\n  cisco.aci.aci_node_mgmt_epg:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    type: in_band\n    encap: vlan-1\n    bd: bd1\n    state: present\n  delegate_to: localhost\n\n- name: Add out of band mgmt epg\n  cisco.aci.aci_node_mgmt_epg:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    type: out_of_band\n    state: present\n  delegate_to: localhost\n\n- name: Query in band mgmt epg\n  cisco.aci.aci_node_mgmt_epg:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    type: in_band\n    encap: vlan-1\n    bd: bd1\n    state: query\n  delegate_to: localhost\n\n- name: Query all in band mgmt epg\n  cisco.aci.aci_node_mgmt_epg:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    type: in_band\n    state: query\n  delegate_to: localhost\n\n- name: Query all out of band mgmt epg\n  cisco.aci.aci_node_mgmt_epg:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    type: out_of_band\n    state: query\n  delegate_to: localhost\n\n- name: Remove in band mgmt epg\n  cisco.aci.aci_node_mgmt_epg:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    type: in_band\n    state: absent\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "class_map (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_rest": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)",
          "Cindy Zhao (@cizhao)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Enables the management of the Cisco ACI fabric through direct access to the Cisco APIC REST API.",
          "Thanks to the idempotent nature of the APIC, this module is idempotent and reports changes."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_rest.py",
        "has_action": false,
        "module": "aci_rest",
        "notes": [
          "Certain payloads are known not to be idempotent, so be careful when constructing payloads, e.g. using C(status=\"created\") will cause idempotency issues, use C(status=\"modified\") instead. More information in :ref:`the ACI documentation <aci_guide_known_issues>`.",
          "Certain payloads (and used paths) are known to report no changes happened when changes did happen. This is a known APIC problem and has been reported to the vendor. A workaround for this issue exists. More information in :ref:`the ACI documentation <aci_guide_known_issues>`.",
          "XML payloads require the C(lxml) and C(xmljson) python libraries. For JSON payloads nothing special is needed.",
          "If you do not have any attributes, it may be necessary to add the \"attributes\" key with an empty dictionnary \"{}\" for value as the APIC does expect the entry to precede any children."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "content": {
            "description": [
              "When used instead of C(src), sets the payload of the API request directly.",
              "This may be convenient to template simple requests.",
              "For anything complex use the C(template) lookup plugin (see examples) or the M(template) module with parameter C(src)."
            ],
            "type": "raw"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "method": {
            "aliases": [
              "action"
            ],
            "choices": [
              "delete",
              "get",
              "post"
            ],
            "default": "get",
            "description": [
              "The HTTP method of the request.",
              "Using C(delete) is typically used for deleting objects.",
              "Using C(get) is typically used for querying objects.",
              "Using C(post) is typically used for modifying objects."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "path": {
            "aliases": [
              "uri"
            ],
            "description": [
              "URI being used to execute API calls.",
              "Must end in C(.xml) or C(.json)."
            ],
            "required": true,
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "src": {
            "aliases": [
              "config_file"
            ],
            "description": [
              "Name of the absolute path of the filename that includes the body of the HTTP request being sent to the ACI fabric.",
              "If you require a templated payload, use the C(content) parameter together with the C(template) lookup plugin, or use M(template)."
            ],
            "type": "path"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "requirements": [
          "lxml (when using XML payload)",
          "xmljson >= 0.1.8 (when using XML payload)",
          "python 2.7+ (when using xmljson)"
        ],
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the APIC REST API.",
            "link": "http://www.cisco.com/c/en/us/td/docs/switches/datacenter/aci/apic/sw/2-x/rest_cfg/2_1_x/b_Cisco_APIC_REST_API_Configuration_Guide.html",
            "name": "Cisco APIC REST API Configuration Guide"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Direct access to the Cisco APIC REST API"
      },
      "examples": "\n- name: Add a tenant using certificate authentication\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    private_key: pki/admin.key\n    method: post\n    path: /api/mo/uni.xml\n    src: /home/cisco/ansible/aci/configs/aci_config.xml\n  delegate_to: localhost\n\n- name: Add a tenant from a templated payload file from templates/\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    private_key: pki/admin.key\n    method: post\n    path: /api/mo/uni.xml\n    content: \"{{ lookup('template', 'aci/tenant.xml.j2') }}\"\n  delegate_to: localhost\n\n- name: Add a tenant using inline YAML\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    private_key: pki/admin.key\n    validate_certs: no\n    path: /api/mo/uni.json\n    method: post\n    content:\n      fvTenant:\n        attributes:\n          name: Sales\n          descr: Sales department\n  delegate_to: localhost\n\n- name: Add a tenant using a JSON string\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    private_key: pki/admin.key\n    validate_certs: no\n    path: /api/mo/uni.json\n    method: post\n    content:\n      {\n        \"fvTenant\": {\n          \"attributes\": {\n            \"name\": \"Sales\",\n            \"descr\": \"Sales department\"\n          }\n        }\n      }\n  delegate_to: localhost\n\n- name: Add a tenant using an XML string\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    private_key: pki/{{ aci_username }}.key\n    validate_certs: no\n    path: /api/mo/uni.xml\n    method: post\n    content: '<fvTenant name=\"Sales\" descr=\"Sales departement\"/>'\n  delegate_to: localhost\n\n- name: Get tenants using password authentication\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    method: get\n    path: /api/node/class/fvTenant.json\n  delegate_to: localhost\n  register: query_result\n\n- name: Configure contracts\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    private_key: pki/admin.key\n    method: post\n    path: /api/mo/uni.xml\n    src: /home/cisco/ansible/aci/configs/contract_config.xml\n  delegate_to: localhost\n\n- name: Register leaves and spines\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    private_key: pki/admin.key\n    validate_certs: no\n    method: post\n    path: /api/mo/uni/controller/nodeidentpol.xml\n    content:\n      <fabricNodeIdentPol>\n        <fabricNodeIdentP name=\"{{ item.name }}\" nodeId=\"{{ item.nodeid }}\" status=\"{{ item.status }}\" serial=\"{{ item.serial }}\"/>\n      </fabricNodeIdentPol>\n  with_items:\n  - '{{ apic_leavesspines }}'\n  delegate_to: localhost\n\n- name: Wait for all controllers to become ready\n  cisco.aci.aci_rest:\n    host: apic\n    username: admin\n    private_key: pki/admin.key\n    validate_certs: no\n    path: /api/node/class/topSystem.json?query-target-filter=eq(topSystem.role,\"controller\")\n  register: apics\n  until: \"'totalCount' in apics and apics.totalCount|int >= groups['apic']|count\"\n  retries: 120\n  delay: 30\n  delegate_to: localhost\n  run_once: yes\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "error_code": {
          "description": "The REST ACI return code, useful for troubleshooting on failure",
          "returned": "always",
          "sample": 122,
          "type": "int"
        },
        "error_text": {
          "description": "The REST ACI descriptive text, useful for troubleshooting on failure",
          "returned": "always",
          "sample": "unknown managed object class foo",
          "type": "str"
        },
        "imdata": {
          "description": "Converted output returned by the APIC REST (register this for post-processing)",
          "returned": "always",
          "sample": [
            {
              "error": {
                "attributes": {
                  "code": "122",
                  "text": "unknown managed object class foo"
                }
              }
            }
          ],
          "type": "str"
        },
        "payload": {
          "description": "The (templated) payload send to the APIC REST API (xml or json)",
          "returned": "always",
          "sample": "<foo bar=\"boo\"/>",
          "type": "str"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "HTTP response string",
          "returned": "always",
          "sample": "HTTP Error 400: Bad Request",
          "type": "str"
        },
        "status": {
          "description": "HTTP status code",
          "returned": "always",
          "sample": 400,
          "type": "int"
        },
        "totalCount": {
          "description": "Number of items in the imdata array",
          "returned": "always",
          "sample": "0",
          "type": "str"
        },
        "url": {
          "description": "URL used for APIC REST call",
          "returned": "success",
          "sample": "https://1.2.3.4/api/mo/uni/tn-[Dag].json?rsp-subtree=modified",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_snmp_client": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage SNMP clients"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_snmp_client.py",
        "has_action": false,
        "module": "aci_snmp_client",
        "options": {
          "address": {
            "description": [
              "IP subnet to accept SNMP requests from"
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "client_group": {
            "aliases": [
              "client_group_name",
              "client_group_profile"
            ],
            "description": [
              "Name of an existing SNMP client group"
            ],
            "type": "str"
          },
          "client_name": {
            "description": [
              "Name of the SNMP client"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy": {
            "aliases": [
              "snmp_policy",
              "snmp_policy_name"
            ],
            "description": [
              "Name of an existing SNMP policy"
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(snmp:ClientP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage SNMP clients (snmp:ClientP)."
      },
      "examples": "\n- name: Create an SNMP client\n  cisco.aci.aci_snmp_client:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    client_group: my_snmp_client_group\n    address: 10.20.30.0/24\n    client_name: my_client_name\n    state: present\n  delegate_to: localhost\n\n- name: Remove an SNMP client\n  cisco.aci.aci_snmp_client_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    client_group: my_snmp_client_group\n    address: 10.20.30.0/24\n    state: absent\n  delegate_to: localhost\n\n- name: Query an SNMP client\n  cisco.aci.aci_snmp_client:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    client_group: my_snmp_client_group\n    address: 10.20.30.0/24\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all SNMP clients\n  cisco.aci.aci_snmp_client:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_snmp_client_group": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage SNMP client groups"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_snmp_client_group.py",
        "has_action": false,
        "module": "aci_snmp_client_group",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "client_group": {
            "aliases": [
              "client_group_name",
              "client_group_profile"
            ],
            "description": [
              "Name of the SNMP client group"
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the SNMP policy"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "mgmt_epg": {
            "aliases": [
              "management_epg_name",
              "management_epg"
            ],
            "description": [
              "Associated management EPG"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy": {
            "aliases": [
              "snmp_policy",
              "snmp_policy_name"
            ],
            "description": [
              "Name of an existing SNMP policy"
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(snmp:ClientGrpP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage SNMP client groups (snmp:ClientGrpP)."
      },
      "examples": "\n- name: Create an SNMP client group\n  cisco.aci.aci_snmp_client_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    client_group: my_snmp_client_group\n    mgmt_epg: oob-default\n    state: present\n  delegate_to: localhost\n\n- name: Remove an SNMP client group\n  cisco.aci.aci_snmp_client_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    client_group: my_snmp_client_group\n    state: absent\n  delegate_to: localhost\n\n- name: Query an SNMP client group\n  cisco.aci.aci_snmp_client_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    client_group: my_snmp_client_group\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all SNMP client group\n  cisco.aci.aci_snmp_community_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_snmp_community_policy": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage SNMP community policies"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_snmp_community_policy.py",
        "has_action": false,
        "module": "aci_snmp_community_policy",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "community": {
            "description": [
              "Name of the SNMP community policy"
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the SNMP policy"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy": {
            "aliases": [
              "snmp_policy",
              "snmp_policy_name"
            ],
            "description": [
              "Name of an existing SNMP policy"
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(snmp:CommunityP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage SNMP community policies (snmp:CommunityP)."
      },
      "examples": "\n- name: Create an SNMP community policy\n  cisco.aci.aci_snmp_community_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    community: my_snmp_community\n    state: present\n  delegate_to: localhost\n\n- name: Remove an SNMP community policy\n  cisco.aci.aci_snmp_community_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    community: my_snmp_community\n    state: absent\n  delegate_to: localhost\n\n- name: Query an SNMP community policy\n  cisco.aci.aci_snmp_community_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    community: my_snmp_community\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all SNMP community policies\n  cisco.aci.aci_snmp_community_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_snmp_policy": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage syslog policies"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_snmp_policy.py",
        "has_action": false,
        "module": "aci_snmp_policy",
        "options": {
          "admin_state": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "Administrative State of the policy"
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contact": {
            "description": [
              "SNMP contact"
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the SNMP policy"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "location": {
            "description": [
              "SNMP location"
            ],
            "type": "str"
          },
          "name": {
            "aliases": [
              "snmp_policy",
              "snmp_policy_name"
            ],
            "description": [
              "Name of the SNMP policy"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(snmp:Pol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Syslog groups (snmp:Pol)."
      },
      "examples": "\n- name: Create an SNMP policy and Set Admin State to Enable\n  cisco.aci.aci_snmp_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    validate_certs: no\n    admin_state: enabled\n    name: my_snmp_policy\n    state: present\n  delegate_to: localhost\n\n- name: Remove an SNMP policy\n  cisco.aci.aci_snmp_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_snmp_policy\n    state: absent\n  delegate_to: localhost\n\n- name: Query an SNMP policy\n  cisco.aci.aci_snmp_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_snmp_policy\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all SNMP policies\n  cisco.aci.aci_snmp_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_snmp_user": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage SNMP v3 Users",
          "Note that all properties within the snmpUserP class are Create-only. To modify any property of an existing user, you must delete and re-create it."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_snmp_user.py",
        "has_action": false,
        "module": "aci_snmp_user",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "auth_key": {
            "description": [
              "SNMP authentication key"
            ],
            "type": "str"
          },
          "auth_type": {
            "choices": [
              "hmac-md5-96",
              "hmac-sha1-96"
            ],
            "description": [
              "SNMP authentication method"
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "snmp_user_policy"
            ],
            "description": [
              "Name of the SNMP user policy"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy": {
            "aliases": [
              "snmp_policy",
              "snmp_policy_name"
            ],
            "description": [
              "Name of an existing SNMP policy"
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "privacy_key": {
            "description": [
              "SNMP privacy key"
            ],
            "type": "str"
          },
          "privacy_type": {
            "choices": [
              "aes-128",
              "des",
              "none"
            ],
            "description": [
              "SNMP privacy type"
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(snmp:UserP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage SNMP v3 Users (snmp:UserP)."
      },
      "examples": "\n- name: Create an SNMP user\n  cisco.aci.aci_snmp_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    name: my_snmp_user\n    auth_type: hmac-sha1-96\n    auth_key: \"{{ hmac_key }}\"\n    state: present\n  delegate_to: localhost\n\n- name: Create an SNMP user with both authentication and privacy\n  cisco.aci.aci_snmp_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    name: my_snmp_user\n    auth_type: hmac-sha1-96\n    auth_key: \"{{ hmac_key }}\"\n    privacy_type: aes-128\n    privacy_key: \"{{ aes_key }}\"\n    state: present\n  delegate_to: localhost\n\n- name: Remove an SNMP user\n  cisco.aci.aci_snmp_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    name: my_snmp_user\n    state: absent\n  delegate_to: localhost\n\n- name: Query an SNMP user\n  cisco.aci.aci_snmp_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    policy: my_snmp_policy\n    name: my_snmp_user\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all SNMP users\n  cisco.aci.aci_snmp_user:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_static_binding_to_epg": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)",
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind static paths to EPGs on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_static_binding_to_epg.py",
        "has_action": false,
        "module": "aci_static_binding_to_epg",
        "notes": [
          "The C(tenant), C(ap), C(epg) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant), M(cisco.aci.aci_ap), M(cisco.aci.aci_epg) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "ap": {
            "aliases": [
              "app_profile",
              "app_profile_name"
            ],
            "description": [
              "Name of an existing application network profile, that will contain the EPGs."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "deploy_immediacy": {
            "choices": [
              "immediate",
              "lazy"
            ],
            "description": [
              "The Deployment Immediacy of Static EPG on PC, VPC or Interface.",
              "The APIC defaults to C(lazy) when unset during creation."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the static path to EPG binding."
            ],
            "type": "str"
          },
          "encap_id": {
            "aliases": [
              "vlan",
              "vlan_id"
            ],
            "description": [
              "The encapsulation ID associating the C(epg) with the interface path.",
              "This acts as the secondary C(encap_id) when using micro-segmentation.",
              "Accepted values are any valid encap ID for specified encap, currently ranges between C(1) and C(4096)."
            ],
            "type": "int"
          },
          "epg": {
            "aliases": [
              "epg_name"
            ],
            "description": [
              "The name of the end point group."
            ],
            "type": "str"
          },
          "extpaths": {
            "description": [
              "The C(extpaths) integer value part of the tDn.",
              "C(extpaths) is only used if C(interface_type) is C(fex), C(fex_vpc) or C(fex_port_channel).",
              "When C(interface_type) is C(fex_vpc), then C(extpaths) is a list with both fex IDs.",
              "Usually something like C(1011)."
            ],
            "elements": "str",
            "type": "list"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "interface": {
            "description": [
              "The C(interface) string value part of the tDn.",
              "Usually a policy group like C(test-IntPolGrp) or an interface of the following format C(1/7) depending on C(interface_type)."
            ],
            "type": "str"
          },
          "interface_mode": {
            "aliases": [
              "interface_mode_name",
              "mode"
            ],
            "choices": [
              "802.1p",
              "access",
              "native",
              "regular",
              "tagged",
              "trunk",
              "untagged"
            ],
            "description": [
              "Determines how layer 2 tags will be read from and added to frames.",
              "Values C(802.1p) and C(native) are identical.",
              "Values C(access) and C(untagged) are identical.",
              "Values C(regular), C(tagged) and C(trunk) are identical.",
              "The APIC defaults to C(trunk) when unset during creation."
            ],
            "type": "str"
          },
          "interface_type": {
            "choices": [
              "fex",
              "port_channel",
              "switch_port",
              "vpc",
              "fex_port_channel",
              "fex_vpc"
            ],
            "default": "switch_port",
            "description": [
              "The type of interface for the static EPG deployment."
            ],
            "type": "str"
          },
          "leafs": {
            "aliases": [
              "leaves",
              "nodes",
              "paths",
              "switches"
            ],
            "description": [
              "The switch ID(s) that the C(interface) belongs to.",
              "When C(interface_type) is C(switch_port), C(port_channel), or C(fex), then C(leafs) is a string of the leaf ID.",
              "When C(interface_type) is C(vpc), then C(leafs) is a list with both leaf IDs.",
              "The C(leafs) value is usually something like '101' or '101-102' depending on C(connection_type)."
            ],
            "elements": "str",
            "type": "list"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "aliases": [
              "pod",
              "pod_number"
            ],
            "description": [
              "The pod number part of the tDn.",
              "C(pod_id) is usually an integer below C(10)."
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "primary_encap_id": {
            "aliases": [
              "primary_vlan",
              "primary_vlan_id"
            ],
            "description": [
              "Determines the primary encapsulation ID associating the C(epg) with the interface path when using micro-segmentation.",
              "Accepted values are any valid encap ID for specified encap, currently ranges between C(1) and C(4096) and C(unknown.",
              "C(unknown) is the default value and using C(unknown) disables the Micro-Segmentation."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "Name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_ap"
          },
          {
            "module": "cisco.aci.aci_epg"
          },
          {
            "description": "More information about the internal APIC class B(fv:RsPathAtt).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind static paths to EPGs (fv:RsPathAtt)"
      },
      "examples": "\n- name: Deploy Static Path binding for given EPG\n  cisco.aci.aci_static_binding_to_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: accessport-code-cert\n    ap: accessport_code_app\n    epg: accessport_epg1\n    encap_id: 222\n    deploy_immediacy: lazy\n    interface_mode: untagged\n    interface_type: switch_port\n    pod_id: 1\n    leafs: 101\n    interface: '1/7'\n    state: present\n  delegate_to: localhost\n\n- name: Remove Static Path binding for given EPG\n  cisco.aci.aci_static_binding_to_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: accessport-code-cert\n    ap: accessport_code_app\n    epg: accessport_epg1\n    interface_type: switch_port\n    pod: 1\n    leafs: 101\n    interface: '1/7'\n    state: absent\n  delegate_to: localhost\n\n- name: Get specific Static Path binding for given EPG\n  cisco.aci.aci_static_binding_to_epg:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: accessport-code-cert\n    ap: accessport_code_app\n    epg: accessport_epg1\n    interface_type: switch_port\n    pod: 1\n    leafs: 101\n    interface: '1/7'\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_static_node_mgmt_address": {
      "doc": {
        "author": [
          "Sudhakar Shet Kudtarkar (@kudtarkar1)",
          "Lionel Hercot (@lhercot)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Cisco ACI Fabric Node IP address"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_static_node_mgmt_address.py",
        "has_action": false,
        "module": "aci_static_node_mgmt_address",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "epg": {
            "description": [
              "The name of the end point group"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "ipv4_address": {
            "aliases": [
              "ip"
            ],
            "description": [
              "ipv4 address of in band/out of band mgmt"
            ],
            "type": "str"
          },
          "ipv4_gw": {
            "aliases": [
              "gw"
            ],
            "description": [
              "Gateway address of in band / out of band mgmt network"
            ],
            "type": "str"
          },
          "ipv6_address": {
            "aliases": [
              "ipv6"
            ],
            "description": [
              "ipv6 address of in band/out of band  mgmt"
            ],
            "type": "str"
          },
          "ipv6_gw": {
            "description": [
              "GW address of in band/out of band mgmt"
            ],
            "type": "str"
          },
          "node_id": {
            "description": [
              "ACI Fabric's node id of a leaf, spine or APIC"
            ],
            "type": "int"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pod_id": {
            "description": [
              "The pod number of the leaf, spine or APIC"
            ],
            "type": "int"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "type": {
            "choices": [
              "in_band",
              "out_of_band"
            ],
            "description": [
              "type of management interface"
            ],
            "required": true,
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "In band or Out of band management IP address"
      },
      "examples": "\n- name: Add ipv4 address to in band mgmt interface\n  cisco.aci.aci_static_node_mgmt_address:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    pod_id: 1\n    type: in_band\n    node_id: 1102\n    ipv4_address: \"3.1.1.2/24\"\n    ipv4_gw: \"3.1.1.1\"\n    state: present\n  delegate_to: localhost\n\n- name: Add ipv4 address to out of band mgmt interface\n  cisco.aci.aci_static_node_mgmt_address:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    pod_id: 1\n    band_type: out_of_band\n    node_id: 1102\n    ipv4_address: \"3.1.1.2/24\"\n    ipv4_gw: \"3.1.1.1\"\n    state: present\n  delegate_to: localhost\n\n- name: Remove ipv4 address to in band mgmt interface\n  cisco.aci.aci_static_node_mgmt_address:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    pod_id: 1\n    type: in_band\n    node_id: 1102\n    ipv4_address: \"3.1.1.2/24\"\n    ipv4_gw: \"3.1.1.1\"\n    state: absent\n  delegate_to: localhost\n\n- name: Query the in band mgmt ipv4 address\n  cisco.aci.aci_static_node_mgmt_address:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    pod_id: 1\n    type: in_band\n    node_id: 1102\n    ipv4_address: \"3.1.1.2/24\"\n    ipv4_gw: \"3.1.1.1\"\n    state: query\n  delegate_to: localhost\n\n- name: Query all addresses in epg out of band25wf\n  cisco.aci.aci_static_node_mgmt_address:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    epg: default\n    type: out_of_band\n    state: query\n  delegate_to: localhost\n\n- name: Query all in band addresses\n  cisco.aci.aci_static_node_mgmt_address:\n    host: \"Host IP\"\n    username: admin\n    password: SomeSecretePassword\n    type: in_band\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class \"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "class_map (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_switch_leaf_selector": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind leaf selectors (with node block range and policy group) to switch policy leaf profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_switch_leaf_selector.py",
        "has_action": false,
        "module": "aci_switch_leaf_selector",
        "notes": [
          "This module is to be used with M(cisco.aci.aci_switch_policy_leaf_profile). One first creates a leaf profile (infra:NodeP) and then creates an associated selector (infra:LeafS),"
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "The description to assign to the C(leaf)."
            ],
            "type": "str"
          },
          "from": {
            "aliases": [
              "node_blk_range_from",
              "from_range",
              "range_from"
            ],
            "description": [
              "Start of Node Block range."
            ],
            "type": "int"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "leaf": {
            "aliases": [
              "name",
              "leaf_name",
              "leaf_profile_leaf_name",
              "leaf_selector_name"
            ],
            "description": [
              "Name of Leaf Selector."
            ],
            "type": "str"
          },
          "leaf_node_blk": {
            "aliases": [
              "leaf_node_blk_name",
              "node_blk_name"
            ],
            "description": [
              "Name of Node Block range to be added to Leaf Selector of given Leaf Profile."
            ],
            "type": "str"
          },
          "leaf_node_blk_description": {
            "description": [
              "The description to assign to the C(leaf_node_blk)"
            ],
            "type": "str"
          },
          "leaf_profile": {
            "aliases": [
              "leaf_profile_name"
            ],
            "description": [
              "Name of the Leaf Profile to which we add a Selector."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy_group": {
            "aliases": [
              "name",
              "policy_group_name"
            ],
            "description": [
              "Name of the Policy Group to be added to Leaf Selector of given Leaf Profile."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "to": {
            "aliases": [
              "node_blk_range_to",
              "to_range",
              "range_to"
            ],
            "description": [
              "Start of Node Block range."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_switch_policy_leaf_profile"
          },
          {
            "description": "More information about the internal APIC classes B(infra:LeafS), B(infra:NodeBlk) and B(infra:RsAccNodePGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind leaf selectors to switch policy leaf profiles (infra:LeafS, infra:NodeBlk, infra:RsAccNodePGrep)"
      },
      "examples": "\n- name: adding a switch policy leaf profile selector associated Node Block range (w/ policy group)\n  cisco.aci.aci_switch_leaf_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    leaf: leaf_selector_name\n    leaf_node_blk: node_blk_name\n    from: 1011\n    to: 1011\n    policy_group: somepolicygroupname\n    state: present\n  delegate_to: localhost\n\n- name: adding a switch policy leaf profile selector associated Node Block range (w/o policy group)\n  cisco.aci.aci_switch_leaf_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    leaf: leaf_selector_name\n    leaf_node_blk: node_blk_name\n    from: 1011\n    to: 1011\n    state: present\n  delegate_to: localhost\n\n- name: Removing a switch policy leaf profile selector\n  cisco.aci.aci_switch_leaf_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    leaf: leaf_selector_name\n    state: absent\n  delegate_to: localhost\n\n- name: Querying a switch policy leaf profile selector\n  cisco.aci.aci_switch_leaf_selector:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    leaf: leaf_selector_name\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_switch_policy_leaf_profile": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage switch policy leaf profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_switch_policy_leaf_profile.py",
        "has_action": false,
        "module": "aci_switch_policy_leaf_profile",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the Leaf Profile."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "leaf_profile": {
            "aliases": [
              "leaf_profile_name",
              "name"
            ],
            "description": [
              "The name of the Leaf Profile."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_switch_policy_leaf_profile"
          },
          {
            "description": "More information about the internal APIC class B(infra:NodeP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage switch policy leaf profiles (infra:NodeP)"
      },
      "examples": "\n- name: creating a Leaf Profile with description\n  cisco.aci.aci_switch_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    description: sw_description\n    state: present\n  delegate_to: localhost\n\n- name: Deleting a Leaf Profile\n  cisco.aci.aci_switch_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    state: absent\n  delegate_to: localhost\n\n- name: Query a Leaf Profile\n  cisco.aci.aci_switch_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    leaf_profile: sw_name\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_switch_policy_vpc_protection_group": {
      "doc": {
        "author": [
          "Bruno Calogero (@brunocalogero)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage switch policy explicit vPC protection groups on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_switch_policy_vpc_protection_group.py",
        "has_action": false,
        "module": "aci_switch_policy_vpc_protection_group",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "protection_group": {
            "aliases": [
              "name",
              "protection_group_name"
            ],
            "description": [
              "The name of the Explicit vPC Protection Group."
            ],
            "type": "str"
          },
          "protection_group_id": {
            "aliases": [
              "id"
            ],
            "description": [
              "The Explicit vPC Protection Group ID."
            ],
            "type": "int"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "switch_1_id": {
            "description": [
              "The ID of the first Leaf Switch for the Explicit vPC Protection Group."
            ],
            "type": "int"
          },
          "switch_2_id": {
            "description": [
              "The ID of the Second Leaf Switch for the Explicit vPC Protection Group."
            ],
            "type": "int"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vpc_domain_policy": {
            "aliases": [
              "vpc_domain_policy_name"
            ],
            "description": [
              "The vPC domain policy to be associated with the Explicit vPC Protection Group."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_switch_policy_leaf_profile"
          },
          {
            "description": "More information about the internal APIC classes B(fabric:ExplicitGEp) and B(fabric:NodePEp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage switch policy explicit vPC protection groups (fabric:ExplicitGEp, fabric:NodePEp)."
      },
      "examples": "\n- name: Add vPC Protection Group\n  cisco.aci.aci_switch_policy_vpc_protection_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    protection_group: leafPair101-vpcGrp\n    protection_group_id: 6\n    switch_1_id: 1011\n    switch_2_id: 1012\n    state: present\n  delegate_to: localhost\n\n- name: Remove Explicit vPC Protection Group\n  cisco.aci.aci_switch_policy_vpc_protection_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    protection_group: leafPair101-vpcGrp\n    state: absent\n  delegate_to: localhost\n\n- name: Query vPC Protection Groups\n  cisco.aci.aci_switch_policy_vpc_protection_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query our vPC Protection Group\n  cisco.aci.aci_switch_policy_vpc_protection_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    protection_group: leafPair101-vpcGrp\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_syslog_group": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage syslog groups"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_syslog_group.py",
        "has_action": false,
        "module": "aci_syslog_group",
        "options": {
          "admin_state": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "Administrative state of the syslog group"
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "console_log_severity": {
            "choices": [
              "alerts",
              "critical",
              "debugging",
              "emergencies",
              "error",
              "information",
              "notifications",
              "warnings"
            ],
            "description": [
              "Severity of events to log to console"
            ],
            "type": "str"
          },
          "console_logging": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "Log events to console"
            ],
            "type": "str"
          },
          "format": {
            "choices": [
              "aci",
              "nxos"
            ],
            "description": [
              "Format of the syslog messages. If omitted when creating a group, ACI defaults to using aci format."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "include_ms": {
            "description": [
              "Include milliseconds in log timestamps"
            ],
            "type": "bool"
          },
          "include_time_zone": {
            "description": [
              "Include timezone in log timestamps"
            ],
            "type": "bool"
          },
          "local_file_log_severity": {
            "choices": [
              "alerts",
              "critical",
              "debugging",
              "emergencies",
              "error",
              "information",
              "notifications",
              "warnings"
            ],
            "description": [
              "Severity of events to log to local file"
            ],
            "type": "str"
          },
          "local_file_logging": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "Log to local file"
            ],
            "type": "str"
          },
          "name": {
            "aliases": [
              "syslog_group",
              "syslog_group_name"
            ],
            "description": [
              "Name of the syslog group"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(syslog:Group).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Syslog groups (syslog:Group, syslog:Console, syslog:File and syslog:Prof)."
      },
      "examples": "\n- name: Create a syslog group\n  cisco.aci.aci_syslog_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_syslog_group\n    local_file_logging: enabled\n    local_file_log_severity: warnings\n    console_logging: enabled\n    console_log_severity: critical\n    state: present\n  delegate_to: localhost\n\n- name: Disable logging to local file\n  cisco.aci.aci_syslog_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_syslog_group\n    local_file_logging: disabled\n    state: present\n  delegate_to: localhost\n\n- name: Remove a syslog group\n  cisco.aci.aci_syslog_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_syslog_group\n    state: absent\n  delegate_to: localhost\n\n- name: Query a syslog group\n  cisco.aci.aci_syslog_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_syslog_group\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all syslog groups\n  cisco.aci.aci_syslog_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_syslog_remote_dest": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage remote destinations for syslog messages within an existing syslog group object"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_syslog_remote_dest.py",
        "has_action": false,
        "module": "aci_syslog_remote_dest",
        "options": {
          "admin_state": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "Administrative state of the syslog remote destination"
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "description": [
              "Description of the remote destination"
            ],
            "type": "str"
          },
          "destination": {
            "description": [
              "Hostname or IP address to send syslog messages to"
            ],
            "type": "str"
          },
          "facility": {
            "choices": [
              "local0",
              "local1",
              "local2",
              "local3",
              "local4",
              "local5",
              "local6",
              "local7"
            ],
            "description": [
              "Forwarding facility for syslog messages"
            ],
            "type": "str"
          },
          "format": {
            "choices": [
              "aci",
              "nxos"
            ],
            "description": [
              "Format of the syslog messages"
            ],
            "type": "str"
          },
          "group": {
            "aliases": [
              "syslog_group",
              "syslog_group_name"
            ],
            "description": [
              "Name of an existing syslog group"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "mgmt_epg": {
            "description": [
              "Name of a management EPG to send syslog messages from"
            ],
            "type": "str"
          },
          "name": {
            "aliases": [
              "remote_destination_name",
              "remote_destination"
            ],
            "description": [
              "Name of the syslog remote destination"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "severity": {
            "choices": [
              "alerts",
              "critical",
              "debugging",
              "emergencies",
              "error",
              "information",
              "notifications",
              "warnings"
            ],
            "description": [
              "Severity of messages to send to remote syslog"
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "syslog_port": {
            "description": [
              "UDP port to send syslog messages to"
            ],
            "type": "int"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC classes B(syslog:RemoteDest).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Syslog Remote Destinations (syslog:RemoteDest)."
      },
      "examples": "\n- name: Create a syslog remote destination\n  cisco.aci.aci_syslog_remote_dest:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    group: my_syslog_group\n    facility: local7\n    destination: 10.20.30.40\n    syslog_port: 5678\n    mgmt_epg: oob-default\n    state: present\n  delegate_to: localhost\n\n- name: Delete syslog remote destination\n  cisco.aci.aci_syslog_remote_dest:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    group: my_syslog_group\n    destination: 10.20.30.40\n    state: absent\n  delegate_to: localhost\n\n- name: Query a syslog remote destination\n  cisco.aci.aci_syslog_remote_dest:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    group: my_syslog_group\n    destination: 10.20.30.40\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all syslog remote destinations\n  cisco.aci.aci_syslog_remote_dest:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_syslog_source": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage Syslog Source objects"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_syslog_source.py",
        "has_action": false,
        "module": "aci_syslog_source",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "destination_group": {
            "description": [
              "Name of an existing syslog group"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "include": {
            "choices": [
              "audit",
              "events",
              "faults",
              "session"
            ],
            "description": [
              "List of message types to include"
            ],
            "elements": "str",
            "type": "list"
          },
          "min_severity": {
            "choices": [
              "alerts",
              "critical",
              "debugging",
              "emergencies",
              "errors",
              "information",
              "notifications",
              "warnings"
            ],
            "description": [
              "Minimum Severity of message to include"
            ],
            "type": "str"
          },
          "name": {
            "aliases": [
              "syslog_src",
              "syslog_source"
            ],
            "description": [
              "Name of the Syslog Source policy"
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the internal APIC class B(syslog:Src).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage Syslog Source objects (syslog:Src)"
      },
      "examples": "\n- name: Add a new syslog source\n  cisco.aci.aci_syslog_source:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_syslog_src\n    include:\n      - audit\n      - events\n      - faults\n    min_severity: errors\n    destination_group: my_syslog_group\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing syslog source\n  cisco.aci.aci_syslog_source:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_syslog_src\n    state: absent\n  delegate_to: localhost\n\n- name: Query all syslog sources\n  cisco.aci.aci_syslog_source:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a specific syslog source\n  cisco.aci.aci_syslog_source:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    name: my_syslog_src\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_system": {
      "doc": {
        "author": [
          "Lionel Hercot (@lhercot)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Query the ACI system information (top:System) on Cisco ACI."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_system.py",
        "has_action": false,
        "module": "aci_system",
        "notes": [
          "More information about the internal APIC class B(top:System) from L(the APIC Management Information Model reference,https://developer.cisco.com/docs/apic-mim-ref/).",
          "This module is used to query system information for both cloud and on-premises controllers."
        ],
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "id": {
            "aliases": [
              "controller",
              "node"
            ],
            "description": [
              "The controller node ID"
            ],
            "type": "int"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "query"
            ],
            "default": "query",
            "description": [
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Query the ACI system information (top:System)"
      },
      "examples": "\n- name: Query all controllers system information\n  cisco.aci.aci_system:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    state: query\n  delegate_to: localhost\n\n- name: Query controller 1 specific system information\n  cisco.aci.aci_system:\n    host: apic\n    username: userName\n    password: somePassword\n    validate_certs: no\n    id: 1\n    state: query\n  delegate_to: localhost\n",
      "metadata": null,
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_taboo_contract": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage taboo contracts on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_taboo_contract.py",
        "has_action": false,
        "module": "aci_taboo_contract",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the Taboo Contract."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "scope": {
            "choices": [
              "application-profile",
              "context",
              "global",
              "tenant"
            ],
            "description": [
              "The scope of a service contract.",
              "The APIC defaults to C(context) when unset during creation."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "taboo_contract": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the Taboo Contract."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(vz:BrCP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage taboo contracts (vz:BrCP)"
      },
      "examples": "\n- name: Add taboo contract\n  cisco.aci.aci_taboo_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: ansible_test\n    taboo_contract: taboo_contract_test\n    state: present\n  delegate_to: localhost\n\n- name: Remove taboo contract\n  cisco.aci.aci_taboo_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: ansible_test\n    taboo_contract: taboo_contract_test\n    state: absent\n  delegate_to: localhost\n\n- name: Query all taboo contracts\n  cisco.aci.aci_taboo_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a specific taboo contract\n  cisco.aci.aci_taboo_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: ansible_test\n    taboo_contract: taboo_contract_test\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_tag": {
      "doc": {
        "author": [
          "Akini Ross (@akinross)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Tagging a object on Cisco ACI fabric."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_tag.py",
        "has_action": false,
        "module": "aci_tag",
        "notes": [
          "The ACI object must exist before using this module in your playbook.",
          "CAVEAT - Due to deprecation of the 'tagInst' object, creating a tag with tag_type 'instance' automatically generates a 'annotation' tag_type tag with an empty value. When deleting a tag_type 'instance', the 'tagAnnotation' object will remain present and needs to be deleted separately."
        ],
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "dn": {
            "description": [
              "Unique Distinguished Name (DN) from ACI object model."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tag_key": {
            "description": [
              "Unique identifier of tag object."
            ],
            "type": "str"
          },
          "tag_type": {
            "choices": [
              "annotation",
              "instance",
              "tag"
            ],
            "description": [
              "Type of tag object."
            ],
            "required": true,
            "type": "str"
          },
          "tag_value": {
            "description": [
              "Value of the property."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "description": "More information about the tagging can be found in the Cisco APIC System Management Configuration Guide.",
            "link": "https://www.cisco.com/c/en/us/support/cloud-systems-management/application-policy-infrastructure-controller-apic/tsd-products-support-series-home.html",
            "name": "Cisco APIC System Management Configuration Guide"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Tagging of ACI objects"
      },
      "examples": "\n- name: Add a new annotation tag\n  cisco.aci.aci_tag:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dn: SomeValidAciDN\n    tag_key: foo\n    tag_value: bar\n    tag_type: annotation\n    state: present\n  delegate_to: localhost\n- name: Delete annotation tag\n  cisco.aci.aci_tag:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dn: SomeValidAciDN\n    tag_key: foo\n    tag_type: annotation\n    state: absent\n  delegate_to: localhost\n- name: Query annotation tag\n  cisco.aci.aci_tag:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    dn: SomeValidAciDN\n    tag_key: foo\n    tag_type: annotation\n    state: query\n  delegate_to: localhost\n- name: Query annotation tags\n  cisco.aci.aci_tag:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tag_type: annotation\n    state: query\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_tenant": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage tenants on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_tenant.py",
        "has_action": false,
        "module": "aci_tenant",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the tenant."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "name",
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_ap"
          },
          {
            "module": "cisco.aci.aci_bd"
          },
          {
            "module": "cisco.aci.aci_contract"
          },
          {
            "module": "cisco.aci.aci_filter"
          },
          {
            "module": "cisco.aci.aci_vrf"
          },
          {
            "description": "More information about the internal APIC class B(fv:Tenant).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage tenants (fv:Tenant)"
      },
      "examples": "\n- name: Add a new tenant\n  cisco.aci.aci_tenant:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    description: Production tenant\n    state: present\n  delegate_to: localhost\n\n- name: Remove a tenant\n  cisco.aci.aci_tenant:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    state: absent\n  delegate_to: localhost\n\n- name: Query a tenant\n  cisco.aci.aci_tenant:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all tenants\n  cisco.aci.aci_tenant:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_tenant_action_rule_profile": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage action rule profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_tenant_action_rule_profile.py",
        "has_action": false,
        "module": "aci_tenant_action_rule_profile",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "action_rule": {
            "aliases": [
              "action_rule_name",
              "name"
            ],
            "description": [
              "The name of the action rule profile."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the action rule profile."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(rtctrl:AttrP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage action rule profiles (rtctrl:AttrP)"
      },
      "examples": "\n- cisco.aci.aci_tenant_action_rule_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    action_rule: '{{ action_rule }}'\n    description: '{{ descr }}'\n    tenant: '{{ tenant }}'\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_tenant_ep_retention_policy": {
      "doc": {
        "author": [
          "Swetha Chunduri (@schunduri)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage End Point (EP) retention protocol policies on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_tenant_ep_retention_policy.py",
        "has_action": false,
        "module": "aci_tenant_ep_retention_policy",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "bounce_age": {
            "description": [
              "Bounce entry aging interval in seconds.",
              "Accepted values range between C(150) and C(65535); 0 is used for infinite.",
              "The APIC defaults to C(630) when unset during creation."
            ],
            "type": "int"
          },
          "bounce_trigger": {
            "choices": [
              "coop",
              "flood"
            ],
            "description": [
              "Determines if the bounce entries are installed by RARP Flood or COOP Protocol.",
              "The APIC defaults to C(coop) when unset during creation."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the End point retention policy."
            ],
            "type": "str"
          },
          "epr_policy": {
            "aliases": [
              "epr_name",
              "name"
            ],
            "description": [
              "The name of the end point retention policy."
            ],
            "type": "str"
          },
          "hold_interval": {
            "description": [
              "Hold interval in seconds.",
              "Accepted values range between C(5) and C(65535).",
              "The APIC defaults to C(300) when unset during creation."
            ],
            "type": "int"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "local_ep_interval": {
            "description": [
              "Local end point aging interval in seconds.",
              "Accepted values range between C(120) and C(65535); 0 is used for infinite.",
              "The APIC defaults to C(900) when unset during creation."
            ],
            "type": "int"
          },
          "move_frequency": {
            "description": [
              "Move frequency per second.",
              "Accepted values range between C(0) and C(65535); 0 is used for none.",
              "The APIC defaults to C(256) when unset during creation."
            ],
            "type": "int"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "remote_ep_interval": {
            "description": [
              "Remote end point aging interval in seconds.",
              "Accepted values range between C(120) and C(65535); 0 is used for infinite.",
              "The APIC defaults to C(300) when unset during creation."
            ],
            "type": "int"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of an existing tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(fv:EpRetPol).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage End Point (EP) retention protocol policies (fv:EpRetPol)"
      },
      "examples": "\n- name: Add a new EPR policy\n  cisco.aci.aci_tenant_ep_retention_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    epr_policy: EPRPol1\n    bounce_age: 630\n    hold_interval: 300\n    local_ep_interval: 900\n    remote_ep_interval: 300\n    move_frequency: 256\n    description: test\n    state: present\n  delegate_to: localhost\n\n- name: Remove an EPR policy\n  cisco.aci.aci_tenant_ep_retention_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    epr_policy: EPRPol1\n    state: absent\n  delegate_to: localhost\n\n- name: Query an EPR policy\n  cisco.aci.aci_tenant_ep_retention_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    epr_policy: EPRPol1\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all EPR policies\n  cisco.aci.aci_tenant_ep_retention_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_tenant_span_dst_group": {
      "doc": {
        "author": [
          "Dag Wieers (@dagwieers)",
          "Shreyas Srish (@shrsr)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage SPAN destination groups on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_tenant_span_dst_group.py",
        "has_action": false,
        "module": "aci_tenant_span_dst_group",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description of the SPAN destination group."
            ],
            "type": "str"
          },
          "destination_epg": {
            "description": [
              "The destination end point group."
            ],
            "suboptions": {
              "ap": {
                "description": [
                  "The name of application profile."
                ],
                "type": "str"
              },
              "epg": {
                "description": [
                  "The name of the end point group."
                ],
                "type": "str"
              },
              "tenant": {
                "aliases": [
                  "tenant_name"
                ],
                "description": [
                  "The name of the tenant."
                ],
                "type": "str"
              }
            },
            "type": "dict"
          },
          "destination_group": {
            "aliases": [
              "name",
              "dst_group"
            ],
            "description": [
              "The name of the SPAN destination group."
            ],
            "type": "str"
          },
          "destination_ip": {
            "description": [
              "The destination IP address."
            ],
            "type": "str"
          },
          "dscp": {
            "choices": [
              "CS0",
              "CS1",
              "CS2",
              "CS3",
              "CS4",
              "CS5",
              "CS6",
              "CS7",
              "EF",
              "VA",
              "AF11",
              "AF12",
              "AF13",
              "AF21",
              "AF22",
              "AF23",
              "AF31",
              "AF32",
              "AF33",
              "AF41",
              "AF42",
              "AF43",
              "unspecified"
            ],
            "description": [
              "The DSCP value for sending the monitored packets using ERSPAN."
            ],
            "type": "str"
          },
          "flow_id": {
            "description": [
              "The flow ID of the SPAN packet."
            ],
            "type": "int"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "mtu": {
            "description": [
              "The MTU truncation size for the packets."
            ],
            "type": "int"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "source_ip": {
            "description": [
              "The source IP address or prefix."
            ],
            "type": "str"
          },
          "span_version": {
            "choices": [
              "version_1",
              "version_2"
            ],
            "description": [
              "SPAN version."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "ttl": {
            "description": [
              "The time to live of the span session packets."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "version_enforced": {
            "description": [
              "Enforce SPAN version."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(span:DestGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage SPAN destination groups (span:DestGrp)"
      },
      "examples": "\n- name: Add SPAN destination group\n  cisco.aci.aci_tenant_span_dst_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Tenant1\n    destination_epg:\n        tenant: Test1\n        ap: ap1\n        epg: ep1\n    destination_group: group1\n    description: Test span\n    destination_ip: 10.0.0.1\n    source_ip: 10.0.2.1\n    version_enforced: false\n    span_version: version_1\n    ttl: 2\n    mtu: 1500\n    flow_id: 1\n    dscp: CS1\n    state: present\n  delegate_to: localhost\n\n- name: Remove SPAN destination group\n  cisco.aci.aci_tenant_span_dst_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Tenant1\n    destination_group: group1\n    state: absent\n  delegate_to: localhost\n\n- name: Query SPAN destination group\n  cisco.aci.aci_tenant_span_dst_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: Tenant1\n    destination_group: group1\n    state: query\n  delegate_to: localhost\n\n- name: Query all SPAN destination groups\n  cisco.aci.aci_tenant_span_dst_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_tenant_span_src_group": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage SPAN source groups on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_tenant_span_src_group.py",
        "has_action": false,
        "module": "aci_tenant_span_src_group",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "admin_state": {
            "description": [
              "Enable or disable the span sources.",
              "The APIC defaults to C(yes) when unset during creation."
            ],
            "type": "bool"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for Span source group."
            ],
            "type": "str"
          },
          "dst_group": {
            "description": [
              "The Span destination group to associate with the source group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "src_group": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name of the Span source group."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(span:SrcGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage SPAN source groups (span:SrcGrp)"
      },
      "examples": "\n- cisco.aci.aci_tenant_span_src_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    src_group: \"{{ src_group }}\"\n    dst_group: \"{{ dst_group }}\"\n    admin_state: \"{{ admin_state }}\"\n    description: \"{{ description }}\"\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_tenant_span_src_group_to_dst_group": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind SPAN source groups to associated destination groups on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_tenant_span_src_group_to_dst_group.py",
        "has_action": false,
        "module": "aci_tenant_span_src_group_to_dst_group",
        "notes": [
          "The C(tenant), C(src_group), and C(dst_group) must exist before using this module in your playbook. The M(cisco.aci.aci_tenant), M(cisco.aci.aci_tenant_span_src_group), and M(cisco.aci.aci_tenant_span_dst_group) modules can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for Span source group to destination group binding."
            ],
            "type": "str"
          },
          "dst_group": {
            "description": [
              "The Span destination group to associate with the source group."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "src_group": {
            "description": [
              "The name of the Span source group."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_tenant_span_src_group"
          },
          {
            "module": "cisco.aci.aci_tenant_span_dst_group"
          },
          {
            "description": "More information about the internal APIC class B(span:SrcGrp).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Bind SPAN source groups to destination groups (span:SpanLbl)"
      },
      "examples": "\n- cisco.aci.aci_tenant_span_src_group_to_dst_group:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    src_group: \"{{ src_group }}\"\n    dst_group: \"{{ dst_group }}\"\n    description: \"{{ description }}\"\n  delegate_to: localhost\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vlan_pool": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)",
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage VLAN pools on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vlan_pool.py",
        "has_action": false,
        "module": "aci_vlan_pool",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the C(pool)."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pool": {
            "aliases": [
              "name",
              "pool_name"
            ],
            "description": [
              "The name of the pool."
            ],
            "type": "str"
          },
          "pool_allocation_mode": {
            "aliases": [
              "allocation_mode",
              "mode"
            ],
            "choices": [
              "dynamic",
              "static"
            ],
            "description": [
              "The method used for allocating VLANs to resources."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_encap_pool"
          },
          {
            "module": "cisco.aci.aci_vlan_pool_encap_block"
          },
          {
            "description": "More information about the internal APIC class B(fvns:VlanInstP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage VLAN pools (fvns:VlanInstP)"
      },
      "examples": "\n- name: Add a new VLAN pool\n  cisco.aci.aci_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_allocation_mode: dynamic\n    description: Production VLANs\n    state: present\n  delegate_to: localhost\n\n- name: Remove a VLAN pool\n  cisco.aci.aci_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_allocation_mode: dynamic\n    state: absent\n  delegate_to: localhost\n\n- name: Query a VLAN pool\n  cisco.aci.aci_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_allocation_mode: dynamic\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all VLAN pools\n  cisco.aci.aci_vlan_pool:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vlan_pool_encap_block": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)",
          "Dag Wieers (@dagwieers)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage VLAN encap blocks that are assigned to VLAN pools on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vlan_pool_encap_block.py",
        "has_action": false,
        "module": "aci_vlan_pool_encap_block",
        "notes": [
          "The C(pool) must exist in order to add or delete a encap block."
        ],
        "options": {
          "allocation_mode": {
            "aliases": [
              "mode"
            ],
            "choices": [
              "dynamic",
              "inherit",
              "static"
            ],
            "description": [
              "The method used for allocating encaps to resources."
            ],
            "type": "str"
          },
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "block_end": {
            "aliases": [
              "end"
            ],
            "description": [
              "The end of encap block."
            ],
            "type": "int"
          },
          "block_name": {
            "aliases": [
              "name"
            ],
            "description": [
              "The name to give to the encap block."
            ],
            "type": "str"
          },
          "block_start": {
            "aliases": [
              "start"
            ],
            "description": [
              "The start of the encap block."
            ],
            "type": "int"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the pool encap block."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "pool": {
            "aliases": [
              "pool_name"
            ],
            "description": [
              "The name of the pool that the encap block should be assigned to."
            ],
            "type": "str"
          },
          "pool_allocation_mode": {
            "aliases": [
              "pool_mode"
            ],
            "choices": [
              "dynamic",
              "static"
            ],
            "description": [
              "The method used for allocating encaps to resources."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_encap_pool_range"
          },
          {
            "module": "cisco.aci.aci_vlan_pool"
          },
          {
            "description": "More information about the internal APIC class B(fvns:EncapBlk).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage encap blocks assigned to VLAN pools (fvns:EncapBlk)"
      },
      "examples": "\n- name: Add a new VLAN encap block\n  cisco.aci.aci_vlan_pool_encap_block:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_allocation_mode: static\n    block_start: 20\n    block_end: 50\n    state: present\n  delegate_to: localhost\n\n- name: Remove a VLAN encap block\n  cisco.aci.aci_vlan_pool_encap_block:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_allocation_mode: static\n    block_start: 20\n    block_end: 50\n    state: absent\n  delegate_to: localhost\n\n- name: Query a VLAN encap block\n  cisco.aci.aci_vlan_pool_encap_block:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_allocation_mode: static\n    block_start: 20\n    block_end: 50\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query a VLAN pool for encap blocks\n  cisco.aci.aci_vlan_pool_encap_block:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    pool: production\n    pool_allocation_mode: static\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all VLAN encap blocks\n  cisco.aci.aci_vlan_pool_encap_block:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vmm_controller": {
      "doc": {
        "author": [
          "Manuel Widmer (@lumean)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage vCenter virtual domains on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vmm_controller.py",
        "has_action": false,
        "module": "aci_vmm_controller",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "controller_hostname": {
            "aliases": [],
            "description": [
              "Hostname or IP of the controller."
            ],
            "type": "str"
          },
          "credentials": {
            "description": [
              "Name of the VMM credentials to be used"
            ],
            "type": "str"
          },
          "datacenter": {
            "description": [
              "Name of the data center, as seen in vCenter"
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "domain_name",
              "domain_profile"
            ],
            "description": [
              "Name of the virtual domain profile."
            ],
            "type": "str"
          },
          "dvs_version": {
            "aliases": [],
            "choices": [
              "unmanaged",
              "5.1",
              "5.5",
              "6.0",
              "6.5",
              "6.6",
              "7.0"
            ],
            "description": [
              "Version of the VMware DVS."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "inband_management_epg": {
            "description": [
              "Name of the management EPG to be used by the controller. Only supports in-band management EPGs for now."
            ],
            "type": "str"
          },
          "name": {
            "aliases": [],
            "description": [
              "Name of VMM Controller."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "stats_collection": {
            "aliases": [],
            "choices": [
              "enabled",
              "disabled"
            ],
            "default": "disabled",
            "description": [
              "Whether stats collection is enabled."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vm_provider": {
            "choices": [
              "cloudfoundry",
              "kubernetes",
              "microsoft",
              "openshift",
              "openstack",
              "redhat",
              "vmware"
            ],
            "description": [
              "The VM platform for VMM Domains.",
              "Support for Kubernetes was added in ACI v3.0.",
              "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "module": "cisco.aci.aci_vmm_credential"
          },
          {
            "description": "More information about the internal APIC classes B(vmm:DomP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage VMM Controller for virtual domains profiles (vmm:CtrlrP)"
      },
      "examples": "\n- name: Add controller to VMware VMM domain\n  cisco.aci.aci_vmm_controller:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    name: vCenter1\n    controller_hostname: 10.1.1.1\n    dvs_version: unmanaged\n    vm_provider: vmware\n    credentials: vCenterCredentials1\n    datacenter: DC1\n    state: present\n\n- name: Remove controller from VMware VMM domain\n  cisco.aci.aci_vmm_controller:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    name: vCenter1\n    vm_provider: vmware\n    state: absent\n\n- name: Query a specific VMware VMM controller\n  cisco.aci.aci_vmm_controller:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    name: vCenter1\n    vm_provider: vmware\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all VMware VMM controller\n  cisco.aci.aci_vmm_controller:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    vm_provider: vmware\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vmm_credential": {
      "doc": {
        "author": [
          "Jason Juenger (@jasonjuenger)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage virtual domain credential profiles on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vmm_credential.py",
        "has_action": false,
        "module": "aci_vmm_credential",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "credential_password": {
            "aliases": [],
            "description": [
              "VMM controller password."
            ],
            "type": "str"
          },
          "credential_username": {
            "aliases": [],
            "description": [
              "VMM controller username."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "Description for the tenant."
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "domain_name",
              "domain_profile",
              "name"
            ],
            "description": [
              "Name of the virtual domain profile."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "name": {
            "aliases": [
              "credential_name",
              "credential_profile"
            ],
            "description": [
              "Name of the credential profile."
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vm_provider": {
            "choices": [
              "cloudfoundry",
              "kubernetes",
              "microsoft",
              "openshift",
              "openstack",
              "redhat",
              "vmware"
            ],
            "description": [
              "The VM platform for VMM Domains.",
              "Support for Kubernetes was added in ACI v3.0.",
              "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "description": "More information about the internal APIC classes B(vmm:DomP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage virtual domain credential profiles (vmm:UsrAccP)"
      },
      "examples": "\n- name: Add credential to VMware VMM domain\n  cisco.aci.aci_vmm_credential:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    description: secure credential\n    name: vCenterCredential\n    credential_username: vCenterUsername\n    credential_password: vCenterPassword\n    vm_provider: vmware\n    state: present\n\n- name: Remove credential from VMware VMM domain\n  cisco.aci.aci_vmm_credential:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    name: myCredential\n    vm_provider: vmware\n    state: absent\n\n- name: Query a specific VMware VMM credential\n  cisco.aci.aci_vmm_credential:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    name: vCenterCredential\n    vm_provider: vmware\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all VMware VMM credentials\n  cisco.aci.aci_vmm_credential:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    vm_provider: vmware\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vmm_uplink": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage VMM Uplinks on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vmm_uplink.py",
        "has_action": false,
        "module": "aci_vmm_uplink",
        "notes": [
          "The C(domain) used must exist before using this module in your playbook. The M(cisco.aci.aci_domain) module can be used for this."
        ],
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "domain": {
            "description": [
              "Name of the VMM domain"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "uplink_id": {
            "description": [
              "Numerical ID of the uplink"
            ],
            "type": "int"
          },
          "uplink_name": {
            "description": [
              "Name of the uplink"
            ],
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "module": "cisco.aci.aci_vmm_uplink_container"
          },
          {
            "description": "More information about the internal APIC class B(vmm:UplinkP).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage VMM uplinks (vmm:UplinkP)"
      },
      "examples": "\n- name: Add a new uplink\n  cisco.aci.aci_vmm_uplink:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: my_vmm_domain\n    uplink_id: 1\n    uplink_name: uplink1\n    state: present\n  delegate_to: localhost\n\n- name: Delete uplink container\n  cisco.aci.aci_vmm_uplink:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: my_vmm_domain\n    uplink_id: 1\n    state: absent\n  delegate_to: localhost\n\n- name: Query uplink container\n  cisco.aci.aci_vmm_uplink_container:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: my_vmm_domain\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vmm_uplink_container": {
      "doc": {
        "author": [
          "Tim Cragg (@timcragg)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage VMM Uplink containers on Cisco ACI fabrics.",
          "Individual uplinks within the container are managed using the M(aci_vmm_uplink) module"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vmm_uplink_container.py",
        "has_action": false,
        "module": "aci_vmm_uplink_container",
        "notes": [
          "The C(domain) used must exist before using this module in your playbook. The M(cisco.aci.aci_domain) module can be used for this."
        ],
        "options": {
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "domain": {
            "description": [
              "Name of the VMM domain"
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "num_of_uplinks": {
            "description": [
              "Number of uplinks in the container"
            ],
            "type": "int"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "module": "cisco.aci.aci_vrf"
          },
          {
            "description": "More information about the internal APIC class B(vmm:UplinkPCont).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage VMM uplink containers (vmm:UplinkPCont)"
      },
      "examples": "\n- name: Add a new uplink container\n  cisco.aci.aci_vmm_uplink_container:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: my_vmm_domain\n    num_of_uplinks: 2\n    state: present\n  delegate_to: localhost\n\n- name: Delete uplink container\n  cisco.aci.aci_vmm_uplink_container:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: my_vmm_domain\n    state: absent\n  delegate_to: localhost\n\n- name: Query uplink container\n  cisco.aci.aci_vmm_uplink_container:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: my_vmm_domain\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vmm_vswitch_policy": {
      "doc": {
        "author": [
          "Manuel Widmer (@lumean)",
          "Anvitha Jain (@anvitha-jain)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage vSwitch policy for VMware VMM domains on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vmm_vswitch_policy.py",
        "has_action": false,
        "module": "aci_vmm_vswitch_policy",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "cdp_policy": {
            "description": [
              "Name of the fabric access CDP policy."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "domain": {
            "aliases": [
              "domain_name",
              "domain_profile"
            ],
            "description": [
              "Name of the virtual domain profile."
            ],
            "type": "str"
          },
          "enhanced_lag": {
            "description": [
              "List of enhanced LAG policies if vSwitch needs to be connected via VPC."
            ],
            "elements": "dict",
            "suboptions": {
              "lacp_mode": {
                "choices": [
                  "active",
                  "passive"
                ],
                "description": [
                  "LACP port channel mode."
                ],
                "type": "str"
              },
              "load_balancing_mode": {
                "choices": [
                  "dst-ip",
                  "dst-ip-l4port",
                  "dst-ip-vlan",
                  "dst-ip-l4port-vlan",
                  "dst-mac",
                  "dst-l4port",
                  "src-ip",
                  "src-ip-l4port",
                  "src-ip-vlan",
                  "src-ip-l4port-vlan",
                  "src-mac",
                  "src-l4port",
                  "src-dst-ip",
                  "src-dst-ip-l4port",
                  "src-dst-ip-vlan",
                  "src-dst-ip-l4port-vlan",
                  "src-dst-mac",
                  "src-dst-l4port",
                  "src-port-id",
                  "vlan"
                ],
                "description": [
                  "Load balancing mode of the port channel.",
                  "See also https://pubhub.devnetcloud.com/media/apic-mim-ref-421/docs/MO-lacpEnhancedLagPol.html."
                ],
                "type": "str"
              },
              "name": {
                "description": [
                  "Name of the enhanced Lag policy."
                ],
                "required": true,
                "type": "str"
              },
              "number_uplinks": {
                "description": [
                  "Number of uplinks, must be between 2 and 8."
                ],
                "type": "int"
              }
            },
            "type": "list"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "lldp_policy": {
            "description": [
              "Name of the fabric access LLDP policy."
            ],
            "type": "str"
          },
          "mtu_policy": {
            "description": [
              "VMWare only.",
              "Name of the fabric access MTU policy."
            ],
            "type": "str"
          },
          "netflow_exporter": {
            "description": [
              "Parameters for the netflow exporter policy"
            ],
            "suboptions": {
              "active_flow_timeout": {
                "description": [
                  "Specifies the delay in seconds that NetFlow waits after the active flow is initiated, after which NetFlow sends the collected data.",
                  "The range is from 60 to 3600. The default value is 60"
                ],
                "type": "int"
              },
              "idle_flow_timeout": {
                "description": [
                  "Specifies the delay in seconds that NetFlow waits after the idle flow is initiated, after which NetFlow sends the collected data.",
                  "The range is from 10 to 600. The default value is 15."
                ],
                "type": "int"
              },
              "name": {
                "description": [
                  "Name of the netflow exporter policy"
                ],
                "required": true,
                "type": "str"
              },
              "sampling_rate": {
                "description": [
                  "(VDS only) Specifies how many packets that NetFlow will drop after every collected packet. If you specify a value of 0, then NetFlow does not drop any packets.",
                  "The range is from 0 to 1000. The default value is 0."
                ],
                "type": "int"
              }
            },
            "type": "dict"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "port_channel_policy": {
            "description": [
              "Name of the fabric access port-channel policy."
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "stp_policy": {
            "description": [
              "SCVMM only.",
              "Name of the STP policy."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vm_provider": {
            "choices": [
              "cloudfoundry",
              "kubernetes",
              "microsoft",
              "openshift",
              "openstack",
              "redhat",
              "vmware"
            ],
            "description": [
              "The VM platform for VMM Domains.",
              "Support for Kubernetes was added in ACI v3.0.",
              "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_domain"
          },
          {
            "description": "More information about the internal APIC classes B(vmm:DomP)",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage vSwitch policy for VMware virtual domains profiles (vmm:DomP)"
      },
      "examples": "\n- name: Add a vSwitch policy with LLDP\n  cisco.aci.aci_vmm_vswitch_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    lldp_policy: LLDP_ENABLED\n    domain: vmware_dom\n    vm_provider: vmware\n    state: present\n\n- name: Add a vSwitch policy with link aggregation\n  cisco.aci.aci_vmm_vswitch_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    port_channel_policy: LACP_ACTIVE\n    lldp_policy: LLDP_ENABLED\n    domain: vmware_dom\n    vm_provider: vmware\n    enhanced_lag:\n      - name: my_lacp_uplink\n        lacp_mode: active\n        load_balancing_mode: src-dst-ip\n        number_uplinks: 2\n    state: present\n\n- name: Remove vSwitch Policy from VMware VMM domain\n  cisco.aci.aci_vmm_vswitch_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    vm_provider: vmware\n    state: absent\n\n- name: Query the vSwitch policy of the VMWare domain\n  cisco.aci.aci_vmm_vswitch_policy:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    domain: vmware_dom\n    vm_provider: vmware\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "community"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vrf": {
      "doc": {
        "author": [
          "Jacob McGill (@jmcgill298)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Manage contexts or VRFs on Cisco ACI fabrics.",
          "Each context is a private network associated to a tenant, i.e. VRF.",
          "Enable Preferred Groups for VRF"
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vrf.py",
        "has_action": false,
        "module": "aci_vrf",
        "notes": [
          "The C(tenant) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module can be used for this."
        ],
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "description": {
            "aliases": [
              "descr"
            ],
            "description": [
              "The description for the VRF."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "match_type": {
            "choices": [
              "all",
              "at_least_one",
              "at_most_one",
              "none"
            ],
            "description": [
              "Configures match type for contracts under vzAny"
            ],
            "type": "str"
          },
          "name_alias": {
            "description": [
              "The alias for the current object. This relates to the nameAlias field in ACI."
            ],
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "owner_key": {
            "description": [
              "User-defined string for the ownerKey attribute of an ACI object.",
              "This attribute represents a key for enabling clients to own their data for entity correlation.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
            ],
            "type": "str"
          },
          "owner_tag": {
            "description": [
              "User-defined string for the ownerTag attribute of an ACI object.",
              "This attribute represents a tag for enabling clients to add their own data.",
              "For example, to indicate who created this object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "policy_control_direction": {
            "choices": [
              "egress",
              "ingress"
            ],
            "description": [
              "Determines if the policy should be enforced by the fabric on ingress or egress."
            ],
            "type": "str"
          },
          "policy_control_preference": {
            "choices": [
              "enforced",
              "unenforced"
            ],
            "description": [
              "Determines if the fabric should enforce contract policies to allow routing and packet forwarding."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "preferred_group": {
            "choices": [
              "enabled",
              "disabled"
            ],
            "description": [
              "Enables preferred groups for the VRF under vzAny"
            ],
            "type": "str"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant the VRF should belong to."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vrf": {
            "aliases": [
              "context",
              "name",
              "vrf_name"
            ],
            "description": [
              "The name of the VRF."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "description": "More information about the internal APIC class B(fv:Ctx).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Manage contexts or VRFs (fv:Ctx)"
      },
      "examples": "\n- name: Add a new VRF to a tenant\n  cisco.aci.aci_vrf:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    vrf: vrf_lab\n    tenant: lab_tenant\n    descr: Lab VRF\n    policy_control_preference: enforced\n    policy_control_direction: ingress\n    state: present\n  delegate_to: localhost\n\n- name: Remove a VRF for a tenant\n  cisco.aci.aci_vrf:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    vrf: vrf_lab\n    tenant: lab_tenant\n    state: absent\n  delegate_to: localhost\n\n- name: Query a VRF of a tenant\n  cisco.aci.aci_vrf:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    vrf: vrf_lab\n    tenant: lab_tenant\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all VRFs\n  cisco.aci.aci_vrf:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  },
  {
    "cisco.aci.aci_vzany_to_contract": {
      "doc": {
        "author": [
          "Marcel Zehnder (@maercu)"
        ],
        "collection": "cisco.aci",
        "description": [
          "Bind contracts to vzAny on Cisco ACI fabrics."
        ],
        "filename": "/home/cisco/.ansible/collections/ansible_collections/cisco/aci/plugins/modules/aci_vzany_to_contract.py",
        "has_action": false,
        "module": "aci_vzany_to_contract",
        "options": {
          "annotation": {
            "description": [
              "User-defined string for annotating an object.",
              "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
            ],
            "type": "str"
          },
          "certificate_name": {
            "aliases": [
              "cert_name"
            ],
            "description": [
              "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
              "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
              "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
              "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
            ],
            "type": "str"
          },
          "contract": {
            "aliases": [
              "contract_name"
            ],
            "description": [
              "The name of the contract or contract interface."
            ],
            "type": "str"
          },
          "host": {
            "aliases": [
              "hostname"
            ],
            "description": [
              "IP Address or hostname of APIC resolvable by Ansible control host.",
              "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
            ],
            "required": true,
            "type": "str"
          },
          "output_level": {
            "choices": [
              "debug",
              "info",
              "normal"
            ],
            "default": "normal",
            "description": [
              "Influence the output of this ACI module.",
              "C(normal) means the standard output, incl. C(current) dict",
              "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
              "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
            ],
            "type": "str"
          },
          "output_path": {
            "description": [
              "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
              "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
            ],
            "type": "str"
          },
          "password": {
            "description": [
              "The password to use for authentication.",
              "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
              "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
            ],
            "type": "str"
          },
          "port": {
            "description": [
              "Port number to be used for REST connection.",
              "The default value depends on parameter C(use_ssl).",
              "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
            ],
            "type": "int"
          },
          "private_key": {
            "aliases": [
              "cert_key"
            ],
            "description": [
              "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
              "This value also influences the default C(certificate_name) that is used.",
              "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
              "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) or C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ],
            "type": "str"
          },
          "state": {
            "choices": [
              "absent",
              "present",
              "query"
            ],
            "default": "present",
            "description": [
              "Use C(present) or C(absent) for adding or removing.",
              "Use C(query) for listing an object or multiple objects."
            ],
            "type": "str"
          },
          "tenant": {
            "aliases": [
              "tenant_name"
            ],
            "description": [
              "The name of the Tenant."
            ],
            "type": "str"
          },
          "timeout": {
            "default": 30,
            "description": [
              "The socket level timeout in seconds.",
              "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
            ],
            "type": "int"
          },
          "type": {
            "aliases": [
              "contract_type"
            ],
            "choices": [
              "provider",
              "consumer",
              "interface"
            ],
            "description": [
              "Determines if this is a provided or consumed contract or a consumed contract interface."
            ],
            "required": true,
            "type": "str"
          },
          "use_proxy": {
            "default": true,
            "description": [
              "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
            ],
            "type": "bool"
          },
          "use_ssl": {
            "default": true,
            "description": [
              "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
              "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
            ],
            "type": "bool"
          },
          "username": {
            "aliases": [
              "user"
            ],
            "default": "admin",
            "description": [
              "The username to use for authentication.",
              "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
            ],
            "type": "str"
          },
          "validate_certs": {
            "default": true,
            "description": [
              "If C(no), SSL certificates will not be validated.",
              "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
              "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
            ],
            "type": "bool"
          },
          "vrf": {
            "aliases": [
              "context",
              "vrf_name"
            ],
            "description": [
              "The name of the VRF."
            ],
            "type": "str"
          }
        },
        "seealso": [
          {
            "module": "cisco.aci.aci_tenant"
          },
          {
            "module": "cisco.aci.aci_vrf"
          },
          {
            "module": "cisco.aci.aci_contract"
          },
          {
            "description": "More information about the internal APIC classes B(fv:RsCons) and B(fv:RsProv).",
            "link": "https://developer.cisco.com/docs/apic-mim-ref/",
            "name": "APIC Management Information Model reference"
          },
          {
            "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
            "ref": "aci_guide"
          },
          {
            "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
            "ref": "aci_dev_guide"
          }
        ],
        "short_description": "Attach contracts to vzAny (vz:RsAnyToProv, vz:RsAnyToCons, vz:RsAnyToConsIf)"
      },
      "examples": "\n- name: Add a new contract to vzAny\n  cisco.aci.aci_vzany_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: vzatest\n    vrf: vzatest\n    contract: vzatest_http\n    type: provider\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing contract from vzAny\n  cisco.aci.aci_vzany_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: vzatest\n    vrf: vzatest\n    contract: vzatest_http\n    type: provider\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific contract to vzAny binding\n  cisco.aci.aci_vzany_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: vzatest\n    vrf: vzatest\n    contract: vzatest_http\n    type: provider\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all provider contract to vzAny bindings\n  cisco.aci.aci_vzany_to_contract:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    type: provider\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
      "metadata": {
        "metadata_version": "1.1",
        "status": [
          "preview"
        ],
        "supported_by": "certified"
      },
      "return": {
        "current": {
          "description": "The existing configuration from the APIC after the module has finished",
          "returned": "success",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production environment",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "error": {
          "description": "The error information as returned from the APIC",
          "returned": "failure",
          "sample": {
            "code": "122",
            "text": "unknown managed object class foo"
          },
          "type": "dict"
        },
        "filter_string": {
          "description": "The filter string used for the request",
          "returned": "failure or debug",
          "sample": "?rsp-prop-include=config-only",
          "type": "str"
        },
        "method": {
          "description": "The HTTP method used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "POST",
          "type": "str"
        },
        "previous": {
          "description": "The original configuration from the APIC before the module has started",
          "returned": "info",
          "sample": [
            {
              "fvTenant": {
                "attributes": {
                  "descr": "Production",
                  "dn": "uni/tn-production",
                  "name": "production",
                  "nameAlias": "",
                  "ownerKey": "",
                  "ownerTag": ""
                }
              }
            }
          ],
          "type": "list"
        },
        "proposed": {
          "description": "The assembled configuration from the user-provided parameters",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment",
                "name": "production"
              }
            }
          },
          "type": "dict"
        },
        "raw": {
          "description": "The raw output returned by the APIC REST API (xml or json)",
          "returned": "parse error",
          "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
          "type": "str"
        },
        "response": {
          "description": "The HTTP response from the APIC",
          "returned": "failure or debug",
          "sample": "OK (30 bytes)",
          "type": "str"
        },
        "sent": {
          "description": "The actual/minimal configuration pushed to the APIC",
          "returned": "info",
          "sample": {
            "fvTenant": {
              "attributes": {
                "descr": "Production environment"
              }
            }
          },
          "type": "list"
        },
        "status": {
          "description": "The HTTP status from the APIC",
          "returned": "failure or debug",
          "sample": 200,
          "type": "int"
        },
        "url": {
          "description": "The HTTP url used for the request to the APIC",
          "returned": "failure or debug",
          "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
          "type": "str"
        }
      }
    }
  }
]
